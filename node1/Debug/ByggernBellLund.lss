
ByggernBellLund.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000060  00800100  00000da6  00000e3a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000da6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800160  00800160  00000e9a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e9a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000220  00000000  00000000  00000ef6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001ebb  00000000  00000000  00001116  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000abb  00000000  00000000  00002fd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a6c  00000000  00000000  00003a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000608  00000000  00000000  000044f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005e5  00000000  00000000  00004b00  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001714  00000000  00000000  000050e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000270  00000000  00000000  000067f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__vector_14>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e6 ea       	ldi	r30, 0xA6	; 166
  84:	fd e0       	ldi	r31, 0x0D	; 13
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 36       	cpi	r26, 0x60	; 96
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a0 e6       	ldi	r26, 0x60	; 96
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 36       	cpi	r26, 0x6A	; 106
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  a6:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <bus_init>:
  ae:	80 b7       	in	r24, 0x30	; 48
  b0:	80 62       	ori	r24, 0x20	; 32
  b2:	80 bf       	out	0x30, r24	; 48
  b4:	85 b7       	in	r24, 0x35	; 53
  b6:	80 68       	ori	r24, 0x80	; 128
  b8:	85 bf       	out	0x35, r24	; 53
  ba:	08 95       	ret

000000bc <main>:
  bc:	cf 93       	push	r28
  be:	df 93       	push	r29
  c0:	cd b7       	in	r28, 0x3d	; 61
  c2:	de b7       	in	r29, 0x3e	; 62
  c4:	66 97       	sbiw	r28, 0x16	; 22
  c6:	0f b6       	in	r0, 0x3f	; 63
  c8:	f8 94       	cli
  ca:	de bf       	out	0x3e, r29	; 62
  cc:	0f be       	out	0x3f, r0	; 63
  ce:	cd bf       	out	0x3d, r28	; 61
  d0:	80 e8       	ldi	r24, 0x80	; 128
  d2:	95 e2       	ldi	r25, 0x25	; 37
  d4:	0e 94 1c 02 	call	0x438	; 0x438 <uartInit>
  d8:	0e 94 57 00 	call	0xae	; 0xae <bus_init>
  dc:	0e 94 6f 01 	call	0x2de	; 0x2de <oled_init>
  e0:	0e 94 b7 00 	call	0x16e	; 0x16e <CAN_init>
  e4:	0f 2e       	mov	r0, r31
  e6:	f6 e0       	ldi	r31, 0x06	; 6
  e8:	cf 2e       	mov	r12, r31
  ea:	f1 e0       	ldi	r31, 0x01	; 1
  ec:	df 2e       	mov	r13, r31
  ee:	f0 2d       	mov	r31, r0
  f0:	aa 24       	eor	r10, r10
  f2:	a3 94       	inc	r10
  f4:	b1 2c       	mov	r11, r1
  f6:	0f 2e       	mov	r0, r31
  f8:	f8 e6       	ldi	r31, 0x68	; 104
  fa:	8f 2e       	mov	r8, r31
  fc:	f0 2d       	mov	r31, r0
  fe:	68 94       	set
 100:	99 24       	eor	r9, r9
 102:	92 f8       	bld	r9, 2
 104:	0f 2e       	mov	r0, r31
 106:	ff e0       	ldi	r31, 0x0F	; 15
 108:	ef 2e       	mov	r14, r31
 10a:	f1 e0       	ldi	r31, 0x01	; 1
 10c:	ff 2e       	mov	r15, r31
 10e:	f0 2d       	mov	r31, r0
 110:	0e e1       	ldi	r16, 0x1E	; 30
 112:	11 e0       	ldi	r17, 0x01	; 1
 114:	df 92       	push	r13
 116:	cf 92       	push	r12
 118:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <printf>
 11c:	bd 86       	std	Y+13, r11	; 0x0d
 11e:	ac 86       	std	Y+12, r10	; 0x0c
 120:	8f 86       	std	Y+15, r8	; 0x0f
 122:	9e 86       	std	Y+14, r9	; 0x0e
 124:	ce 01       	movw	r24, r28
 126:	0c 96       	adiw	r24, 0x0c	; 12
 128:	0e 94 c0 00 	call	0x180	; 0x180 <CAN_transmit>
 12c:	8f 85       	ldd	r24, Y+15	; 0x0f
 12e:	1f 92       	push	r1
 130:	8f 93       	push	r24
 132:	ff 92       	push	r15
 134:	ef 92       	push	r14
 136:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <printf>
 13a:	ce 01       	movw	r24, r28
 13c:	01 96       	adiw	r24, 0x01	; 1
 13e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <CAN_receive>
 142:	8c 81       	ldd	r24, Y+4	; 0x04
 144:	1f 92       	push	r1
 146:	8f 93       	push	r24
 148:	1f 93       	push	r17
 14a:	0f 93       	push	r16
 14c:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	2f ef       	ldi	r18, 0xFF	; 255
 152:	8f ef       	ldi	r24, 0xFF	; 255
 154:	9e e0       	ldi	r25, 0x0E	; 14
 156:	21 50       	subi	r18, 0x01	; 1
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	90 40       	sbci	r25, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <main+0x9a>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0xa4>
 160:	00 00       	nop
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	de bf       	out	0x3e, r29	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	cd bf       	out	0x3d, r28	; 61
 16c:	d3 cf       	rjmp	.-90     	; 0x114 <main+0x58>

0000016e <CAN_init>:
#include "CAN_driver.h"
#include "MCP_driver.h"
#include "MCP2515.h"

void CAN_init(){
	MCP_init();
 16e:	0e 94 21 01 	call	0x242	; 0x242 <MCP_init>
	//Enter config mode
	MCP_reset();
 172:	0e 94 19 01 	call	0x232	; 0x232 <MCP_reset>
	//set loopback mode on CANCTRL
	MCP_write(MCP_CANCTRL, 0b01000000);
 176:	60 e4       	ldi	r22, 0x40	; 64
 178:	8f e0       	ldi	r24, 0x0F	; 15
 17a:	0e 94 42 01 	call	0x284	; 0x284 <MCP_write>
 17e:	08 95       	ret

00000180 <CAN_transmit>:
}

void CAN_transmit(Message *m){
 180:	ef 92       	push	r14
 182:	ff 92       	push	r15
 184:	0f 93       	push	r16
 186:	1f 93       	push	r17
 188:	cf 93       	push	r28
 18a:	df 93       	push	r29
 18c:	7c 01       	movw	r14, r24
	//Write id to register
	MCP_write(MCP_TXB0SIDL,m->id);
 18e:	fc 01       	movw	r30, r24
 190:	60 81       	ld	r22, Z
 192:	82 e3       	ldi	r24, 0x32	; 50
 194:	0e 94 42 01 	call	0x284	; 0x284 <MCP_write>
	//Write length to register
	MCP_write(MCP_TXB0DLC, m->length);
 198:	f7 01       	movw	r30, r14
 19a:	62 81       	ldd	r22, Z+2	; 0x02
 19c:	85 e3       	ldi	r24, 0x35	; 53
 19e:	0e 94 42 01 	call	0x284	; 0x284 <MCP_write>
	//Write data to register
	for (int i = 0; i < m->length; i++){
 1a2:	f7 01       	movw	r30, r14
 1a4:	82 81       	ldd	r24, Z+2	; 0x02
 1a6:	88 23       	and	r24, r24
 1a8:	91 f0       	breq	.+36     	; 0x1ce <CAN_transmit+0x4e>
 1aa:	87 01       	movw	r16, r14
 1ac:	0d 5f       	subi	r16, 0xFD	; 253
 1ae:	1f 4f       	sbci	r17, 0xFF	; 255
 1b0:	c0 e0       	ldi	r28, 0x00	; 0
 1b2:	d0 e0       	ldi	r29, 0x00	; 0
		MCP_write(MCP_TXB0D0, m->data[i]);
 1b4:	f8 01       	movw	r30, r16
 1b6:	61 91       	ld	r22, Z+
 1b8:	8f 01       	movw	r16, r30
 1ba:	86 e3       	ldi	r24, 0x36	; 54
 1bc:	0e 94 42 01 	call	0x284	; 0x284 <MCP_write>
	//Write id to register
	MCP_write(MCP_TXB0SIDL,m->id);
	//Write length to register
	MCP_write(MCP_TXB0DLC, m->length);
	//Write data to register
	for (int i = 0; i < m->length; i++){
 1c0:	21 96       	adiw	r28, 0x01	; 1
 1c2:	f7 01       	movw	r30, r14
 1c4:	22 81       	ldd	r18, Z+2	; 0x02
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	c2 17       	cp	r28, r18
 1ca:	d3 07       	cpc	r29, r19
 1cc:	9c f3       	brlt	.-26     	; 0x1b4 <CAN_transmit+0x34>
		MCP_write(MCP_TXB0D0, m->data[i]);
	}
	
	//Send SPI RTS
	MCP_rts(0);
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	0e 94 56 01 	call	0x2ac	; 0x2ac <MCP_rts>
	
	//set !TXnRTS low of transmit register
}
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	1f 91       	pop	r17
 1da:	0f 91       	pop	r16
 1dc:	ff 90       	pop	r15
 1de:	ef 90       	pop	r14
 1e0:	08 95       	ret

000001e2 <CAN_receive>:

void CAN_receive(Message *m){
 1e2:	ef 92       	push	r14
 1e4:	ff 92       	push	r15
 1e6:	0f 93       	push	r16
 1e8:	1f 93       	push	r17
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	7c 01       	movw	r14, r24
	m->length = MCP_read(MCP_RBB0DLC);
 1f0:	85 e6       	ldi	r24, 0x65	; 101
 1f2:	0e 94 30 01 	call	0x260	; 0x260 <MCP_read>
 1f6:	f7 01       	movw	r30, r14
 1f8:	82 83       	std	Z+2, r24	; 0x02
	for(int i = 0; i < m->length; i++){
 1fa:	88 23       	and	r24, r24
 1fc:	99 f0       	breq	.+38     	; 0x224 <CAN_receive+0x42>
 1fe:	87 01       	movw	r16, r14
 200:	0d 5f       	subi	r16, 0xFD	; 253
 202:	1f 4f       	sbci	r17, 0xFF	; 255
 204:	c0 e0       	ldi	r28, 0x00	; 0
 206:	d0 e0       	ldi	r29, 0x00	; 0
		m->data[i] = MCP_read(MCP_RXB0D0 + i);
 208:	8c 2f       	mov	r24, r28
 20a:	8a 59       	subi	r24, 0x9A	; 154
 20c:	0e 94 30 01 	call	0x260	; 0x260 <MCP_read>
 210:	f8 01       	movw	r30, r16
 212:	81 93       	st	Z+, r24
 214:	8f 01       	movw	r16, r30
	//set !TXnRTS low of transmit register
}

void CAN_receive(Message *m){
	m->length = MCP_read(MCP_RBB0DLC);
	for(int i = 0; i < m->length; i++){
 216:	21 96       	adiw	r28, 0x01	; 1
 218:	f7 01       	movw	r30, r14
 21a:	22 81       	ldd	r18, Z+2	; 0x02
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	c2 17       	cp	r28, r18
 220:	d3 07       	cpc	r29, r19
 222:	94 f3       	brlt	.-28     	; 0x208 <CAN_receive+0x26>
		m->data[i] = MCP_read(MCP_RXB0D0 + i);
	}
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	1f 91       	pop	r17
 22a:	0f 91       	pop	r16
 22c:	ff 90       	pop	r15
 22e:	ef 90       	pop	r14
 230:	08 95       	ret

00000232 <MCP_reset>:
void toggle_cs(uint8_t i){
	if(i){
		SPI_ss_high();
	}
	else{
		SPI_ss_low();
 232:	0e 94 10 02 	call	0x420	; 0x420 <SPI_ss_low>
	}
}

void MCP_reset(){
	toggle_cs(0); //CS low
	SPI_transmit(MCP_RESET); // sen reset command 0b11000000
 236:	80 ec       	ldi	r24, 0xC0	; 192
 238:	0e 94 02 02 	call	0x404	; 0x404 <SPI_transmit>
	return 0;
}

void toggle_cs(uint8_t i){
	if(i){
		SPI_ss_high();
 23c:	0e 94 0e 02 	call	0x41c	; 0x41c <SPI_ss_high>
 240:	08 95       	ret

00000242 <MCP_init>:
#include "SPI_driver.h"
#include "MCP2515.h"

int MCP_init(){
	//Star SPI driver
	SPI_init();
 242:	0e 94 fd 01 	call	0x3fa	; 0x3fa <SPI_init>
	
	//Reset MPC to enter configuration mode
	MCP_reset();
 246:	0e 94 19 01 	call	0x232	; 0x232 <MCP_reset>
	
	// Self-test
	uint8_t value = (MCP_CANSTAT);
	if ((value & MODE_MASK) != MODE_CONFIG) {
		printf("MCP2515 is NOT in configuration mode after reset!\n\r");
 24a:	8c e2       	ldi	r24, 0x2C	; 44
 24c:	91 e0       	ldi	r25, 0x01	; 1
 24e:	9f 93       	push	r25
 250:	8f 93       	push	r24
 252:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <printf>
 256:	0f 90       	pop	r0
 258:	0f 90       	pop	r0
		return 1;
	}
	return 0;
}
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	08 95       	ret

00000260 <MCP_read>:
	toggle_cs(0); //CS low
	SPI_transmit(MCP_RESET); // sen reset command 0b11000000
	toggle_cs(1); //CS high
}

uint8_t MCP_read(uint8_t address){
 260:	cf 93       	push	r28
 262:	c8 2f       	mov	r28, r24
void toggle_cs(uint8_t i){
	if(i){
		SPI_ss_high();
	}
	else{
		SPI_ss_low();
 264:	0e 94 10 02 	call	0x420	; 0x420 <SPI_ss_low>
	toggle_cs(1); //CS high
}

uint8_t MCP_read(uint8_t address){
	toggle_cs(0);
	SPI_send(MCP_READ); //Send read command 0b00000011
 268:	83 e0       	ldi	r24, 0x03	; 3
 26a:	0e 94 07 02 	call	0x40e	; 0x40e <SPI_send>
	SPI_send(address);
 26e:	8c 2f       	mov	r24, r28
 270:	0e 94 07 02 	call	0x40e	; 0x40e <SPI_send>
	uint8_t data = SPI_receive();
 274:	0e 94 0a 02 	call	0x414	; 0x414 <SPI_receive>
 278:	c8 2f       	mov	r28, r24
	return 0;
}

void toggle_cs(uint8_t i){
	if(i){
		SPI_ss_high();
 27a:	0e 94 0e 02 	call	0x41c	; 0x41c <SPI_ss_high>
	SPI_send(MCP_READ); //Send read command 0b00000011
	SPI_send(address);
	uint8_t data = SPI_receive();
	toggle_cs(1);
	return data;
}
 27e:	8c 2f       	mov	r24, r28
 280:	cf 91       	pop	r28
 282:	08 95       	ret

00000284 <MCP_write>:

void MCP_read_rx(){
	return 0;
}

void MCP_write(uint8_t address, uint8_t data){
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	d8 2f       	mov	r29, r24
 28a:	c6 2f       	mov	r28, r22
void toggle_cs(uint8_t i){
	if(i){
		SPI_ss_high();
	}
	else{
		SPI_ss_low();
 28c:	0e 94 10 02 	call	0x420	; 0x420 <SPI_ss_low>
	return 0;
}

void MCP_write(uint8_t address, uint8_t data){
	toggle_cs(0);
	SPI_send(MCP_WRITE); //Send write command 0b00000010
 290:	82 e0       	ldi	r24, 0x02	; 2
 292:	0e 94 07 02 	call	0x40e	; 0x40e <SPI_send>
	SPI_send(address);
 296:	8d 2f       	mov	r24, r29
 298:	0e 94 07 02 	call	0x40e	; 0x40e <SPI_send>
	SPI_send(data);
 29c:	8c 2f       	mov	r24, r28
 29e:	0e 94 07 02 	call	0x40e	; 0x40e <SPI_send>
	return 0;
}

void toggle_cs(uint8_t i){
	if(i){
		SPI_ss_high();
 2a2:	0e 94 0e 02 	call	0x41c	; 0x41c <SPI_ss_high>
	toggle_cs(0);
	SPI_send(MCP_WRITE); //Send write command 0b00000010
	SPI_send(address);
	SPI_send(data);
	toggle_cs(1);
}
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	08 95       	ret

000002ac <MCP_rts>:

void MCP_load_tx(){
	return 0;
}
void MCP_rts(uint8_t buffer){
	switch(buffer%4){ //Select buffer to use, 3 = all
 2ac:	83 70       	andi	r24, 0x03	; 3
 2ae:	81 30       	cpi	r24, 0x01	; 1
 2b0:	51 f0       	breq	.+20     	; 0x2c6 <MCP_rts+0x1a>
 2b2:	28 f0       	brcs	.+10     	; 0x2be <MCP_rts+0x12>
 2b4:	82 30       	cpi	r24, 0x02	; 2
 2b6:	59 f0       	breq	.+22     	; 0x2ce <MCP_rts+0x22>
 2b8:	83 30       	cpi	r24, 0x03	; 3
 2ba:	69 f0       	breq	.+26     	; 0x2d6 <MCP_rts+0x2a>
 2bc:	08 95       	ret
		case 0:
			SPI_send(MCP_RTS_TX0);
 2be:	81 e8       	ldi	r24, 0x81	; 129
 2c0:	0e 94 07 02 	call	0x40e	; 0x40e <SPI_send>
			break;
 2c4:	08 95       	ret
		case 1:
			SPI_send(MCP_RTS_TX1);
 2c6:	82 e8       	ldi	r24, 0x82	; 130
 2c8:	0e 94 07 02 	call	0x40e	; 0x40e <SPI_send>
			break;
 2cc:	08 95       	ret
		case 2:
			SPI_send(MCP_RTS_TX2);
 2ce:	84 e8       	ldi	r24, 0x84	; 132
 2d0:	0e 94 07 02 	call	0x40e	; 0x40e <SPI_send>
			break;
 2d4:	08 95       	ret
		case 3:
			SPI_send(MCP_RTS_ALL);
 2d6:	87 e8       	ldi	r24, 0x87	; 135
 2d8:	0e 94 07 02 	call	0x40e	; 0x40e <SPI_send>
 2dc:	08 95       	ret

000002de <oled_init>:
 2de:	e0 e0       	ldi	r30, 0x00	; 0
 2e0:	f0 e1       	ldi	r31, 0x10	; 16
 2e2:	8e ea       	ldi	r24, 0xAE	; 174
 2e4:	80 83       	st	Z, r24
 2e6:	81 ea       	ldi	r24, 0xA1	; 161
 2e8:	80 83       	st	Z, r24
 2ea:	8a ed       	ldi	r24, 0xDA	; 218
 2ec:	80 83       	st	Z, r24
 2ee:	82 e1       	ldi	r24, 0x12	; 18
 2f0:	80 83       	st	Z, r24
 2f2:	88 ec       	ldi	r24, 0xC8	; 200
 2f4:	80 83       	st	Z, r24
 2f6:	88 ea       	ldi	r24, 0xA8	; 168
 2f8:	80 83       	st	Z, r24
 2fa:	8f e3       	ldi	r24, 0x3F	; 63
 2fc:	80 83       	st	Z, r24
 2fe:	85 ed       	ldi	r24, 0xD5	; 213
 300:	80 83       	st	Z, r24
 302:	80 e8       	ldi	r24, 0x80	; 128
 304:	80 83       	st	Z, r24
 306:	81 e8       	ldi	r24, 0x81	; 129
 308:	80 83       	st	Z, r24
 30a:	80 e5       	ldi	r24, 0x50	; 80
 30c:	80 83       	st	Z, r24
 30e:	89 ed       	ldi	r24, 0xD9	; 217
 310:	80 83       	st	Z, r24
 312:	81 e2       	ldi	r24, 0x21	; 33
 314:	80 83       	st	Z, r24
 316:	80 e2       	ldi	r24, 0x20	; 32
 318:	80 83       	st	Z, r24
 31a:	82 e0       	ldi	r24, 0x02	; 2
 31c:	80 83       	st	Z, r24
 31e:	8b ed       	ldi	r24, 0xDB	; 219
 320:	80 83       	st	Z, r24
 322:	80 e3       	ldi	r24, 0x30	; 48
 324:	80 83       	st	Z, r24
 326:	8d ea       	ldi	r24, 0xAD	; 173
 328:	80 83       	st	Z, r24
 32a:	10 82       	st	Z, r1
 32c:	84 ea       	ldi	r24, 0xA4	; 164
 32e:	80 83       	st	Z, r24
 330:	86 ea       	ldi	r24, 0xA6	; 166
 332:	80 83       	st	Z, r24
 334:	8f ea       	ldi	r24, 0xAF	; 175
 336:	80 83       	st	Z, r24
 338:	08 95       	ret

0000033a <oled_sram_flush>:
 33a:	af 92       	push	r10
 33c:	bf 92       	push	r11
 33e:	cf 92       	push	r12
 340:	df 92       	push	r13
 342:	ef 92       	push	r14
 344:	ff 92       	push	r15
 346:	0f 93       	push	r16
 348:	1f 93       	push	r17
 34a:	cf 93       	push	r28
 34c:	df 93       	push	r29
 34e:	5c 01       	movw	r10, r24
 350:	c0 e0       	ldi	r28, 0x00	; 0
 352:	d0 e0       	ldi	r29, 0x00	; 0
 354:	e1 2c       	mov	r14, r1
 356:	f1 2c       	mov	r15, r1
 358:	c1 2c       	mov	r12, r1
 35a:	68 94       	set
 35c:	dd 24       	eor	r13, r13
 35e:	d4 f8       	bld	r13, 4
 360:	00 e0       	ldi	r16, 0x00	; 0
 362:	12 e1       	ldi	r17, 0x12	; 18
 364:	ce 01       	movw	r24, r28
 366:	9e 01       	movw	r18, r28
 368:	2f 77       	andi	r18, 0x7F	; 127
 36a:	33 27       	eor	r19, r19
 36c:	23 2b       	or	r18, r19
 36e:	39 f4       	brne	.+14     	; 0x37e <oled_sram_flush+0x44>
 370:	20 eb       	ldi	r18, 0xB0	; 176
 372:	2e 0d       	add	r18, r14
 374:	f6 01       	movw	r30, r12
 376:	20 83       	st	Z, r18
 378:	ff ef       	ldi	r31, 0xFF	; 255
 37a:	ef 1a       	sub	r14, r31
 37c:	ff 0a       	sbc	r15, r31
 37e:	8a 0d       	add	r24, r10
 380:	9b 1d       	adc	r25, r11
 382:	0e 94 12 02 	call	0x424	; 0x424 <getSRAM>
 386:	f8 01       	movw	r30, r16
 388:	80 83       	st	Z, r24
 38a:	21 96       	adiw	r28, 0x01	; 1
 38c:	c1 15       	cp	r28, r1
 38e:	f4 e0       	ldi	r31, 0x04	; 4
 390:	df 07       	cpc	r29, r31
 392:	41 f7       	brne	.-48     	; 0x364 <oled_sram_flush+0x2a>
 394:	df 91       	pop	r29
 396:	cf 91       	pop	r28
 398:	1f 91       	pop	r17
 39a:	0f 91       	pop	r16
 39c:	ff 90       	pop	r15
 39e:	ef 90       	pop	r14
 3a0:	df 90       	pop	r13
 3a2:	cf 90       	pop	r12
 3a4:	bf 90       	pop	r11
 3a6:	af 90       	pop	r10
 3a8:	08 95       	ret

000003aa <__vector_14>:
 3aa:	1f 92       	push	r1
 3ac:	0f 92       	push	r0
 3ae:	0f b6       	in	r0, 0x3f	; 63
 3b0:	0f 92       	push	r0
 3b2:	11 24       	eor	r1, r1
 3b4:	2f 93       	push	r18
 3b6:	3f 93       	push	r19
 3b8:	4f 93       	push	r20
 3ba:	5f 93       	push	r21
 3bc:	6f 93       	push	r22
 3be:	7f 93       	push	r23
 3c0:	8f 93       	push	r24
 3c2:	9f 93       	push	r25
 3c4:	af 93       	push	r26
 3c6:	bf 93       	push	r27
 3c8:	ef 93       	push	r30
 3ca:	ff 93       	push	r31
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	0e 94 9d 01 	call	0x33a	; 0x33a <oled_sram_flush>
 3d4:	1d bc       	out	0x2d, r1	; 45
 3d6:	1c bc       	out	0x2c, r1	; 44
 3d8:	ff 91       	pop	r31
 3da:	ef 91       	pop	r30
 3dc:	bf 91       	pop	r27
 3de:	af 91       	pop	r26
 3e0:	9f 91       	pop	r25
 3e2:	8f 91       	pop	r24
 3e4:	7f 91       	pop	r23
 3e6:	6f 91       	pop	r22
 3e8:	5f 91       	pop	r21
 3ea:	4f 91       	pop	r20
 3ec:	3f 91       	pop	r19
 3ee:	2f 91       	pop	r18
 3f0:	0f 90       	pop	r0
 3f2:	0f be       	out	0x3f, r0	; 63
 3f4:	0f 90       	pop	r0
 3f6:	1f 90       	pop	r1
 3f8:	18 95       	reti

000003fa <SPI_init>:
#include <avr/io.h>
#include <util/delay.h>

void SPI_init(){
	//Datadir: MOSI (== PB6) out, SCK (== PB7) out, !SS (== PB4) out
	DDRB = (1<<PB6)|(1<<PB7)|(1<<PB4);
 3fa:	80 ed       	ldi	r24, 0xD0	; 208
 3fc:	87 bb       	out	0x17, r24	; 23
	//Enable SPI and Master, and set clock rate to fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 3fe:	81 e5       	ldi	r24, 0x51	; 81
 400:	8d b9       	out	0x0d, r24	; 13
 402:	08 95       	ret

00000404 <SPI_transmit>:
}
uint8_t SPI_transmit(uint8_t data){
	// start transmission
	SPDR = data;
 404:	8f b9       	out	0x0f, r24	; 15
	//Wait for data to be ent and receved
	while(!(SPSR & (1<<SPIF)));
 406:	77 9b       	sbis	0x0e, 7	; 14
 408:	fe cf       	rjmp	.-4      	; 0x406 <SPI_transmit+0x2>
	//Return answer
	return SPDR;
 40a:	8f b1       	in	r24, 0x0f	; 15
}
 40c:	08 95       	ret

0000040e <SPI_send>:

void SPI_send(uint8_t c){
	SPI_transmit(c);
 40e:	0e 94 02 02 	call	0x404	; 0x404 <SPI_transmit>
 412:	08 95       	ret

00000414 <SPI_receive>:
}

uint8_t SPI_receive(){
	return SPI_transmit(0);
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	0e 94 02 02 	call	0x404	; 0x404 <SPI_transmit>
}
 41a:	08 95       	ret

0000041c <SPI_ss_high>:

void SPI_ss_high(){
	PORTB |= (1<<PB4);
 41c:	c4 9a       	sbi	0x18, 4	; 24
 41e:	08 95       	ret

00000420 <SPI_ss_low>:
}

void SPI_ss_low(){
	PORTB &= ~(1<<PB4);
 420:	c4 98       	cbi	0x18, 4	; 24
 422:	08 95       	ret

00000424 <getSRAM>:
 424:	98 5e       	subi	r25, 0xE8	; 232
 426:	fc 01       	movw	r30, r24
 428:	80 81       	ld	r24, Z
 42a:	08 95       	ret

0000042c <uartSend>:
 42c:	5d 9b       	sbis	0x0b, 5	; 11
 42e:	fe cf       	rjmp	.-4      	; 0x42c <uartSend>
 430:	8c b9       	out	0x0c, r24	; 12
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	08 95       	ret

00000438 <uartInit>:
 438:	9c 01       	movw	r18, r24
 43a:	40 e0       	ldi	r20, 0x00	; 0
 43c:	50 e0       	ldi	r21, 0x00	; 0
 43e:	60 e0       	ldi	r22, 0x00	; 0
 440:	70 eb       	ldi	r23, 0xB0	; 176
 442:	84 e0       	ldi	r24, 0x04	; 4
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	0e 94 38 02 	call	0x470	; 0x470 <__divmodsi4>
 44a:	21 50       	subi	r18, 0x01	; 1
 44c:	31 09       	sbc	r19, r1
 44e:	30 bd       	out	0x20, r19	; 32
 450:	29 b9       	out	0x09, r18	; 9
 452:	8a b1       	in	r24, 0x0a	; 10
 454:	88 61       	ori	r24, 0x18	; 24
 456:	8a b9       	out	0x0a, r24	; 10
 458:	80 b5       	in	r24, 0x20	; 32
 45a:	86 68       	ori	r24, 0x86	; 134
 45c:	80 bd       	out	0x20, r24	; 32
 45e:	60 e0       	ldi	r22, 0x00	; 0
 460:	70 e0       	ldi	r23, 0x00	; 0
 462:	86 e1       	ldi	r24, 0x16	; 22
 464:	92 e0       	ldi	r25, 0x02	; 2
 466:	0e 94 a0 03 	call	0x740	; 0x740 <fdevopen>
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	08 95       	ret

00000470 <__divmodsi4>:
 470:	05 2e       	mov	r0, r21
 472:	97 fb       	bst	r25, 7
 474:	1e f4       	brtc	.+6      	; 0x47c <__divmodsi4+0xc>
 476:	00 94       	com	r0
 478:	0e 94 4f 02 	call	0x49e	; 0x49e <__negsi2>
 47c:	57 fd       	sbrc	r21, 7
 47e:	07 d0       	rcall	.+14     	; 0x48e <__divmodsi4_neg2>
 480:	0e 94 57 02 	call	0x4ae	; 0x4ae <__udivmodsi4>
 484:	07 fc       	sbrc	r0, 7
 486:	03 d0       	rcall	.+6      	; 0x48e <__divmodsi4_neg2>
 488:	4e f4       	brtc	.+18     	; 0x49c <__divmodsi4_exit>
 48a:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__negsi2>

0000048e <__divmodsi4_neg2>:
 48e:	50 95       	com	r21
 490:	40 95       	com	r20
 492:	30 95       	com	r19
 494:	21 95       	neg	r18
 496:	3f 4f       	sbci	r19, 0xFF	; 255
 498:	4f 4f       	sbci	r20, 0xFF	; 255
 49a:	5f 4f       	sbci	r21, 0xFF	; 255

0000049c <__divmodsi4_exit>:
 49c:	08 95       	ret

0000049e <__negsi2>:
 49e:	90 95       	com	r25
 4a0:	80 95       	com	r24
 4a2:	70 95       	com	r23
 4a4:	61 95       	neg	r22
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255
 4a8:	8f 4f       	sbci	r24, 0xFF	; 255
 4aa:	9f 4f       	sbci	r25, 0xFF	; 255
 4ac:	08 95       	ret

000004ae <__udivmodsi4>:
 4ae:	a1 e2       	ldi	r26, 0x21	; 33
 4b0:	1a 2e       	mov	r1, r26
 4b2:	aa 1b       	sub	r26, r26
 4b4:	bb 1b       	sub	r27, r27
 4b6:	fd 01       	movw	r30, r26
 4b8:	0d c0       	rjmp	.+26     	; 0x4d4 <__udivmodsi4_ep>

000004ba <__udivmodsi4_loop>:
 4ba:	aa 1f       	adc	r26, r26
 4bc:	bb 1f       	adc	r27, r27
 4be:	ee 1f       	adc	r30, r30
 4c0:	ff 1f       	adc	r31, r31
 4c2:	a2 17       	cp	r26, r18
 4c4:	b3 07       	cpc	r27, r19
 4c6:	e4 07       	cpc	r30, r20
 4c8:	f5 07       	cpc	r31, r21
 4ca:	20 f0       	brcs	.+8      	; 0x4d4 <__udivmodsi4_ep>
 4cc:	a2 1b       	sub	r26, r18
 4ce:	b3 0b       	sbc	r27, r19
 4d0:	e4 0b       	sbc	r30, r20
 4d2:	f5 0b       	sbc	r31, r21

000004d4 <__udivmodsi4_ep>:
 4d4:	66 1f       	adc	r22, r22
 4d6:	77 1f       	adc	r23, r23
 4d8:	88 1f       	adc	r24, r24
 4da:	99 1f       	adc	r25, r25
 4dc:	1a 94       	dec	r1
 4de:	69 f7       	brne	.-38     	; 0x4ba <__udivmodsi4_loop>
 4e0:	60 95       	com	r22
 4e2:	70 95       	com	r23
 4e4:	80 95       	com	r24
 4e6:	90 95       	com	r25
 4e8:	9b 01       	movw	r18, r22
 4ea:	ac 01       	movw	r20, r24
 4ec:	bd 01       	movw	r22, r26
 4ee:	cf 01       	movw	r24, r30
 4f0:	08 95       	ret

000004f2 <malloc>:
 4f2:	cf 93       	push	r28
 4f4:	df 93       	push	r29
 4f6:	82 30       	cpi	r24, 0x02	; 2
 4f8:	91 05       	cpc	r25, r1
 4fa:	10 f4       	brcc	.+4      	; 0x500 <__stack+0x1>
 4fc:	82 e0       	ldi	r24, 0x02	; 2
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	e0 91 62 01 	lds	r30, 0x0162
 504:	f0 91 63 01 	lds	r31, 0x0163
 508:	20 e0       	ldi	r18, 0x00	; 0
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	a0 e0       	ldi	r26, 0x00	; 0
 50e:	b0 e0       	ldi	r27, 0x00	; 0
 510:	30 97       	sbiw	r30, 0x00	; 0
 512:	39 f1       	breq	.+78     	; 0x562 <__stack+0x63>
 514:	40 81       	ld	r20, Z
 516:	51 81       	ldd	r21, Z+1	; 0x01
 518:	48 17       	cp	r20, r24
 51a:	59 07       	cpc	r21, r25
 51c:	b8 f0       	brcs	.+46     	; 0x54c <__stack+0x4d>
 51e:	48 17       	cp	r20, r24
 520:	59 07       	cpc	r21, r25
 522:	71 f4       	brne	.+28     	; 0x540 <__stack+0x41>
 524:	82 81       	ldd	r24, Z+2	; 0x02
 526:	93 81       	ldd	r25, Z+3	; 0x03
 528:	10 97       	sbiw	r26, 0x00	; 0
 52a:	29 f0       	breq	.+10     	; 0x536 <__stack+0x37>
 52c:	13 96       	adiw	r26, 0x03	; 3
 52e:	9c 93       	st	X, r25
 530:	8e 93       	st	-X, r24
 532:	12 97       	sbiw	r26, 0x02	; 2
 534:	2c c0       	rjmp	.+88     	; 0x58e <__stack+0x8f>
 536:	90 93 63 01 	sts	0x0163, r25
 53a:	80 93 62 01 	sts	0x0162, r24
 53e:	27 c0       	rjmp	.+78     	; 0x58e <__stack+0x8f>
 540:	21 15       	cp	r18, r1
 542:	31 05       	cpc	r19, r1
 544:	31 f0       	breq	.+12     	; 0x552 <__stack+0x53>
 546:	42 17       	cp	r20, r18
 548:	53 07       	cpc	r21, r19
 54a:	18 f0       	brcs	.+6      	; 0x552 <__stack+0x53>
 54c:	a9 01       	movw	r20, r18
 54e:	db 01       	movw	r26, r22
 550:	01 c0       	rjmp	.+2      	; 0x554 <__stack+0x55>
 552:	ef 01       	movw	r28, r30
 554:	9a 01       	movw	r18, r20
 556:	bd 01       	movw	r22, r26
 558:	df 01       	movw	r26, r30
 55a:	02 80       	ldd	r0, Z+2	; 0x02
 55c:	f3 81       	ldd	r31, Z+3	; 0x03
 55e:	e0 2d       	mov	r30, r0
 560:	d7 cf       	rjmp	.-82     	; 0x510 <__stack+0x11>
 562:	21 15       	cp	r18, r1
 564:	31 05       	cpc	r19, r1
 566:	f9 f0       	breq	.+62     	; 0x5a6 <__stack+0xa7>
 568:	28 1b       	sub	r18, r24
 56a:	39 0b       	sbc	r19, r25
 56c:	24 30       	cpi	r18, 0x04	; 4
 56e:	31 05       	cpc	r19, r1
 570:	80 f4       	brcc	.+32     	; 0x592 <__stack+0x93>
 572:	8a 81       	ldd	r24, Y+2	; 0x02
 574:	9b 81       	ldd	r25, Y+3	; 0x03
 576:	61 15       	cp	r22, r1
 578:	71 05       	cpc	r23, r1
 57a:	21 f0       	breq	.+8      	; 0x584 <__stack+0x85>
 57c:	fb 01       	movw	r30, r22
 57e:	93 83       	std	Z+3, r25	; 0x03
 580:	82 83       	std	Z+2, r24	; 0x02
 582:	04 c0       	rjmp	.+8      	; 0x58c <__stack+0x8d>
 584:	90 93 63 01 	sts	0x0163, r25
 588:	80 93 62 01 	sts	0x0162, r24
 58c:	fe 01       	movw	r30, r28
 58e:	32 96       	adiw	r30, 0x02	; 2
 590:	44 c0       	rjmp	.+136    	; 0x61a <__stack+0x11b>
 592:	fe 01       	movw	r30, r28
 594:	e2 0f       	add	r30, r18
 596:	f3 1f       	adc	r31, r19
 598:	81 93       	st	Z+, r24
 59a:	91 93       	st	Z+, r25
 59c:	22 50       	subi	r18, 0x02	; 2
 59e:	31 09       	sbc	r19, r1
 5a0:	39 83       	std	Y+1, r19	; 0x01
 5a2:	28 83       	st	Y, r18
 5a4:	3a c0       	rjmp	.+116    	; 0x61a <__stack+0x11b>
 5a6:	20 91 60 01 	lds	r18, 0x0160
 5aa:	30 91 61 01 	lds	r19, 0x0161
 5ae:	23 2b       	or	r18, r19
 5b0:	41 f4       	brne	.+16     	; 0x5c2 <__stack+0xc3>
 5b2:	20 91 02 01 	lds	r18, 0x0102
 5b6:	30 91 03 01 	lds	r19, 0x0103
 5ba:	30 93 61 01 	sts	0x0161, r19
 5be:	20 93 60 01 	sts	0x0160, r18
 5c2:	20 91 00 01 	lds	r18, 0x0100
 5c6:	30 91 01 01 	lds	r19, 0x0101
 5ca:	21 15       	cp	r18, r1
 5cc:	31 05       	cpc	r19, r1
 5ce:	41 f4       	brne	.+16     	; 0x5e0 <__stack+0xe1>
 5d0:	2d b7       	in	r18, 0x3d	; 61
 5d2:	3e b7       	in	r19, 0x3e	; 62
 5d4:	40 91 04 01 	lds	r20, 0x0104
 5d8:	50 91 05 01 	lds	r21, 0x0105
 5dc:	24 1b       	sub	r18, r20
 5de:	35 0b       	sbc	r19, r21
 5e0:	e0 91 60 01 	lds	r30, 0x0160
 5e4:	f0 91 61 01 	lds	r31, 0x0161
 5e8:	e2 17       	cp	r30, r18
 5ea:	f3 07       	cpc	r31, r19
 5ec:	a0 f4       	brcc	.+40     	; 0x616 <__stack+0x117>
 5ee:	2e 1b       	sub	r18, r30
 5f0:	3f 0b       	sbc	r19, r31
 5f2:	28 17       	cp	r18, r24
 5f4:	39 07       	cpc	r19, r25
 5f6:	78 f0       	brcs	.+30     	; 0x616 <__stack+0x117>
 5f8:	ac 01       	movw	r20, r24
 5fa:	4e 5f       	subi	r20, 0xFE	; 254
 5fc:	5f 4f       	sbci	r21, 0xFF	; 255
 5fe:	24 17       	cp	r18, r20
 600:	35 07       	cpc	r19, r21
 602:	48 f0       	brcs	.+18     	; 0x616 <__stack+0x117>
 604:	4e 0f       	add	r20, r30
 606:	5f 1f       	adc	r21, r31
 608:	50 93 61 01 	sts	0x0161, r21
 60c:	40 93 60 01 	sts	0x0160, r20
 610:	81 93       	st	Z+, r24
 612:	91 93       	st	Z+, r25
 614:	02 c0       	rjmp	.+4      	; 0x61a <__stack+0x11b>
 616:	e0 e0       	ldi	r30, 0x00	; 0
 618:	f0 e0       	ldi	r31, 0x00	; 0
 61a:	cf 01       	movw	r24, r30
 61c:	df 91       	pop	r29
 61e:	cf 91       	pop	r28
 620:	08 95       	ret

00000622 <free>:
 622:	cf 93       	push	r28
 624:	df 93       	push	r29
 626:	00 97       	sbiw	r24, 0x00	; 0
 628:	09 f4       	brne	.+2      	; 0x62c <free+0xa>
 62a:	87 c0       	rjmp	.+270    	; 0x73a <free+0x118>
 62c:	fc 01       	movw	r30, r24
 62e:	32 97       	sbiw	r30, 0x02	; 2
 630:	13 82       	std	Z+3, r1	; 0x03
 632:	12 82       	std	Z+2, r1	; 0x02
 634:	c0 91 62 01 	lds	r28, 0x0162
 638:	d0 91 63 01 	lds	r29, 0x0163
 63c:	20 97       	sbiw	r28, 0x00	; 0
 63e:	81 f4       	brne	.+32     	; 0x660 <free+0x3e>
 640:	20 81       	ld	r18, Z
 642:	31 81       	ldd	r19, Z+1	; 0x01
 644:	28 0f       	add	r18, r24
 646:	39 1f       	adc	r19, r25
 648:	80 91 60 01 	lds	r24, 0x0160
 64c:	90 91 61 01 	lds	r25, 0x0161
 650:	82 17       	cp	r24, r18
 652:	93 07       	cpc	r25, r19
 654:	79 f5       	brne	.+94     	; 0x6b4 <free+0x92>
 656:	f0 93 61 01 	sts	0x0161, r31
 65a:	e0 93 60 01 	sts	0x0160, r30
 65e:	6d c0       	rjmp	.+218    	; 0x73a <free+0x118>
 660:	de 01       	movw	r26, r28
 662:	20 e0       	ldi	r18, 0x00	; 0
 664:	30 e0       	ldi	r19, 0x00	; 0
 666:	ae 17       	cp	r26, r30
 668:	bf 07       	cpc	r27, r31
 66a:	50 f4       	brcc	.+20     	; 0x680 <free+0x5e>
 66c:	12 96       	adiw	r26, 0x02	; 2
 66e:	4d 91       	ld	r20, X+
 670:	5c 91       	ld	r21, X
 672:	13 97       	sbiw	r26, 0x03	; 3
 674:	9d 01       	movw	r18, r26
 676:	41 15       	cp	r20, r1
 678:	51 05       	cpc	r21, r1
 67a:	09 f1       	breq	.+66     	; 0x6be <free+0x9c>
 67c:	da 01       	movw	r26, r20
 67e:	f3 cf       	rjmp	.-26     	; 0x666 <free+0x44>
 680:	b3 83       	std	Z+3, r27	; 0x03
 682:	a2 83       	std	Z+2, r26	; 0x02
 684:	40 81       	ld	r20, Z
 686:	51 81       	ldd	r21, Z+1	; 0x01
 688:	84 0f       	add	r24, r20
 68a:	95 1f       	adc	r25, r21
 68c:	8a 17       	cp	r24, r26
 68e:	9b 07       	cpc	r25, r27
 690:	71 f4       	brne	.+28     	; 0x6ae <free+0x8c>
 692:	8d 91       	ld	r24, X+
 694:	9c 91       	ld	r25, X
 696:	11 97       	sbiw	r26, 0x01	; 1
 698:	84 0f       	add	r24, r20
 69a:	95 1f       	adc	r25, r21
 69c:	02 96       	adiw	r24, 0x02	; 2
 69e:	91 83       	std	Z+1, r25	; 0x01
 6a0:	80 83       	st	Z, r24
 6a2:	12 96       	adiw	r26, 0x02	; 2
 6a4:	8d 91       	ld	r24, X+
 6a6:	9c 91       	ld	r25, X
 6a8:	13 97       	sbiw	r26, 0x03	; 3
 6aa:	93 83       	std	Z+3, r25	; 0x03
 6ac:	82 83       	std	Z+2, r24	; 0x02
 6ae:	21 15       	cp	r18, r1
 6b0:	31 05       	cpc	r19, r1
 6b2:	29 f4       	brne	.+10     	; 0x6be <free+0x9c>
 6b4:	f0 93 63 01 	sts	0x0163, r31
 6b8:	e0 93 62 01 	sts	0x0162, r30
 6bc:	3e c0       	rjmp	.+124    	; 0x73a <free+0x118>
 6be:	d9 01       	movw	r26, r18
 6c0:	13 96       	adiw	r26, 0x03	; 3
 6c2:	fc 93       	st	X, r31
 6c4:	ee 93       	st	-X, r30
 6c6:	12 97       	sbiw	r26, 0x02	; 2
 6c8:	4d 91       	ld	r20, X+
 6ca:	5d 91       	ld	r21, X+
 6cc:	a4 0f       	add	r26, r20
 6ce:	b5 1f       	adc	r27, r21
 6d0:	ea 17       	cp	r30, r26
 6d2:	fb 07       	cpc	r31, r27
 6d4:	79 f4       	brne	.+30     	; 0x6f4 <free+0xd2>
 6d6:	80 81       	ld	r24, Z
 6d8:	91 81       	ldd	r25, Z+1	; 0x01
 6da:	84 0f       	add	r24, r20
 6dc:	95 1f       	adc	r25, r21
 6de:	02 96       	adiw	r24, 0x02	; 2
 6e0:	d9 01       	movw	r26, r18
 6e2:	11 96       	adiw	r26, 0x01	; 1
 6e4:	9c 93       	st	X, r25
 6e6:	8e 93       	st	-X, r24
 6e8:	82 81       	ldd	r24, Z+2	; 0x02
 6ea:	93 81       	ldd	r25, Z+3	; 0x03
 6ec:	13 96       	adiw	r26, 0x03	; 3
 6ee:	9c 93       	st	X, r25
 6f0:	8e 93       	st	-X, r24
 6f2:	12 97       	sbiw	r26, 0x02	; 2
 6f4:	e0 e0       	ldi	r30, 0x00	; 0
 6f6:	f0 e0       	ldi	r31, 0x00	; 0
 6f8:	8a 81       	ldd	r24, Y+2	; 0x02
 6fa:	9b 81       	ldd	r25, Y+3	; 0x03
 6fc:	00 97       	sbiw	r24, 0x00	; 0
 6fe:	19 f0       	breq	.+6      	; 0x706 <free+0xe4>
 700:	fe 01       	movw	r30, r28
 702:	ec 01       	movw	r28, r24
 704:	f9 cf       	rjmp	.-14     	; 0x6f8 <free+0xd6>
 706:	ce 01       	movw	r24, r28
 708:	02 96       	adiw	r24, 0x02	; 2
 70a:	28 81       	ld	r18, Y
 70c:	39 81       	ldd	r19, Y+1	; 0x01
 70e:	82 0f       	add	r24, r18
 710:	93 1f       	adc	r25, r19
 712:	20 91 60 01 	lds	r18, 0x0160
 716:	30 91 61 01 	lds	r19, 0x0161
 71a:	28 17       	cp	r18, r24
 71c:	39 07       	cpc	r19, r25
 71e:	69 f4       	brne	.+26     	; 0x73a <free+0x118>
 720:	30 97       	sbiw	r30, 0x00	; 0
 722:	29 f4       	brne	.+10     	; 0x72e <free+0x10c>
 724:	10 92 63 01 	sts	0x0163, r1
 728:	10 92 62 01 	sts	0x0162, r1
 72c:	02 c0       	rjmp	.+4      	; 0x732 <free+0x110>
 72e:	13 82       	std	Z+3, r1	; 0x03
 730:	12 82       	std	Z+2, r1	; 0x02
 732:	d0 93 61 01 	sts	0x0161, r29
 736:	c0 93 60 01 	sts	0x0160, r28
 73a:	df 91       	pop	r29
 73c:	cf 91       	pop	r28
 73e:	08 95       	ret

00000740 <fdevopen>:
 740:	0f 93       	push	r16
 742:	1f 93       	push	r17
 744:	cf 93       	push	r28
 746:	df 93       	push	r29
 748:	ec 01       	movw	r28, r24
 74a:	8b 01       	movw	r16, r22
 74c:	00 97       	sbiw	r24, 0x00	; 0
 74e:	31 f4       	brne	.+12     	; 0x75c <fdevopen+0x1c>
 750:	61 15       	cp	r22, r1
 752:	71 05       	cpc	r23, r1
 754:	19 f4       	brne	.+6      	; 0x75c <fdevopen+0x1c>
 756:	80 e0       	ldi	r24, 0x00	; 0
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	38 c0       	rjmp	.+112    	; 0x7cc <fdevopen+0x8c>
 75c:	6e e0       	ldi	r22, 0x0E	; 14
 75e:	70 e0       	ldi	r23, 0x00	; 0
 760:	81 e0       	ldi	r24, 0x01	; 1
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	0e 94 d1 05 	call	0xba2	; 0xba2 <calloc>
 768:	fc 01       	movw	r30, r24
 76a:	00 97       	sbiw	r24, 0x00	; 0
 76c:	a1 f3       	breq	.-24     	; 0x756 <fdevopen+0x16>
 76e:	80 e8       	ldi	r24, 0x80	; 128
 770:	83 83       	std	Z+3, r24	; 0x03
 772:	01 15       	cp	r16, r1
 774:	11 05       	cpc	r17, r1
 776:	71 f0       	breq	.+28     	; 0x794 <fdevopen+0x54>
 778:	13 87       	std	Z+11, r17	; 0x0b
 77a:	02 87       	std	Z+10, r16	; 0x0a
 77c:	81 e8       	ldi	r24, 0x81	; 129
 77e:	83 83       	std	Z+3, r24	; 0x03
 780:	80 91 64 01 	lds	r24, 0x0164
 784:	90 91 65 01 	lds	r25, 0x0165
 788:	89 2b       	or	r24, r25
 78a:	21 f4       	brne	.+8      	; 0x794 <fdevopen+0x54>
 78c:	f0 93 65 01 	sts	0x0165, r31
 790:	e0 93 64 01 	sts	0x0164, r30
 794:	20 97       	sbiw	r28, 0x00	; 0
 796:	c9 f0       	breq	.+50     	; 0x7ca <fdevopen+0x8a>
 798:	d1 87       	std	Z+9, r29	; 0x09
 79a:	c0 87       	std	Z+8, r28	; 0x08
 79c:	83 81       	ldd	r24, Z+3	; 0x03
 79e:	82 60       	ori	r24, 0x02	; 2
 7a0:	83 83       	std	Z+3, r24	; 0x03
 7a2:	80 91 66 01 	lds	r24, 0x0166
 7a6:	90 91 67 01 	lds	r25, 0x0167
 7aa:	89 2b       	or	r24, r25
 7ac:	71 f4       	brne	.+28     	; 0x7ca <fdevopen+0x8a>
 7ae:	f0 93 67 01 	sts	0x0167, r31
 7b2:	e0 93 66 01 	sts	0x0166, r30
 7b6:	80 91 68 01 	lds	r24, 0x0168
 7ba:	90 91 69 01 	lds	r25, 0x0169
 7be:	89 2b       	or	r24, r25
 7c0:	21 f4       	brne	.+8      	; 0x7ca <fdevopen+0x8a>
 7c2:	f0 93 69 01 	sts	0x0169, r31
 7c6:	e0 93 68 01 	sts	0x0168, r30
 7ca:	cf 01       	movw	r24, r30
 7cc:	df 91       	pop	r29
 7ce:	cf 91       	pop	r28
 7d0:	1f 91       	pop	r17
 7d2:	0f 91       	pop	r16
 7d4:	08 95       	ret

000007d6 <printf>:
 7d6:	a0 e0       	ldi	r26, 0x00	; 0
 7d8:	b0 e0       	ldi	r27, 0x00	; 0
 7da:	e1 ef       	ldi	r30, 0xF1	; 241
 7dc:	f3 e0       	ldi	r31, 0x03	; 3
 7de:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__prologue_saves__+0x20>
 7e2:	fe 01       	movw	r30, r28
 7e4:	35 96       	adiw	r30, 0x05	; 5
 7e6:	61 91       	ld	r22, Z+
 7e8:	71 91       	ld	r23, Z+
 7ea:	af 01       	movw	r20, r30
 7ec:	80 91 66 01 	lds	r24, 0x0166
 7f0:	90 91 67 01 	lds	r25, 0x0167
 7f4:	0e 94 ff 03 	call	0x7fe	; 0x7fe <vfprintf>
 7f8:	e2 e0       	ldi	r30, 0x02	; 2
 7fa:	0c 94 c6 06 	jmp	0xd8c	; 0xd8c <__epilogue_restores__+0x20>

000007fe <vfprintf>:
 7fe:	ac e0       	ldi	r26, 0x0C	; 12
 800:	b0 e0       	ldi	r27, 0x00	; 0
 802:	e5 e0       	ldi	r30, 0x05	; 5
 804:	f4 e0       	ldi	r31, 0x04	; 4
 806:	0c 94 9a 06 	jmp	0xd34	; 0xd34 <__prologue_saves__>
 80a:	7c 01       	movw	r14, r24
 80c:	6b 01       	movw	r12, r22
 80e:	8a 01       	movw	r16, r20
 810:	fc 01       	movw	r30, r24
 812:	17 82       	std	Z+7, r1	; 0x07
 814:	16 82       	std	Z+6, r1	; 0x06
 816:	83 81       	ldd	r24, Z+3	; 0x03
 818:	81 ff       	sbrs	r24, 1
 81a:	bd c1       	rjmp	.+890    	; 0xb96 <vfprintf+0x398>
 81c:	ce 01       	movw	r24, r28
 81e:	01 96       	adiw	r24, 0x01	; 1
 820:	4c 01       	movw	r8, r24
 822:	f7 01       	movw	r30, r14
 824:	93 81       	ldd	r25, Z+3	; 0x03
 826:	f6 01       	movw	r30, r12
 828:	93 fd       	sbrc	r25, 3
 82a:	85 91       	lpm	r24, Z+
 82c:	93 ff       	sbrs	r25, 3
 82e:	81 91       	ld	r24, Z+
 830:	6f 01       	movw	r12, r30
 832:	88 23       	and	r24, r24
 834:	09 f4       	brne	.+2      	; 0x838 <vfprintf+0x3a>
 836:	ab c1       	rjmp	.+854    	; 0xb8e <vfprintf+0x390>
 838:	85 32       	cpi	r24, 0x25	; 37
 83a:	39 f4       	brne	.+14     	; 0x84a <vfprintf+0x4c>
 83c:	93 fd       	sbrc	r25, 3
 83e:	85 91       	lpm	r24, Z+
 840:	93 ff       	sbrs	r25, 3
 842:	81 91       	ld	r24, Z+
 844:	6f 01       	movw	r12, r30
 846:	85 32       	cpi	r24, 0x25	; 37
 848:	29 f4       	brne	.+10     	; 0x854 <vfprintf+0x56>
 84a:	b7 01       	movw	r22, r14
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	0e 94 0a 06 	call	0xc14	; 0xc14 <fputc>
 852:	e7 cf       	rjmp	.-50     	; 0x822 <vfprintf+0x24>
 854:	51 2c       	mov	r5, r1
 856:	31 2c       	mov	r3, r1
 858:	20 e0       	ldi	r18, 0x00	; 0
 85a:	20 32       	cpi	r18, 0x20	; 32
 85c:	a0 f4       	brcc	.+40     	; 0x886 <vfprintf+0x88>
 85e:	8b 32       	cpi	r24, 0x2B	; 43
 860:	69 f0       	breq	.+26     	; 0x87c <vfprintf+0x7e>
 862:	30 f4       	brcc	.+12     	; 0x870 <vfprintf+0x72>
 864:	80 32       	cpi	r24, 0x20	; 32
 866:	59 f0       	breq	.+22     	; 0x87e <vfprintf+0x80>
 868:	83 32       	cpi	r24, 0x23	; 35
 86a:	69 f4       	brne	.+26     	; 0x886 <vfprintf+0x88>
 86c:	20 61       	ori	r18, 0x10	; 16
 86e:	2c c0       	rjmp	.+88     	; 0x8c8 <vfprintf+0xca>
 870:	8d 32       	cpi	r24, 0x2D	; 45
 872:	39 f0       	breq	.+14     	; 0x882 <vfprintf+0x84>
 874:	80 33       	cpi	r24, 0x30	; 48
 876:	39 f4       	brne	.+14     	; 0x886 <vfprintf+0x88>
 878:	21 60       	ori	r18, 0x01	; 1
 87a:	26 c0       	rjmp	.+76     	; 0x8c8 <vfprintf+0xca>
 87c:	22 60       	ori	r18, 0x02	; 2
 87e:	24 60       	ori	r18, 0x04	; 4
 880:	23 c0       	rjmp	.+70     	; 0x8c8 <vfprintf+0xca>
 882:	28 60       	ori	r18, 0x08	; 8
 884:	21 c0       	rjmp	.+66     	; 0x8c8 <vfprintf+0xca>
 886:	27 fd       	sbrc	r18, 7
 888:	27 c0       	rjmp	.+78     	; 0x8d8 <vfprintf+0xda>
 88a:	30 ed       	ldi	r19, 0xD0	; 208
 88c:	38 0f       	add	r19, r24
 88e:	3a 30       	cpi	r19, 0x0A	; 10
 890:	78 f4       	brcc	.+30     	; 0x8b0 <vfprintf+0xb2>
 892:	26 ff       	sbrs	r18, 6
 894:	06 c0       	rjmp	.+12     	; 0x8a2 <vfprintf+0xa4>
 896:	fa e0       	ldi	r31, 0x0A	; 10
 898:	5f 9e       	mul	r5, r31
 89a:	30 0d       	add	r19, r0
 89c:	11 24       	eor	r1, r1
 89e:	53 2e       	mov	r5, r19
 8a0:	13 c0       	rjmp	.+38     	; 0x8c8 <vfprintf+0xca>
 8a2:	8a e0       	ldi	r24, 0x0A	; 10
 8a4:	38 9e       	mul	r3, r24
 8a6:	30 0d       	add	r19, r0
 8a8:	11 24       	eor	r1, r1
 8aa:	33 2e       	mov	r3, r19
 8ac:	20 62       	ori	r18, 0x20	; 32
 8ae:	0c c0       	rjmp	.+24     	; 0x8c8 <vfprintf+0xca>
 8b0:	8e 32       	cpi	r24, 0x2E	; 46
 8b2:	21 f4       	brne	.+8      	; 0x8bc <vfprintf+0xbe>
 8b4:	26 fd       	sbrc	r18, 6
 8b6:	6b c1       	rjmp	.+726    	; 0xb8e <vfprintf+0x390>
 8b8:	20 64       	ori	r18, 0x40	; 64
 8ba:	06 c0       	rjmp	.+12     	; 0x8c8 <vfprintf+0xca>
 8bc:	8c 36       	cpi	r24, 0x6C	; 108
 8be:	11 f4       	brne	.+4      	; 0x8c4 <vfprintf+0xc6>
 8c0:	20 68       	ori	r18, 0x80	; 128
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <vfprintf+0xca>
 8c4:	88 36       	cpi	r24, 0x68	; 104
 8c6:	41 f4       	brne	.+16     	; 0x8d8 <vfprintf+0xda>
 8c8:	f6 01       	movw	r30, r12
 8ca:	93 fd       	sbrc	r25, 3
 8cc:	85 91       	lpm	r24, Z+
 8ce:	93 ff       	sbrs	r25, 3
 8d0:	81 91       	ld	r24, Z+
 8d2:	6f 01       	movw	r12, r30
 8d4:	81 11       	cpse	r24, r1
 8d6:	c1 cf       	rjmp	.-126    	; 0x85a <vfprintf+0x5c>
 8d8:	98 2f       	mov	r25, r24
 8da:	9f 7d       	andi	r25, 0xDF	; 223
 8dc:	95 54       	subi	r25, 0x45	; 69
 8de:	93 30       	cpi	r25, 0x03	; 3
 8e0:	28 f4       	brcc	.+10     	; 0x8ec <vfprintf+0xee>
 8e2:	0c 5f       	subi	r16, 0xFC	; 252
 8e4:	1f 4f       	sbci	r17, 0xFF	; 255
 8e6:	ff e3       	ldi	r31, 0x3F	; 63
 8e8:	f9 83       	std	Y+1, r31	; 0x01
 8ea:	0d c0       	rjmp	.+26     	; 0x906 <vfprintf+0x108>
 8ec:	83 36       	cpi	r24, 0x63	; 99
 8ee:	31 f0       	breq	.+12     	; 0x8fc <vfprintf+0xfe>
 8f0:	83 37       	cpi	r24, 0x73	; 115
 8f2:	71 f0       	breq	.+28     	; 0x910 <vfprintf+0x112>
 8f4:	83 35       	cpi	r24, 0x53	; 83
 8f6:	09 f0       	breq	.+2      	; 0x8fa <vfprintf+0xfc>
 8f8:	5b c0       	rjmp	.+182    	; 0x9b0 <vfprintf+0x1b2>
 8fa:	22 c0       	rjmp	.+68     	; 0x940 <vfprintf+0x142>
 8fc:	f8 01       	movw	r30, r16
 8fe:	80 81       	ld	r24, Z
 900:	89 83       	std	Y+1, r24	; 0x01
 902:	0e 5f       	subi	r16, 0xFE	; 254
 904:	1f 4f       	sbci	r17, 0xFF	; 255
 906:	44 24       	eor	r4, r4
 908:	43 94       	inc	r4
 90a:	51 2c       	mov	r5, r1
 90c:	54 01       	movw	r10, r8
 90e:	15 c0       	rjmp	.+42     	; 0x93a <vfprintf+0x13c>
 910:	38 01       	movw	r6, r16
 912:	f2 e0       	ldi	r31, 0x02	; 2
 914:	6f 0e       	add	r6, r31
 916:	71 1c       	adc	r7, r1
 918:	f8 01       	movw	r30, r16
 91a:	a0 80       	ld	r10, Z
 91c:	b1 80       	ldd	r11, Z+1	; 0x01
 91e:	26 ff       	sbrs	r18, 6
 920:	03 c0       	rjmp	.+6      	; 0x928 <vfprintf+0x12a>
 922:	65 2d       	mov	r22, r5
 924:	70 e0       	ldi	r23, 0x00	; 0
 926:	02 c0       	rjmp	.+4      	; 0x92c <vfprintf+0x12e>
 928:	6f ef       	ldi	r22, 0xFF	; 255
 92a:	7f ef       	ldi	r23, 0xFF	; 255
 92c:	c5 01       	movw	r24, r10
 92e:	2c 87       	std	Y+12, r18	; 0x0c
 930:	0e 94 ff 05 	call	0xbfe	; 0xbfe <strnlen>
 934:	2c 01       	movw	r4, r24
 936:	83 01       	movw	r16, r6
 938:	2c 85       	ldd	r18, Y+12	; 0x0c
 93a:	2f 77       	andi	r18, 0x7F	; 127
 93c:	22 2e       	mov	r2, r18
 93e:	17 c0       	rjmp	.+46     	; 0x96e <vfprintf+0x170>
 940:	38 01       	movw	r6, r16
 942:	f2 e0       	ldi	r31, 0x02	; 2
 944:	6f 0e       	add	r6, r31
 946:	71 1c       	adc	r7, r1
 948:	f8 01       	movw	r30, r16
 94a:	a0 80       	ld	r10, Z
 94c:	b1 80       	ldd	r11, Z+1	; 0x01
 94e:	26 ff       	sbrs	r18, 6
 950:	03 c0       	rjmp	.+6      	; 0x958 <vfprintf+0x15a>
 952:	65 2d       	mov	r22, r5
 954:	70 e0       	ldi	r23, 0x00	; 0
 956:	02 c0       	rjmp	.+4      	; 0x95c <vfprintf+0x15e>
 958:	6f ef       	ldi	r22, 0xFF	; 255
 95a:	7f ef       	ldi	r23, 0xFF	; 255
 95c:	c5 01       	movw	r24, r10
 95e:	2c 87       	std	Y+12, r18	; 0x0c
 960:	0e 94 ed 05 	call	0xbda	; 0xbda <strnlen_P>
 964:	2c 01       	movw	r4, r24
 966:	2c 85       	ldd	r18, Y+12	; 0x0c
 968:	20 68       	ori	r18, 0x80	; 128
 96a:	22 2e       	mov	r2, r18
 96c:	83 01       	movw	r16, r6
 96e:	23 fc       	sbrc	r2, 3
 970:	1b c0       	rjmp	.+54     	; 0x9a8 <vfprintf+0x1aa>
 972:	83 2d       	mov	r24, r3
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	48 16       	cp	r4, r24
 978:	59 06       	cpc	r5, r25
 97a:	b0 f4       	brcc	.+44     	; 0x9a8 <vfprintf+0x1aa>
 97c:	b7 01       	movw	r22, r14
 97e:	80 e2       	ldi	r24, 0x20	; 32
 980:	90 e0       	ldi	r25, 0x00	; 0
 982:	0e 94 0a 06 	call	0xc14	; 0xc14 <fputc>
 986:	3a 94       	dec	r3
 988:	f4 cf       	rjmp	.-24     	; 0x972 <vfprintf+0x174>
 98a:	f5 01       	movw	r30, r10
 98c:	27 fc       	sbrc	r2, 7
 98e:	85 91       	lpm	r24, Z+
 990:	27 fe       	sbrs	r2, 7
 992:	81 91       	ld	r24, Z+
 994:	5f 01       	movw	r10, r30
 996:	b7 01       	movw	r22, r14
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	0e 94 0a 06 	call	0xc14	; 0xc14 <fputc>
 99e:	31 10       	cpse	r3, r1
 9a0:	3a 94       	dec	r3
 9a2:	f1 e0       	ldi	r31, 0x01	; 1
 9a4:	4f 1a       	sub	r4, r31
 9a6:	51 08       	sbc	r5, r1
 9a8:	41 14       	cp	r4, r1
 9aa:	51 04       	cpc	r5, r1
 9ac:	71 f7       	brne	.-36     	; 0x98a <vfprintf+0x18c>
 9ae:	e5 c0       	rjmp	.+458    	; 0xb7a <vfprintf+0x37c>
 9b0:	84 36       	cpi	r24, 0x64	; 100
 9b2:	11 f0       	breq	.+4      	; 0x9b8 <vfprintf+0x1ba>
 9b4:	89 36       	cpi	r24, 0x69	; 105
 9b6:	39 f5       	brne	.+78     	; 0xa06 <vfprintf+0x208>
 9b8:	f8 01       	movw	r30, r16
 9ba:	27 ff       	sbrs	r18, 7
 9bc:	07 c0       	rjmp	.+14     	; 0x9cc <vfprintf+0x1ce>
 9be:	60 81       	ld	r22, Z
 9c0:	71 81       	ldd	r23, Z+1	; 0x01
 9c2:	82 81       	ldd	r24, Z+2	; 0x02
 9c4:	93 81       	ldd	r25, Z+3	; 0x03
 9c6:	0c 5f       	subi	r16, 0xFC	; 252
 9c8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ca:	08 c0       	rjmp	.+16     	; 0x9dc <vfprintf+0x1de>
 9cc:	60 81       	ld	r22, Z
 9ce:	71 81       	ldd	r23, Z+1	; 0x01
 9d0:	88 27       	eor	r24, r24
 9d2:	77 fd       	sbrc	r23, 7
 9d4:	80 95       	com	r24
 9d6:	98 2f       	mov	r25, r24
 9d8:	0e 5f       	subi	r16, 0xFE	; 254
 9da:	1f 4f       	sbci	r17, 0xFF	; 255
 9dc:	2f 76       	andi	r18, 0x6F	; 111
 9de:	b2 2e       	mov	r11, r18
 9e0:	97 ff       	sbrs	r25, 7
 9e2:	09 c0       	rjmp	.+18     	; 0x9f6 <vfprintf+0x1f8>
 9e4:	90 95       	com	r25
 9e6:	80 95       	com	r24
 9e8:	70 95       	com	r23
 9ea:	61 95       	neg	r22
 9ec:	7f 4f       	sbci	r23, 0xFF	; 255
 9ee:	8f 4f       	sbci	r24, 0xFF	; 255
 9f0:	9f 4f       	sbci	r25, 0xFF	; 255
 9f2:	20 68       	ori	r18, 0x80	; 128
 9f4:	b2 2e       	mov	r11, r18
 9f6:	2a e0       	ldi	r18, 0x0A	; 10
 9f8:	30 e0       	ldi	r19, 0x00	; 0
 9fa:	a4 01       	movw	r20, r8
 9fc:	0e 94 3c 06 	call	0xc78	; 0xc78 <__ultoa_invert>
 a00:	a8 2e       	mov	r10, r24
 a02:	a8 18       	sub	r10, r8
 a04:	44 c0       	rjmp	.+136    	; 0xa8e <vfprintf+0x290>
 a06:	85 37       	cpi	r24, 0x75	; 117
 a08:	29 f4       	brne	.+10     	; 0xa14 <vfprintf+0x216>
 a0a:	2f 7e       	andi	r18, 0xEF	; 239
 a0c:	b2 2e       	mov	r11, r18
 a0e:	2a e0       	ldi	r18, 0x0A	; 10
 a10:	30 e0       	ldi	r19, 0x00	; 0
 a12:	25 c0       	rjmp	.+74     	; 0xa5e <vfprintf+0x260>
 a14:	f2 2f       	mov	r31, r18
 a16:	f9 7f       	andi	r31, 0xF9	; 249
 a18:	bf 2e       	mov	r11, r31
 a1a:	8f 36       	cpi	r24, 0x6F	; 111
 a1c:	c1 f0       	breq	.+48     	; 0xa4e <vfprintf+0x250>
 a1e:	18 f4       	brcc	.+6      	; 0xa26 <vfprintf+0x228>
 a20:	88 35       	cpi	r24, 0x58	; 88
 a22:	79 f0       	breq	.+30     	; 0xa42 <vfprintf+0x244>
 a24:	b4 c0       	rjmp	.+360    	; 0xb8e <vfprintf+0x390>
 a26:	80 37       	cpi	r24, 0x70	; 112
 a28:	19 f0       	breq	.+6      	; 0xa30 <vfprintf+0x232>
 a2a:	88 37       	cpi	r24, 0x78	; 120
 a2c:	21 f0       	breq	.+8      	; 0xa36 <vfprintf+0x238>
 a2e:	af c0       	rjmp	.+350    	; 0xb8e <vfprintf+0x390>
 a30:	2f 2f       	mov	r18, r31
 a32:	20 61       	ori	r18, 0x10	; 16
 a34:	b2 2e       	mov	r11, r18
 a36:	b4 fe       	sbrs	r11, 4
 a38:	0d c0       	rjmp	.+26     	; 0xa54 <vfprintf+0x256>
 a3a:	8b 2d       	mov	r24, r11
 a3c:	84 60       	ori	r24, 0x04	; 4
 a3e:	b8 2e       	mov	r11, r24
 a40:	09 c0       	rjmp	.+18     	; 0xa54 <vfprintf+0x256>
 a42:	24 ff       	sbrs	r18, 4
 a44:	0a c0       	rjmp	.+20     	; 0xa5a <vfprintf+0x25c>
 a46:	9f 2f       	mov	r25, r31
 a48:	96 60       	ori	r25, 0x06	; 6
 a4a:	b9 2e       	mov	r11, r25
 a4c:	06 c0       	rjmp	.+12     	; 0xa5a <vfprintf+0x25c>
 a4e:	28 e0       	ldi	r18, 0x08	; 8
 a50:	30 e0       	ldi	r19, 0x00	; 0
 a52:	05 c0       	rjmp	.+10     	; 0xa5e <vfprintf+0x260>
 a54:	20 e1       	ldi	r18, 0x10	; 16
 a56:	30 e0       	ldi	r19, 0x00	; 0
 a58:	02 c0       	rjmp	.+4      	; 0xa5e <vfprintf+0x260>
 a5a:	20 e1       	ldi	r18, 0x10	; 16
 a5c:	32 e0       	ldi	r19, 0x02	; 2
 a5e:	f8 01       	movw	r30, r16
 a60:	b7 fe       	sbrs	r11, 7
 a62:	07 c0       	rjmp	.+14     	; 0xa72 <vfprintf+0x274>
 a64:	60 81       	ld	r22, Z
 a66:	71 81       	ldd	r23, Z+1	; 0x01
 a68:	82 81       	ldd	r24, Z+2	; 0x02
 a6a:	93 81       	ldd	r25, Z+3	; 0x03
 a6c:	0c 5f       	subi	r16, 0xFC	; 252
 a6e:	1f 4f       	sbci	r17, 0xFF	; 255
 a70:	06 c0       	rjmp	.+12     	; 0xa7e <vfprintf+0x280>
 a72:	60 81       	ld	r22, Z
 a74:	71 81       	ldd	r23, Z+1	; 0x01
 a76:	80 e0       	ldi	r24, 0x00	; 0
 a78:	90 e0       	ldi	r25, 0x00	; 0
 a7a:	0e 5f       	subi	r16, 0xFE	; 254
 a7c:	1f 4f       	sbci	r17, 0xFF	; 255
 a7e:	a4 01       	movw	r20, r8
 a80:	0e 94 3c 06 	call	0xc78	; 0xc78 <__ultoa_invert>
 a84:	a8 2e       	mov	r10, r24
 a86:	a8 18       	sub	r10, r8
 a88:	fb 2d       	mov	r31, r11
 a8a:	ff 77       	andi	r31, 0x7F	; 127
 a8c:	bf 2e       	mov	r11, r31
 a8e:	b6 fe       	sbrs	r11, 6
 a90:	0b c0       	rjmp	.+22     	; 0xaa8 <vfprintf+0x2aa>
 a92:	2b 2d       	mov	r18, r11
 a94:	2e 7f       	andi	r18, 0xFE	; 254
 a96:	a5 14       	cp	r10, r5
 a98:	50 f4       	brcc	.+20     	; 0xaae <vfprintf+0x2b0>
 a9a:	b4 fe       	sbrs	r11, 4
 a9c:	0a c0       	rjmp	.+20     	; 0xab2 <vfprintf+0x2b4>
 a9e:	b2 fc       	sbrc	r11, 2
 aa0:	08 c0       	rjmp	.+16     	; 0xab2 <vfprintf+0x2b4>
 aa2:	2b 2d       	mov	r18, r11
 aa4:	2e 7e       	andi	r18, 0xEE	; 238
 aa6:	05 c0       	rjmp	.+10     	; 0xab2 <vfprintf+0x2b4>
 aa8:	7a 2c       	mov	r7, r10
 aaa:	2b 2d       	mov	r18, r11
 aac:	03 c0       	rjmp	.+6      	; 0xab4 <vfprintf+0x2b6>
 aae:	7a 2c       	mov	r7, r10
 ab0:	01 c0       	rjmp	.+2      	; 0xab4 <vfprintf+0x2b6>
 ab2:	75 2c       	mov	r7, r5
 ab4:	24 ff       	sbrs	r18, 4
 ab6:	0d c0       	rjmp	.+26     	; 0xad2 <vfprintf+0x2d4>
 ab8:	fe 01       	movw	r30, r28
 aba:	ea 0d       	add	r30, r10
 abc:	f1 1d       	adc	r31, r1
 abe:	80 81       	ld	r24, Z
 ac0:	80 33       	cpi	r24, 0x30	; 48
 ac2:	11 f4       	brne	.+4      	; 0xac8 <vfprintf+0x2ca>
 ac4:	29 7e       	andi	r18, 0xE9	; 233
 ac6:	09 c0       	rjmp	.+18     	; 0xada <vfprintf+0x2dc>
 ac8:	22 ff       	sbrs	r18, 2
 aca:	06 c0       	rjmp	.+12     	; 0xad8 <vfprintf+0x2da>
 acc:	73 94       	inc	r7
 ace:	73 94       	inc	r7
 ad0:	04 c0       	rjmp	.+8      	; 0xada <vfprintf+0x2dc>
 ad2:	82 2f       	mov	r24, r18
 ad4:	86 78       	andi	r24, 0x86	; 134
 ad6:	09 f0       	breq	.+2      	; 0xada <vfprintf+0x2dc>
 ad8:	73 94       	inc	r7
 ada:	23 fd       	sbrc	r18, 3
 adc:	13 c0       	rjmp	.+38     	; 0xb04 <vfprintf+0x306>
 ade:	20 ff       	sbrs	r18, 0
 ae0:	06 c0       	rjmp	.+12     	; 0xaee <vfprintf+0x2f0>
 ae2:	5a 2c       	mov	r5, r10
 ae4:	73 14       	cp	r7, r3
 ae6:	18 f4       	brcc	.+6      	; 0xaee <vfprintf+0x2f0>
 ae8:	53 0c       	add	r5, r3
 aea:	57 18       	sub	r5, r7
 aec:	73 2c       	mov	r7, r3
 aee:	73 14       	cp	r7, r3
 af0:	68 f4       	brcc	.+26     	; 0xb0c <vfprintf+0x30e>
 af2:	b7 01       	movw	r22, r14
 af4:	80 e2       	ldi	r24, 0x20	; 32
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	2c 87       	std	Y+12, r18	; 0x0c
 afa:	0e 94 0a 06 	call	0xc14	; 0xc14 <fputc>
 afe:	73 94       	inc	r7
 b00:	2c 85       	ldd	r18, Y+12	; 0x0c
 b02:	f5 cf       	rjmp	.-22     	; 0xaee <vfprintf+0x2f0>
 b04:	73 14       	cp	r7, r3
 b06:	10 f4       	brcc	.+4      	; 0xb0c <vfprintf+0x30e>
 b08:	37 18       	sub	r3, r7
 b0a:	01 c0       	rjmp	.+2      	; 0xb0e <vfprintf+0x310>
 b0c:	31 2c       	mov	r3, r1
 b0e:	24 ff       	sbrs	r18, 4
 b10:	12 c0       	rjmp	.+36     	; 0xb36 <vfprintf+0x338>
 b12:	b7 01       	movw	r22, r14
 b14:	80 e3       	ldi	r24, 0x30	; 48
 b16:	90 e0       	ldi	r25, 0x00	; 0
 b18:	2c 87       	std	Y+12, r18	; 0x0c
 b1a:	0e 94 0a 06 	call	0xc14	; 0xc14 <fputc>
 b1e:	2c 85       	ldd	r18, Y+12	; 0x0c
 b20:	22 ff       	sbrs	r18, 2
 b22:	17 c0       	rjmp	.+46     	; 0xb52 <vfprintf+0x354>
 b24:	21 ff       	sbrs	r18, 1
 b26:	03 c0       	rjmp	.+6      	; 0xb2e <vfprintf+0x330>
 b28:	88 e5       	ldi	r24, 0x58	; 88
 b2a:	90 e0       	ldi	r25, 0x00	; 0
 b2c:	02 c0       	rjmp	.+4      	; 0xb32 <vfprintf+0x334>
 b2e:	88 e7       	ldi	r24, 0x78	; 120
 b30:	90 e0       	ldi	r25, 0x00	; 0
 b32:	b7 01       	movw	r22, r14
 b34:	0c c0       	rjmp	.+24     	; 0xb4e <vfprintf+0x350>
 b36:	82 2f       	mov	r24, r18
 b38:	86 78       	andi	r24, 0x86	; 134
 b3a:	59 f0       	breq	.+22     	; 0xb52 <vfprintf+0x354>
 b3c:	21 fd       	sbrc	r18, 1
 b3e:	02 c0       	rjmp	.+4      	; 0xb44 <vfprintf+0x346>
 b40:	80 e2       	ldi	r24, 0x20	; 32
 b42:	01 c0       	rjmp	.+2      	; 0xb46 <vfprintf+0x348>
 b44:	8b e2       	ldi	r24, 0x2B	; 43
 b46:	27 fd       	sbrc	r18, 7
 b48:	8d e2       	ldi	r24, 0x2D	; 45
 b4a:	b7 01       	movw	r22, r14
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	0e 94 0a 06 	call	0xc14	; 0xc14 <fputc>
 b52:	a5 14       	cp	r10, r5
 b54:	38 f4       	brcc	.+14     	; 0xb64 <vfprintf+0x366>
 b56:	b7 01       	movw	r22, r14
 b58:	80 e3       	ldi	r24, 0x30	; 48
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	0e 94 0a 06 	call	0xc14	; 0xc14 <fputc>
 b60:	5a 94       	dec	r5
 b62:	f7 cf       	rjmp	.-18     	; 0xb52 <vfprintf+0x354>
 b64:	aa 94       	dec	r10
 b66:	f4 01       	movw	r30, r8
 b68:	ea 0d       	add	r30, r10
 b6a:	f1 1d       	adc	r31, r1
 b6c:	80 81       	ld	r24, Z
 b6e:	b7 01       	movw	r22, r14
 b70:	90 e0       	ldi	r25, 0x00	; 0
 b72:	0e 94 0a 06 	call	0xc14	; 0xc14 <fputc>
 b76:	a1 10       	cpse	r10, r1
 b78:	f5 cf       	rjmp	.-22     	; 0xb64 <vfprintf+0x366>
 b7a:	33 20       	and	r3, r3
 b7c:	09 f4       	brne	.+2      	; 0xb80 <vfprintf+0x382>
 b7e:	51 ce       	rjmp	.-862    	; 0x822 <vfprintf+0x24>
 b80:	b7 01       	movw	r22, r14
 b82:	80 e2       	ldi	r24, 0x20	; 32
 b84:	90 e0       	ldi	r25, 0x00	; 0
 b86:	0e 94 0a 06 	call	0xc14	; 0xc14 <fputc>
 b8a:	3a 94       	dec	r3
 b8c:	f6 cf       	rjmp	.-20     	; 0xb7a <vfprintf+0x37c>
 b8e:	f7 01       	movw	r30, r14
 b90:	86 81       	ldd	r24, Z+6	; 0x06
 b92:	97 81       	ldd	r25, Z+7	; 0x07
 b94:	02 c0       	rjmp	.+4      	; 0xb9a <vfprintf+0x39c>
 b96:	8f ef       	ldi	r24, 0xFF	; 255
 b98:	9f ef       	ldi	r25, 0xFF	; 255
 b9a:	2c 96       	adiw	r28, 0x0c	; 12
 b9c:	e2 e1       	ldi	r30, 0x12	; 18
 b9e:	0c 94 b6 06 	jmp	0xd6c	; 0xd6c <__epilogue_restores__>

00000ba2 <calloc>:
 ba2:	0f 93       	push	r16
 ba4:	1f 93       	push	r17
 ba6:	cf 93       	push	r28
 ba8:	df 93       	push	r29
 baa:	86 9f       	mul	r24, r22
 bac:	80 01       	movw	r16, r0
 bae:	87 9f       	mul	r24, r23
 bb0:	10 0d       	add	r17, r0
 bb2:	96 9f       	mul	r25, r22
 bb4:	10 0d       	add	r17, r0
 bb6:	11 24       	eor	r1, r1
 bb8:	c8 01       	movw	r24, r16
 bba:	0e 94 79 02 	call	0x4f2	; 0x4f2 <malloc>
 bbe:	ec 01       	movw	r28, r24
 bc0:	00 97       	sbiw	r24, 0x00	; 0
 bc2:	29 f0       	breq	.+10     	; 0xbce <calloc+0x2c>
 bc4:	a8 01       	movw	r20, r16
 bc6:	60 e0       	ldi	r22, 0x00	; 0
 bc8:	70 e0       	ldi	r23, 0x00	; 0
 bca:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <memset>
 bce:	ce 01       	movw	r24, r28
 bd0:	df 91       	pop	r29
 bd2:	cf 91       	pop	r28
 bd4:	1f 91       	pop	r17
 bd6:	0f 91       	pop	r16
 bd8:	08 95       	ret

00000bda <strnlen_P>:
 bda:	fc 01       	movw	r30, r24
 bdc:	05 90       	lpm	r0, Z+
 bde:	61 50       	subi	r22, 0x01	; 1
 be0:	70 40       	sbci	r23, 0x00	; 0
 be2:	01 10       	cpse	r0, r1
 be4:	d8 f7       	brcc	.-10     	; 0xbdc <strnlen_P+0x2>
 be6:	80 95       	com	r24
 be8:	90 95       	com	r25
 bea:	8e 0f       	add	r24, r30
 bec:	9f 1f       	adc	r25, r31
 bee:	08 95       	ret

00000bf0 <memset>:
 bf0:	dc 01       	movw	r26, r24
 bf2:	01 c0       	rjmp	.+2      	; 0xbf6 <memset+0x6>
 bf4:	6d 93       	st	X+, r22
 bf6:	41 50       	subi	r20, 0x01	; 1
 bf8:	50 40       	sbci	r21, 0x00	; 0
 bfa:	e0 f7       	brcc	.-8      	; 0xbf4 <memset+0x4>
 bfc:	08 95       	ret

00000bfe <strnlen>:
 bfe:	fc 01       	movw	r30, r24
 c00:	61 50       	subi	r22, 0x01	; 1
 c02:	70 40       	sbci	r23, 0x00	; 0
 c04:	01 90       	ld	r0, Z+
 c06:	01 10       	cpse	r0, r1
 c08:	d8 f7       	brcc	.-10     	; 0xc00 <strnlen+0x2>
 c0a:	80 95       	com	r24
 c0c:	90 95       	com	r25
 c0e:	8e 0f       	add	r24, r30
 c10:	9f 1f       	adc	r25, r31
 c12:	08 95       	ret

00000c14 <fputc>:
 c14:	0f 93       	push	r16
 c16:	1f 93       	push	r17
 c18:	cf 93       	push	r28
 c1a:	df 93       	push	r29
 c1c:	18 2f       	mov	r17, r24
 c1e:	09 2f       	mov	r16, r25
 c20:	eb 01       	movw	r28, r22
 c22:	8b 81       	ldd	r24, Y+3	; 0x03
 c24:	81 fd       	sbrc	r24, 1
 c26:	03 c0       	rjmp	.+6      	; 0xc2e <fputc+0x1a>
 c28:	8f ef       	ldi	r24, 0xFF	; 255
 c2a:	9f ef       	ldi	r25, 0xFF	; 255
 c2c:	20 c0       	rjmp	.+64     	; 0xc6e <fputc+0x5a>
 c2e:	82 ff       	sbrs	r24, 2
 c30:	10 c0       	rjmp	.+32     	; 0xc52 <fputc+0x3e>
 c32:	4e 81       	ldd	r20, Y+6	; 0x06
 c34:	5f 81       	ldd	r21, Y+7	; 0x07
 c36:	2c 81       	ldd	r18, Y+4	; 0x04
 c38:	3d 81       	ldd	r19, Y+5	; 0x05
 c3a:	42 17       	cp	r20, r18
 c3c:	53 07       	cpc	r21, r19
 c3e:	7c f4       	brge	.+30     	; 0xc5e <fputc+0x4a>
 c40:	e8 81       	ld	r30, Y
 c42:	f9 81       	ldd	r31, Y+1	; 0x01
 c44:	9f 01       	movw	r18, r30
 c46:	2f 5f       	subi	r18, 0xFF	; 255
 c48:	3f 4f       	sbci	r19, 0xFF	; 255
 c4a:	39 83       	std	Y+1, r19	; 0x01
 c4c:	28 83       	st	Y, r18
 c4e:	10 83       	st	Z, r17
 c50:	06 c0       	rjmp	.+12     	; 0xc5e <fputc+0x4a>
 c52:	e8 85       	ldd	r30, Y+8	; 0x08
 c54:	f9 85       	ldd	r31, Y+9	; 0x09
 c56:	81 2f       	mov	r24, r17
 c58:	09 95       	icall
 c5a:	89 2b       	or	r24, r25
 c5c:	29 f7       	brne	.-54     	; 0xc28 <fputc+0x14>
 c5e:	2e 81       	ldd	r18, Y+6	; 0x06
 c60:	3f 81       	ldd	r19, Y+7	; 0x07
 c62:	2f 5f       	subi	r18, 0xFF	; 255
 c64:	3f 4f       	sbci	r19, 0xFF	; 255
 c66:	3f 83       	std	Y+7, r19	; 0x07
 c68:	2e 83       	std	Y+6, r18	; 0x06
 c6a:	81 2f       	mov	r24, r17
 c6c:	90 2f       	mov	r25, r16
 c6e:	df 91       	pop	r29
 c70:	cf 91       	pop	r28
 c72:	1f 91       	pop	r17
 c74:	0f 91       	pop	r16
 c76:	08 95       	ret

00000c78 <__ultoa_invert>:
 c78:	fa 01       	movw	r30, r20
 c7a:	aa 27       	eor	r26, r26
 c7c:	28 30       	cpi	r18, 0x08	; 8
 c7e:	51 f1       	breq	.+84     	; 0xcd4 <__ultoa_invert+0x5c>
 c80:	20 31       	cpi	r18, 0x10	; 16
 c82:	81 f1       	breq	.+96     	; 0xce4 <__ultoa_invert+0x6c>
 c84:	e8 94       	clt
 c86:	6f 93       	push	r22
 c88:	6e 7f       	andi	r22, 0xFE	; 254
 c8a:	6e 5f       	subi	r22, 0xFE	; 254
 c8c:	7f 4f       	sbci	r23, 0xFF	; 255
 c8e:	8f 4f       	sbci	r24, 0xFF	; 255
 c90:	9f 4f       	sbci	r25, 0xFF	; 255
 c92:	af 4f       	sbci	r26, 0xFF	; 255
 c94:	b1 e0       	ldi	r27, 0x01	; 1
 c96:	3e d0       	rcall	.+124    	; 0xd14 <__ultoa_invert+0x9c>
 c98:	b4 e0       	ldi	r27, 0x04	; 4
 c9a:	3c d0       	rcall	.+120    	; 0xd14 <__ultoa_invert+0x9c>
 c9c:	67 0f       	add	r22, r23
 c9e:	78 1f       	adc	r23, r24
 ca0:	89 1f       	adc	r24, r25
 ca2:	9a 1f       	adc	r25, r26
 ca4:	a1 1d       	adc	r26, r1
 ca6:	68 0f       	add	r22, r24
 ca8:	79 1f       	adc	r23, r25
 caa:	8a 1f       	adc	r24, r26
 cac:	91 1d       	adc	r25, r1
 cae:	a1 1d       	adc	r26, r1
 cb0:	6a 0f       	add	r22, r26
 cb2:	71 1d       	adc	r23, r1
 cb4:	81 1d       	adc	r24, r1
 cb6:	91 1d       	adc	r25, r1
 cb8:	a1 1d       	adc	r26, r1
 cba:	20 d0       	rcall	.+64     	; 0xcfc <__ultoa_invert+0x84>
 cbc:	09 f4       	brne	.+2      	; 0xcc0 <__ultoa_invert+0x48>
 cbe:	68 94       	set
 cc0:	3f 91       	pop	r19
 cc2:	2a e0       	ldi	r18, 0x0A	; 10
 cc4:	26 9f       	mul	r18, r22
 cc6:	11 24       	eor	r1, r1
 cc8:	30 19       	sub	r19, r0
 cca:	30 5d       	subi	r19, 0xD0	; 208
 ccc:	31 93       	st	Z+, r19
 cce:	de f6       	brtc	.-74     	; 0xc86 <__ultoa_invert+0xe>
 cd0:	cf 01       	movw	r24, r30
 cd2:	08 95       	ret
 cd4:	46 2f       	mov	r20, r22
 cd6:	47 70       	andi	r20, 0x07	; 7
 cd8:	40 5d       	subi	r20, 0xD0	; 208
 cda:	41 93       	st	Z+, r20
 cdc:	b3 e0       	ldi	r27, 0x03	; 3
 cde:	0f d0       	rcall	.+30     	; 0xcfe <__ultoa_invert+0x86>
 ce0:	c9 f7       	brne	.-14     	; 0xcd4 <__ultoa_invert+0x5c>
 ce2:	f6 cf       	rjmp	.-20     	; 0xcd0 <__ultoa_invert+0x58>
 ce4:	46 2f       	mov	r20, r22
 ce6:	4f 70       	andi	r20, 0x0F	; 15
 ce8:	40 5d       	subi	r20, 0xD0	; 208
 cea:	4a 33       	cpi	r20, 0x3A	; 58
 cec:	18 f0       	brcs	.+6      	; 0xcf4 <__ultoa_invert+0x7c>
 cee:	49 5d       	subi	r20, 0xD9	; 217
 cf0:	31 fd       	sbrc	r19, 1
 cf2:	40 52       	subi	r20, 0x20	; 32
 cf4:	41 93       	st	Z+, r20
 cf6:	02 d0       	rcall	.+4      	; 0xcfc <__ultoa_invert+0x84>
 cf8:	a9 f7       	brne	.-22     	; 0xce4 <__ultoa_invert+0x6c>
 cfa:	ea cf       	rjmp	.-44     	; 0xcd0 <__ultoa_invert+0x58>
 cfc:	b4 e0       	ldi	r27, 0x04	; 4
 cfe:	a6 95       	lsr	r26
 d00:	97 95       	ror	r25
 d02:	87 95       	ror	r24
 d04:	77 95       	ror	r23
 d06:	67 95       	ror	r22
 d08:	ba 95       	dec	r27
 d0a:	c9 f7       	brne	.-14     	; 0xcfe <__ultoa_invert+0x86>
 d0c:	00 97       	sbiw	r24, 0x00	; 0
 d0e:	61 05       	cpc	r22, r1
 d10:	71 05       	cpc	r23, r1
 d12:	08 95       	ret
 d14:	9b 01       	movw	r18, r22
 d16:	ac 01       	movw	r20, r24
 d18:	0a 2e       	mov	r0, r26
 d1a:	06 94       	lsr	r0
 d1c:	57 95       	ror	r21
 d1e:	47 95       	ror	r20
 d20:	37 95       	ror	r19
 d22:	27 95       	ror	r18
 d24:	ba 95       	dec	r27
 d26:	c9 f7       	brne	.-14     	; 0xd1a <__ultoa_invert+0xa2>
 d28:	62 0f       	add	r22, r18
 d2a:	73 1f       	adc	r23, r19
 d2c:	84 1f       	adc	r24, r20
 d2e:	95 1f       	adc	r25, r21
 d30:	a0 1d       	adc	r26, r0
 d32:	08 95       	ret

00000d34 <__prologue_saves__>:
 d34:	2f 92       	push	r2
 d36:	3f 92       	push	r3
 d38:	4f 92       	push	r4
 d3a:	5f 92       	push	r5
 d3c:	6f 92       	push	r6
 d3e:	7f 92       	push	r7
 d40:	8f 92       	push	r8
 d42:	9f 92       	push	r9
 d44:	af 92       	push	r10
 d46:	bf 92       	push	r11
 d48:	cf 92       	push	r12
 d4a:	df 92       	push	r13
 d4c:	ef 92       	push	r14
 d4e:	ff 92       	push	r15
 d50:	0f 93       	push	r16
 d52:	1f 93       	push	r17
 d54:	cf 93       	push	r28
 d56:	df 93       	push	r29
 d58:	cd b7       	in	r28, 0x3d	; 61
 d5a:	de b7       	in	r29, 0x3e	; 62
 d5c:	ca 1b       	sub	r28, r26
 d5e:	db 0b       	sbc	r29, r27
 d60:	0f b6       	in	r0, 0x3f	; 63
 d62:	f8 94       	cli
 d64:	de bf       	out	0x3e, r29	; 62
 d66:	0f be       	out	0x3f, r0	; 63
 d68:	cd bf       	out	0x3d, r28	; 61
 d6a:	09 94       	ijmp

00000d6c <__epilogue_restores__>:
 d6c:	2a 88       	ldd	r2, Y+18	; 0x12
 d6e:	39 88       	ldd	r3, Y+17	; 0x11
 d70:	48 88       	ldd	r4, Y+16	; 0x10
 d72:	5f 84       	ldd	r5, Y+15	; 0x0f
 d74:	6e 84       	ldd	r6, Y+14	; 0x0e
 d76:	7d 84       	ldd	r7, Y+13	; 0x0d
 d78:	8c 84       	ldd	r8, Y+12	; 0x0c
 d7a:	9b 84       	ldd	r9, Y+11	; 0x0b
 d7c:	aa 84       	ldd	r10, Y+10	; 0x0a
 d7e:	b9 84       	ldd	r11, Y+9	; 0x09
 d80:	c8 84       	ldd	r12, Y+8	; 0x08
 d82:	df 80       	ldd	r13, Y+7	; 0x07
 d84:	ee 80       	ldd	r14, Y+6	; 0x06
 d86:	fd 80       	ldd	r15, Y+5	; 0x05
 d88:	0c 81       	ldd	r16, Y+4	; 0x04
 d8a:	1b 81       	ldd	r17, Y+3	; 0x03
 d8c:	aa 81       	ldd	r26, Y+2	; 0x02
 d8e:	b9 81       	ldd	r27, Y+1	; 0x01
 d90:	ce 0f       	add	r28, r30
 d92:	d1 1d       	adc	r29, r1
 d94:	0f b6       	in	r0, 0x3f	; 63
 d96:	f8 94       	cli
 d98:	de bf       	out	0x3e, r29	; 62
 d9a:	0f be       	out	0x3f, r0	; 63
 d9c:	cd bf       	out	0x3d, r28	; 61
 d9e:	ed 01       	movw	r28, r26
 da0:	08 95       	ret

00000da2 <_exit>:
 da2:	f8 94       	cli

00000da4 <__stop_program>:
 da4:	ff cf       	rjmp	.-2      	; 0xda4 <__stop_program>
