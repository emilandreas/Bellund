
ByggernBellLund_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001dc  00800100  00003858  000038ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003858  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  008002dc  008002dc  00003ac8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003ac8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000004d0  00000000  00000000  00003b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000560b  00000000  00000000  00003ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001f01  00000000  00000000  000095ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000020d9  00000000  00000000  0000b500  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000fa4  00000000  00000000  0000d5dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000ce5  00000000  00000000  0000e580  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000413f  00000000  00000000  0000f265  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000528  00000000  00000000  000133a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 50 02 	jmp	0x4a0	; 0x4a0 <__ctors_end>
       4:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
       8:	0c 94 30 03 	jmp	0x660	; 0x660 <__vector_2>
       c:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      10:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      14:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      18:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      1c:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      20:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      24:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      28:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      2c:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      30:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      34:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      38:	0c 94 3e 0b 	jmp	0x167c	; 0x167c <__vector_14>
      3c:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      40:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      44:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      48:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      4c:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      50:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      54:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      58:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      5c:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      60:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      64:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      68:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>
      6c:	0c 94 6d 02 	jmp	0x4da	; 0x4da <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	0c 00       	.word	0x000c	; ????
      72:	0c 00       	.word	0x000c	; ????
      74:	0c 00       	.word	0x000c	; ????
      76:	0c 00       	.word	0x000c	; ????
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	0c 00       	.word	0x000c	; ????
      7e:	0c 00       	.word	0x000c	; ????
      80:	0c 00       	.word	0x000c	; ????
      82:	0c 00       	.word	0x000c	; ????
      84:	0c 00       	.word	0x000c	; ????
      86:	0c 00       	.word	0x000c	; ????
      88:	0c 00       	.word	0x000c	; ????
      8a:	0c 00       	.word	0x000c	; ????
      8c:	0c 00       	.word	0x000c	; ????
      8e:	0c 00       	.word	0x000c	; ????
      90:	0c 00       	.word	0x000c	; ????
      92:	0c 00       	.word	0x000c	; ????
      94:	0c 00       	.word	0x000c	; ????
      96:	0c 00       	.word	0x000c	; ????
      98:	0c 00       	.word	0x000c	; ????
      9a:	0c 00       	.word	0x000c	; ????
      9c:	0c 00       	.word	0x000c	; ????
      9e:	0c 00       	.word	0x000c	; ????
      a0:	0c 00       	.word	0x000c	; ????
      a2:	0c 00       	.word	0x000c	; ????
      a4:	0c 00       	.word	0x000c	; ????
      a6:	0c 00       	.word	0x000c	; ????
      a8:	0c 00       	.word	0x000c	; ????
      aa:	0c 00       	.word	0x000c	; ????
      ac:	0c 00       	.word	0x000c	; ????
      ae:	0c 00       	.word	0x000c	; ????
      b0:	09 00       	.word	0x0009	; ????
      b2:	09 00       	.word	0x0009	; ????
      b4:	09 00       	.word	0x0009	; ????
      b6:	0c 00       	.word	0x000c	; ????
      b8:	0c 00       	.word	0x000c	; ????
      ba:	0c 00       	.word	0x000c	; ????
      bc:	0c 00       	.word	0x000c	; ????
      be:	0c 00       	.word	0x000c	; ????
      c0:	0c 00       	.word	0x000c	; ????
      c2:	0c 00       	.word	0x000c	; ????
      c4:	0c 00       	.word	0x000c	; ????
      c6:	0c 00       	.word	0x000c	; ????
      c8:	0c 00       	.word	0x000c	; ????
      ca:	0c 00       	.word	0x000c	; ????
      cc:	0c 00       	.word	0x000c	; ????
      ce:	0c 00       	.word	0x000c	; ????
      d0:	0c 00       	.word	0x000c	; ????
      d2:	0c 00       	.word	0x000c	; ????
      d4:	0c 00       	.word	0x000c	; ????
      d6:	0c 00       	.word	0x000c	; ????
      d8:	0c 00       	.word	0x000c	; ????
      da:	0c 00       	.word	0x000c	; ????
      dc:	0c 00       	.word	0x000c	; ????
      de:	0c 00       	.word	0x000c	; ????
      e0:	0c 00       	.word	0x000c	; ????
      e2:	0c 00       	.word	0x000c	; ????
      e4:	0c 00       	.word	0x000c	; ????
      e6:	0c 00       	.word	0x000c	; ????
      e8:	0c 00       	.word	0x000c	; ????
      ea:	0c 00       	.word	0x000c	; ????
      ec:	0c 00       	.word	0x000c	; ????
      ee:	09 00       	.word	0x0009	; ????
      f0:	09 00       	.word	0x0009	; ????
      f2:	09 00       	.word	0x0009	; ????
      f4:	0c 00       	.word	0x000c	; ????
      f6:	0c 00       	.word	0x000c	; ????
      f8:	0c 00       	.word	0x000c	; ????
      fa:	0c 00       	.word	0x000c	; ????
      fc:	0c 00       	.word	0x000c	; ????
      fe:	0c 00       	.word	0x000c	; ????
     100:	0c 00       	.word	0x000c	; ????
     102:	0c 00       	.word	0x000c	; ????
     104:	0c 00       	.word	0x000c	; ????
     106:	0c 00       	.word	0x000c	; ????
     108:	0c 00       	.word	0x000c	; ????
     10a:	0c 00       	.word	0x000c	; ????

0000010c <mario_notes>:
     10c:	4d 0a 4d 0a 00 00 4d 0a 00 00 2d 08 4d 0a 00 00     M.M...M...-.M...
     11c:	40 0c 00 00 00 00 00 00 20 06 00 00 00 00 00 00     @....... .......
     12c:	2d 08 00 00 00 00 20 06 00 00 00 00 27 05 00 00     -..... .....'...
     13c:	00 00 e0 06 00 00 b8 07 00 00 49 07 e0 06 00 00     ..........I.....
     14c:	20 06 4d 0a 40 0c c0 0d 00 00 ea 0a 40 0c 00 00      .M.@.......@...
     15c:	4d 0a 00 00 2d 08 2d 09 b8 07 00 00 00 00 2d 08     M...-.-.......-.
     16c:	00 00 00 00 20 06 00 00 00 00 27 05 00 00 00 00     .... .....'.....
     17c:	e0 06 00 00 b8 07 00 00 49 07 e0 06 00 00 20 06     ........I..... .
     18c:	4d 0a 40 0c c0 0d 00 00 ea 0a 40 0c 00 00 4d 0a     M.@.......@...M.
     19c:	00 00 2d 08 2d 09 b8 07 00 00 00 00                 ..-.-.......

000001a8 <font>:
	...
     1b0:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     1c0:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     1d0:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     1e0:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     1f0:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     200:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     210:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     220:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     230:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     240:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     250:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     260:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     270:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     280:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     290:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     2a0:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     2b0:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     2c0:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     2d0:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     2e0:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     2f0:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     300:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     310:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     320:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     330:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     340:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     350:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     360:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     370:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     380:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     390:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     3a0:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     3b0:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     3c0:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     3d0:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     3e0:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     3f0:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     400:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     410:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     420:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     430:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     440:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     450:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     460:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     470:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     480:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     490:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............

000004a0 <__ctors_end>:
     4a0:	11 24       	eor	r1, r1
     4a2:	1f be       	out	0x3f, r1	; 63
     4a4:	cf ef       	ldi	r28, 0xFF	; 255
     4a6:	d4 e0       	ldi	r29, 0x04	; 4
     4a8:	de bf       	out	0x3e, r29	; 62
     4aa:	cd bf       	out	0x3d, r28	; 61

000004ac <__do_copy_data>:
     4ac:	12 e0       	ldi	r17, 0x02	; 2
     4ae:	a0 e0       	ldi	r26, 0x00	; 0
     4b0:	b1 e0       	ldi	r27, 0x01	; 1
     4b2:	e8 e5       	ldi	r30, 0x58	; 88
     4b4:	f8 e3       	ldi	r31, 0x38	; 56
     4b6:	02 c0       	rjmp	.+4      	; 0x4bc <__do_copy_data+0x10>
     4b8:	05 90       	lpm	r0, Z+
     4ba:	0d 92       	st	X+, r0
     4bc:	ac 3d       	cpi	r26, 0xDC	; 220
     4be:	b1 07       	cpc	r27, r17
     4c0:	d9 f7       	brne	.-10     	; 0x4b8 <__do_copy_data+0xc>

000004c2 <__do_clear_bss>:
     4c2:	22 e0       	ldi	r18, 0x02	; 2
     4c4:	ac ed       	ldi	r26, 0xDC	; 220
     4c6:	b2 e0       	ldi	r27, 0x02	; 2
     4c8:	01 c0       	rjmp	.+2      	; 0x4cc <.do_clear_bss_start>

000004ca <.do_clear_bss_loop>:
     4ca:	1d 92       	st	X+, r1

000004cc <.do_clear_bss_start>:
     4cc:	a8 3e       	cpi	r26, 0xE8	; 232
     4ce:	b2 07       	cpc	r27, r18
     4d0:	e1 f7       	brne	.-8      	; 0x4ca <.do_clear_bss_loop>
     4d2:	0e 94 04 08 	call	0x1008	; 0x1008 <main>
     4d6:	0c 94 2a 1c 	jmp	0x3854	; 0x3854 <_exit>

000004da <__bad_interrupt>:
     4da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000004de <EEPROM_read>:
     4de:	e1 99       	sbic	0x1c, 1	; 28
     4e0:	fe cf       	rjmp	.-4      	; 0x4de <EEPROM_read>
     4e2:	9f bb       	out	0x1f, r25	; 31
     4e4:	8e bb       	out	0x1e, r24	; 30
     4e6:	e0 9a       	sbi	0x1c, 0	; 28
     4e8:	8d b3       	in	r24, 0x1d	; 29
     4ea:	08 95       	ret

000004ec <EEPROM_write>:
     4ec:	f8 94       	cli
     4ee:	e1 99       	sbic	0x1c, 1	; 28
     4f0:	fe cf       	rjmp	.-4      	; 0x4ee <EEPROM_write+0x2>
     4f2:	9f bb       	out	0x1f, r25	; 31
     4f4:	8e bb       	out	0x1e, r24	; 30
     4f6:	6d bb       	out	0x1d, r22	; 29
     4f8:	e2 9a       	sbi	0x1c, 2	; 28
     4fa:	e1 9a       	sbi	0x1c, 1	; 28
     4fc:	78 94       	sei
     4fe:	08 95       	ret

00000500 <handler_init>:
volatile int handelingMessage = 0;


void handler_init(){
	// Set pin as input (PD3 = INT1)
	DDRD &= ~(1 << PD3);
     500:	8b 98       	cbi	0x11, 3	; 17
	// Set internal pull-up
	PORTD |= (1 << PD3);
     502:	93 9a       	sbi	0x12, 3	; 18
	
	//initialize external interrupt on falling edge
	MCUCR |= (1<<ISC11);
     504:	85 b7       	in	r24, 0x35	; 53
     506:	88 60       	ori	r24, 0x08	; 8
     508:	85 bf       	out	0x35, r24	; 53
	MCUCR &= ~(1<<ISC10);
     50a:	85 b7       	in	r24, 0x35	; 53
     50c:	8b 7f       	andi	r24, 0xFB	; 251
     50e:	85 bf       	out	0x35, r24	; 53
	GICR = (1<<INT1);
     510:	80 e8       	ldi	r24, 0x80	; 128
     512:	8b bf       	out	0x3b, r24	; 59
	
	//Enable global interrupts
	sei();
     514:	78 94       	sei
     516:	08 95       	ret

00000518 <send_highscore>:
ISR(INT1_vect){
	handle_message();
}

//send ping-pong highscore to node 2 through CAN
void send_highscore(uint8_t i){
     518:	1f 93       	push	r17
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	cd b7       	in	r28, 0x3d	; 61
     520:	de b7       	in	r29, 0x3e	; 62
     522:	ca 55       	subi	r28, 0x5A	; 90
     524:	d1 09       	sbc	r29, r1
     526:	0f b6       	in	r0, 0x3f	; 63
     528:	f8 94       	cli
     52a:	de bf       	out	0x3e, r29	; 62
     52c:	0f be       	out	0x3f, r0	; 63
     52e:	cd bf       	out	0x3d, r28	; 61
     530:	18 2f       	mov	r17, r24
	highscore leaderboard[16];
	highscore_leaderboard(PINGPONG, leaderboard, 16);
     532:	40 e1       	ldi	r20, 0x10	; 16
     534:	50 e0       	ldi	r21, 0x00	; 0
     536:	be 01       	movw	r22, r28
     538:	6f 5f       	subi	r22, 0xFF	; 255
     53a:	7f 4f       	sbci	r23, 0xFF	; 255
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	0e 94 2c 05 	call	0xa58	; 0xa58 <highscore_leaderboard>
	Message m;
	m.id = HIGHSCORE;
     542:	83 e0       	ldi	r24, 0x03	; 3
     544:	62 96       	adiw	r28, 0x12	; 18
     546:	8f af       	std	Y+63, r24	; 0x3f
     548:	62 97       	sbiw	r28, 0x12	; 18
	m.length = 5;
     54a:	85 e0       	ldi	r24, 0x05	; 5
     54c:	63 96       	adiw	r28, 0x13	; 19
     54e:	8f af       	std	Y+63, r24	; 0x3f
     550:	63 97       	sbiw	r28, 0x13	; 19
	m.data[0] = leaderboard[i].place;
     552:	81 2f       	mov	r24, r17
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	fc 01       	movw	r30, r24
     558:	ee 0f       	add	r30, r30
     55a:	ff 1f       	adc	r31, r31
     55c:	ee 0f       	add	r30, r30
     55e:	ff 1f       	adc	r31, r31
     560:	e8 0f       	add	r30, r24
     562:	f9 1f       	adc	r31, r25
     564:	81 e0       	ldi	r24, 0x01	; 1
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	8c 0f       	add	r24, r28
     56a:	9d 1f       	adc	r25, r29
     56c:	e8 0f       	add	r30, r24
     56e:	f9 1f       	adc	r31, r25
     570:	84 81       	ldd	r24, Z+4	; 0x04
     572:	64 96       	adiw	r28, 0x14	; 20
     574:	8f af       	std	Y+63, r24	; 0x3f
     576:	64 97       	sbiw	r28, 0x14	; 20
	m.data[1] = leaderboard[i].name[0];
     578:	80 81       	ld	r24, Z
     57a:	65 96       	adiw	r28, 0x15	; 21
     57c:	8f af       	std	Y+63, r24	; 0x3f
     57e:	65 97       	sbiw	r28, 0x15	; 21
	m.data[2] = leaderboard[i].name[1];
     580:	81 81       	ldd	r24, Z+1	; 0x01
     582:	66 96       	adiw	r28, 0x16	; 22
     584:	8f af       	std	Y+63, r24	; 0x3f
     586:	66 97       	sbiw	r28, 0x16	; 22
	m.data[3] = leaderboard[i].name[2];
     588:	82 81       	ldd	r24, Z+2	; 0x02
     58a:	67 96       	adiw	r28, 0x17	; 23
     58c:	8f af       	std	Y+63, r24	; 0x3f
     58e:	67 97       	sbiw	r28, 0x17	; 23
	m.data[4] = leaderboard[i].score;
     590:	83 81       	ldd	r24, Z+3	; 0x03
     592:	68 96       	adiw	r28, 0x18	; 24
     594:	8f af       	std	Y+63, r24	; 0x3f
     596:	68 97       	sbiw	r28, 0x18	; 24
	CAN_transmit(&m);
     598:	ce 01       	movw	r24, r28
     59a:	8f 5a       	subi	r24, 0xAF	; 175
     59c:	9f 4f       	sbci	r25, 0xFF	; 255
     59e:	0e 94 40 08 	call	0x1080	; 0x1080 <CAN_transmit>
}
     5a2:	c6 5a       	subi	r28, 0xA6	; 166
     5a4:	df 4f       	sbci	r29, 0xFF	; 255
     5a6:	0f b6       	in	r0, 0x3f	; 63
     5a8:	f8 94       	cli
     5aa:	de bf       	out	0x3e, r29	; 62
     5ac:	0f be       	out	0x3f, r0	; 63
     5ae:	cd bf       	out	0x3d, r28	; 61
     5b0:	df 91       	pop	r29
     5b2:	cf 91       	pop	r28
     5b4:	1f 91       	pop	r17
     5b6:	08 95       	ret

000005b8 <send_controlls>:
		default:
			break;
	}
}

void send_controlls(){
     5b8:	cf 93       	push	r28
     5ba:	df 93       	push	r29
     5bc:	cd b7       	in	r28, 0x3d	; 61
     5be:	de b7       	in	r29, 0x3e	; 62
     5c0:	2a 97       	sbiw	r28, 0x0a	; 10
     5c2:	0f b6       	in	r0, 0x3f	; 63
     5c4:	f8 94       	cli
     5c6:	de bf       	out	0x3e, r29	; 62
     5c8:	0f be       	out	0x3f, r0	; 63
     5ca:	cd bf       	out	0x3d, r28	; 61
	Message m;
	Joystick J;
	Slider S;
		
	//Joystick
	J = get_joystick_position();
     5cc:	0e 94 2b 09 	call	0x1256	; 0x1256 <get_joystick_position>
	m.id = JOY;
     5d0:	19 82       	std	Y+1, r1	; 0x01
	m.length = 8;
     5d2:	28 e0       	ldi	r18, 0x08	; 8
     5d4:	2a 83       	std	Y+2, r18	; 0x02
	m.data[0] = J.X;
     5d6:	6b 83       	std	Y+3, r22	; 0x03
	m.data[1] = J.Y;
     5d8:	7c 83       	std	Y+4, r23	; 0x04
	m.data[2] = J.D;
     5da:	8d 83       	std	Y+5, r24	; 0x05
	m.data[3] = J.Button;
     5dc:	9e 83       	std	Y+6, r25	; 0x06
		
	//Slider
	S = get_slider_position();
     5de:	0e 94 ae 08 	call	0x115c	; 0x115c <get_slider_position>
	m.data[4] = S.left;
     5e2:	6f 83       	std	Y+7, r22	; 0x07
	m.data[5] = S.right;
     5e4:	78 87       	std	Y+8, r23	; 0x08
	m.data[6] = S.leftButton;
     5e6:	89 87       	std	Y+9, r24	; 0x09
	m.data[7] = S.rightButton;
     5e8:	9a 87       	std	Y+10, r25	; 0x0a
		
	//Send can message
	CAN_transmit(&m);
     5ea:	ce 01       	movw	r24, r28
     5ec:	01 96       	adiw	r24, 0x01	; 1
     5ee:	0e 94 40 08 	call	0x1080	; 0x1080 <CAN_transmit>
}
     5f2:	2a 96       	adiw	r28, 0x0a	; 10
     5f4:	0f b6       	in	r0, 0x3f	; 63
     5f6:	f8 94       	cli
     5f8:	de bf       	out	0x3e, r29	; 62
     5fa:	0f be       	out	0x3f, r0	; 63
     5fc:	cd bf       	out	0x3d, r28	; 61
     5fe:	df 91       	pop	r29
     600:	cf 91       	pop	r28
     602:	08 95       	ret

00000604 <handle_message>:
	m.data[4] = leaderboard[i].score;
	CAN_transmit(&m);
}


void handle_message(){
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	cd b7       	in	r28, 0x3d	; 61
     60a:	de b7       	in	r29, 0x3e	; 62
     60c:	2a 97       	sbiw	r28, 0x0a	; 10
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
	Message m;
	CAN_receive(&m);
     618:	ce 01       	movw	r24, r28
     61a:	01 96       	adiw	r24, 0x01	; 1
     61c:	0e 94 73 08 	call	0x10e6	; 0x10e6 <CAN_receive>
	
	//Decide what to do
	switch(m.id){
     620:	89 81       	ldd	r24, Y+1	; 0x01
     622:	82 30       	cpi	r24, 0x02	; 2
     624:	39 f0       	breq	.+14     	; 0x634 <handle_message+0x30>
     626:	83 30       	cpi	r24, 0x03	; 3
     628:	79 f0       	breq	.+30     	; 0x648 <handle_message+0x44>
     62a:	81 30       	cpi	r24, 0x01	; 1
     62c:	81 f4       	brne	.+32     	; 0x64e <handle_message+0x4a>
		case JOY:
			break;
		case JOYREQ:
			send_controlls();
     62e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <send_controlls>
			break;
     632:	0d c0       	rjmp	.+26     	; 0x64e <handle_message+0x4a>
		case GAME_STATUS:
			state_set(m.data[0]);
     634:	8b 81       	ldd	r24, Y+3	; 0x03
     636:	0e 94 f7 07 	call	0xfee	; 0xfee <state_set>
			if (m.data[0] != SLEEP){
     63a:	8b 81       	ldd	r24, Y+3	; 0x03
     63c:	88 23       	and	r24, r24
     63e:	39 f0       	breq	.+14     	; 0x64e <handle_message+0x4a>
				score_set(m.data[1]);
     640:	8c 81       	ldd	r24, Y+4	; 0x04
     642:	0e 94 fa 07 	call	0xff4	; 0xff4 <score_set>
     646:	03 c0       	rjmp	.+6      	; 0x64e <handle_message+0x4a>
			}
			break;
		case HIGHSCORE:
			send_highscore(m.data[0]);
     648:	8b 81       	ldd	r24, Y+3	; 0x03
     64a:	0e 94 8c 02 	call	0x518	; 0x518 <send_highscore>
		default:
			break;
	}
}
     64e:	2a 96       	adiw	r28, 0x0a	; 10
     650:	0f b6       	in	r0, 0x3f	; 63
     652:	f8 94       	cli
     654:	de bf       	out	0x3e, r29	; 62
     656:	0f be       	out	0x3f, r0	; 63
     658:	cd bf       	out	0x3d, r28	; 61
     65a:	df 91       	pop	r29
     65c:	cf 91       	pop	r28
     65e:	08 95       	ret

00000660 <__vector_2>:
	
	//Enable global interrupts
	sei();
}

ISR(INT1_vect){
     660:	1f 92       	push	r1
     662:	0f 92       	push	r0
     664:	0f b6       	in	r0, 0x3f	; 63
     666:	0f 92       	push	r0
     668:	11 24       	eor	r1, r1
     66a:	2f 93       	push	r18
     66c:	3f 93       	push	r19
     66e:	4f 93       	push	r20
     670:	5f 93       	push	r21
     672:	6f 93       	push	r22
     674:	7f 93       	push	r23
     676:	8f 93       	push	r24
     678:	9f 93       	push	r25
     67a:	af 93       	push	r26
     67c:	bf 93       	push	r27
     67e:	ef 93       	push	r30
     680:	ff 93       	push	r31
	handle_message();
     682:	0e 94 02 03 	call	0x604	; 0x604 <handle_message>
}
     686:	ff 91       	pop	r31
     688:	ef 91       	pop	r30
     68a:	bf 91       	pop	r27
     68c:	af 91       	pop	r26
     68e:	9f 91       	pop	r25
     690:	8f 91       	pop	r24
     692:	7f 91       	pop	r23
     694:	6f 91       	pop	r22
     696:	5f 91       	pop	r21
     698:	4f 91       	pop	r20
     69a:	3f 91       	pop	r19
     69c:	2f 91       	pop	r18
     69e:	0f 90       	pop	r0
     6a0:	0f be       	out	0x3f, r0	; 63
     6a2:	0f 90       	pop	r0
     6a4:	1f 90       	pop	r1
     6a6:	18 95       	reti

000006a8 <music_init>:
     6a8:	32 9a       	sbi	0x06, 2	; 6
     6aa:	08 95       	ret

000006ac <delay_us>:
     6ac:	00 97       	sbiw	r24, 0x00	; 0
     6ae:	31 f0       	breq	.+12     	; 0x6bc <delay_us+0x10>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6b0:	00 c0       	rjmp	.+0      	; 0x6b2 <delay_us+0x6>
     6b2:	00 c0       	rjmp	.+0      	; 0x6b4 <delay_us+0x8>
     6b4:	00 00       	nop
     6b6:	01 97       	sbiw	r24, 0x01	; 1
     6b8:	00 97       	sbiw	r24, 0x00	; 0
     6ba:	d1 f7       	brne	.-12     	; 0x6b0 <delay_us+0x4>
     6bc:	08 95       	ret

000006be <play_note>:
     6be:	8f 92       	push	r8
     6c0:	9f 92       	push	r9
     6c2:	af 92       	push	r10
     6c4:	bf 92       	push	r11
     6c6:	cf 92       	push	r12
     6c8:	df 92       	push	r13
     6ca:	ef 92       	push	r14
     6cc:	ff 92       	push	r15
     6ce:	cf 93       	push	r28
     6d0:	df 93       	push	r29
     6d2:	4b 01       	movw	r8, r22
     6d4:	5c 01       	movw	r10, r24
     6d6:	69 01       	movw	r12, r18
     6d8:	7a 01       	movw	r14, r20
     6da:	20 e0       	ldi	r18, 0x00	; 0
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	40 e0       	ldi	r20, 0x00	; 0
     6e0:	5f e3       	ldi	r21, 0x3F	; 63
     6e2:	c7 01       	movw	r24, r14
     6e4:	b6 01       	movw	r22, r12
     6e6:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__mulsf3>
     6ea:	0e 94 7d 15 	call	0x2afa	; 0x2afa <__fixsfsi>
     6ee:	eb 01       	movw	r28, r22
     6f0:	20 e0       	ldi	r18, 0x00	; 0
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	4a e7       	ldi	r20, 0x7A	; 122
     6f6:	54 e4       	ldi	r21, 0x44	; 68
     6f8:	c5 01       	movw	r24, r10
     6fa:	b4 01       	movw	r22, r8
     6fc:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__mulsf3>
     700:	a7 01       	movw	r20, r14
     702:	96 01       	movw	r18, r12
     704:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <__divsf3>
     708:	0e 94 7d 15 	call	0x2afa	; 0x2afa <__fixsfsi>
     70c:	6b 01       	movw	r12, r22
     70e:	61 15       	cp	r22, r1
     710:	71 05       	cpc	r23, r1
     712:	81 f0       	breq	.+32     	; 0x734 <play_note+0x76>
     714:	e1 2c       	mov	r14, r1
     716:	f1 2c       	mov	r15, r1
     718:	3a 9a       	sbi	0x07, 2	; 7
     71a:	ce 01       	movw	r24, r28
     71c:	0e 94 56 03 	call	0x6ac	; 0x6ac <delay_us>
     720:	3a 98       	cbi	0x07, 2	; 7
     722:	ce 01       	movw	r24, r28
     724:	0e 94 56 03 	call	0x6ac	; 0x6ac <delay_us>
     728:	8f ef       	ldi	r24, 0xFF	; 255
     72a:	e8 1a       	sub	r14, r24
     72c:	f8 0a       	sbc	r15, r24
     72e:	ec 14       	cp	r14, r12
     730:	fd 04       	cpc	r15, r13
     732:	91 f7       	brne	.-28     	; 0x718 <play_note+0x5a>
     734:	df 91       	pop	r29
     736:	cf 91       	pop	r28
     738:	ff 90       	pop	r15
     73a:	ef 90       	pop	r14
     73c:	df 90       	pop	r13
     73e:	cf 90       	pop	r12
     740:	bf 90       	pop	r11
     742:	af 90       	pop	r10
     744:	9f 90       	pop	r9
     746:	8f 90       	pop	r8
     748:	08 95       	ret

0000074a <play_song>:
     74a:	2f 92       	push	r2
     74c:	3f 92       	push	r3
     74e:	4f 92       	push	r4
     750:	5f 92       	push	r5
     752:	6f 92       	push	r6
     754:	7f 92       	push	r7
     756:	8f 92       	push	r8
     758:	9f 92       	push	r9
     75a:	af 92       	push	r10
     75c:	bf 92       	push	r11
     75e:	cf 92       	push	r12
     760:	df 92       	push	r13
     762:	ef 92       	push	r14
     764:	ff 92       	push	r15
     766:	0f 93       	push	r16
     768:	1f 93       	push	r17
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	00 d0       	rcall	.+0      	; 0x770 <play_song+0x26>
     770:	00 d0       	rcall	.+0      	; 0x772 <play_song+0x28>
     772:	cd b7       	in	r28, 0x3d	; 61
     774:	de b7       	in	r29, 0x3e	; 62
     776:	08 2f       	mov	r16, r24
     778:	19 2f       	mov	r17, r25
     77a:	f6 2e       	mov	r15, r22
     77c:	d7 2e       	mov	r13, r23
     77e:	e4 2e       	mov	r14, r20
     780:	19 01       	movw	r2, r18
     782:	0e 94 54 03 	call	0x6a8	; 0x6a8 <music_init>
     786:	ee 20       	and	r14, r14
     788:	09 f4       	brne	.+2      	; 0x78c <play_song+0x42>
     78a:	48 c0       	rjmp	.+144    	; 0x81c <play_song+0xd2>
     78c:	a0 2e       	mov	r10, r16
     78e:	b1 2e       	mov	r11, r17
     790:	0f 2d       	mov	r16, r15
     792:	1d 2d       	mov	r17, r13
     794:	4e 2d       	mov	r20, r14
     796:	50 e0       	ldi	r21, 0x00	; 0
     798:	9a 01       	movw	r18, r20
     79a:	22 0f       	add	r18, r18
     79c:	33 1f       	adc	r19, r19
     79e:	3a 83       	std	Y+2, r19	; 0x02
     7a0:	29 83       	std	Y+1, r18	; 0x01
     7a2:	1c 82       	std	Y+4, r1	; 0x04
     7a4:	1b 82       	std	Y+3, r1	; 0x03
     7a6:	0f 2e       	mov	r0, r31
     7a8:	f0 e4       	ldi	r31, 0x40	; 64
     7aa:	4f 2e       	mov	r4, r31
     7ac:	f2 e4       	ldi	r31, 0x42	; 66
     7ae:	5f 2e       	mov	r5, r31
     7b0:	ff e0       	ldi	r31, 0x0F	; 15
     7b2:	6f 2e       	mov	r6, r31
     7b4:	71 2c       	mov	r7, r1
     7b6:	f0 2d       	mov	r31, r0
     7b8:	f5 01       	movw	r30, r10
     7ba:	21 91       	ld	r18, Z+
     7bc:	31 91       	ld	r19, Z+
     7be:	5f 01       	movw	r10, r30
     7c0:	f8 01       	movw	r30, r16
     7c2:	81 90       	ld	r8, Z+
     7c4:	91 90       	ld	r9, Z+
     7c6:	8f 01       	movw	r16, r30
     7c8:	40 e0       	ldi	r20, 0x00	; 0
     7ca:	50 e0       	ldi	r21, 0x00	; 0
     7cc:	c3 01       	movw	r24, r6
     7ce:	b2 01       	movw	r22, r4
     7d0:	0e 94 db 16 	call	0x2db6	; 0x2db6 <__divmodsi4>
     7d4:	ca 01       	movw	r24, r20
     7d6:	b9 01       	movw	r22, r18
     7d8:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
     7dc:	6b 01       	movw	r12, r22
     7de:	7c 01       	movw	r14, r24
     7e0:	82 9c       	mul	r8, r2
     7e2:	b0 01       	movw	r22, r0
     7e4:	83 9c       	mul	r8, r3
     7e6:	70 0d       	add	r23, r0
     7e8:	92 9c       	mul	r9, r2
     7ea:	70 0d       	add	r23, r0
     7ec:	11 24       	eor	r1, r1
     7ee:	80 e0       	ldi	r24, 0x00	; 0
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <__floatunsisf>
     7f6:	a7 01       	movw	r20, r14
     7f8:	96 01       	movw	r18, r12
     7fa:	0e 94 5f 03 	call	0x6be	; 0x6be <play_note>
     7fe:	86 e6       	ldi	r24, 0x66	; 102
     800:	92 e0       	ldi	r25, 0x02	; 2
     802:	01 97       	sbiw	r24, 0x01	; 1
     804:	f1 f7       	brne	.-4      	; 0x802 <play_song+0xb8>
     806:	00 00       	nop
     808:	eb 81       	ldd	r30, Y+3	; 0x03
     80a:	fc 81       	ldd	r31, Y+4	; 0x04
     80c:	32 96       	adiw	r30, 0x02	; 2
     80e:	fc 83       	std	Y+4, r31	; 0x04
     810:	eb 83       	std	Y+3, r30	; 0x03
     812:	29 81       	ldd	r18, Y+1	; 0x01
     814:	3a 81       	ldd	r19, Y+2	; 0x02
     816:	e2 17       	cp	r30, r18
     818:	f3 07       	cpc	r31, r19
     81a:	71 f6       	brne	.-100    	; 0x7b8 <play_song+0x6e>
     81c:	0f 90       	pop	r0
     81e:	0f 90       	pop	r0
     820:	0f 90       	pop	r0
     822:	0f 90       	pop	r0
     824:	df 91       	pop	r29
     826:	cf 91       	pop	r28
     828:	1f 91       	pop	r17
     82a:	0f 91       	pop	r16
     82c:	ff 90       	pop	r15
     82e:	ef 90       	pop	r14
     830:	df 90       	pop	r13
     832:	cf 90       	pop	r12
     834:	bf 90       	pop	r11
     836:	af 90       	pop	r10
     838:	9f 90       	pop	r9
     83a:	8f 90       	pop	r8
     83c:	7f 90       	pop	r7
     83e:	6f 90       	pop	r6
     840:	5f 90       	pop	r5
     842:	4f 90       	pop	r4
     844:	3f 90       	pop	r3
     846:	2f 90       	pop	r2
     848:	08 95       	ret

0000084a <play_lisa>:
     84a:	cf 93       	push	r28
     84c:	df 93       	push	r29
     84e:	cd b7       	in	r28, 0x3d	; 61
     850:	de b7       	in	r29, 0x3e	; 62
     852:	c8 55       	subi	r28, 0x58	; 88
     854:	d1 09       	sbc	r29, r1
     856:	0f b6       	in	r0, 0x3f	; 63
     858:	f8 94       	cli
     85a:	de bf       	out	0x3e, r29	; 62
     85c:	0f be       	out	0x3f, r0	; 63
     85e:	cd bf       	out	0x3d, r28	; 61
     860:	8c e2       	ldi	r24, 0x2C	; 44
     862:	e2 e1       	ldi	r30, 0x12	; 18
     864:	f1 e0       	ldi	r31, 0x01	; 1
     866:	de 01       	movw	r26, r28
     868:	11 96       	adiw	r26, 0x01	; 1
     86a:	01 90       	ld	r0, Z+
     86c:	0d 92       	st	X+, r0
     86e:	8a 95       	dec	r24
     870:	e1 f7       	brne	.-8      	; 0x86a <play_lisa+0x20>
     872:	8c e2       	ldi	r24, 0x2C	; 44
     874:	ee e3       	ldi	r30, 0x3E	; 62
     876:	f1 e0       	ldi	r31, 0x01	; 1
     878:	de 01       	movw	r26, r28
     87a:	9d 96       	adiw	r26, 0x2d	; 45
     87c:	01 90       	ld	r0, Z+
     87e:	0d 92       	st	X+, r0
     880:	8a 95       	dec	r24
     882:	e1 f7       	brne	.-8      	; 0x87c <play_lisa+0x32>
     884:	21 e0       	ldi	r18, 0x01	; 1
     886:	30 e0       	ldi	r19, 0x00	; 0
     888:	46 e1       	ldi	r20, 0x16	; 22
     88a:	be 01       	movw	r22, r28
     88c:	63 5d       	subi	r22, 0xD3	; 211
     88e:	7f 4f       	sbci	r23, 0xFF	; 255
     890:	ce 01       	movw	r24, r28
     892:	01 96       	adiw	r24, 0x01	; 1
     894:	0e 94 a5 03 	call	0x74a	; 0x74a <play_song>
     898:	c8 5a       	subi	r28, 0xA8	; 168
     89a:	df 4f       	sbci	r29, 0xFF	; 255
     89c:	0f b6       	in	r0, 0x3f	; 63
     89e:	f8 94       	cli
     8a0:	de bf       	out	0x3e, r29	; 62
     8a2:	0f be       	out	0x3f, r0	; 63
     8a4:	cd bf       	out	0x3d, r28	; 61
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	08 95       	ret

000008ac <play_mario>:
     8ac:	20 e1       	ldi	r18, 0x10	; 16
     8ae:	37 e2       	ldi	r19, 0x27	; 39
     8b0:	4e e4       	ldi	r20, 0x4E	; 78
     8b2:	60 e7       	ldi	r22, 0x70	; 112
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	8c e0       	ldi	r24, 0x0C	; 12
     8b8:	91 e0       	ldi	r25, 0x01	; 1
     8ba:	0e 94 a5 03 	call	0x74a	; 0x74a <play_song>
     8be:	08 95       	ret

000008c0 <SPI_init>:
     8c0:	80 eb       	ldi	r24, 0xB0	; 176
     8c2:	87 bb       	out	0x17, r24	; 23
     8c4:	81 e5       	ldi	r24, 0x51	; 81
     8c6:	8d b9       	out	0x0d, r24	; 13
     8c8:	08 95       	ret

000008ca <SPI_transmit>:
     8ca:	8f b9       	out	0x0f, r24	; 15
     8cc:	77 9b       	sbis	0x0e, 7	; 14
     8ce:	fe cf       	rjmp	.-4      	; 0x8cc <SPI_transmit+0x2>
     8d0:	8f b1       	in	r24, 0x0f	; 15
     8d2:	08 95       	ret

000008d4 <SPI_send>:
     8d4:	0e 94 65 04 	call	0x8ca	; 0x8ca <SPI_transmit>
     8d8:	08 95       	ret

000008da <SPI_receive>:
     8da:	8c ec       	ldi	r24, 0xCC	; 204
     8dc:	0e 94 65 04 	call	0x8ca	; 0x8ca <SPI_transmit>
     8e0:	08 95       	ret

000008e2 <SPI_ss_high>:
     8e2:	c4 9a       	sbi	0x18, 4	; 24
     8e4:	08 95       	ret

000008e6 <SPI_ss_low>:
     8e6:	c4 98       	cbi	0x18, 4	; 24
     8e8:	08 95       	ret

000008ea <highscore_save>:
     8ea:	6f 92       	push	r6
     8ec:	7f 92       	push	r7
     8ee:	8f 92       	push	r8
     8f0:	9f 92       	push	r9
     8f2:	af 92       	push	r10
     8f4:	bf 92       	push	r11
     8f6:	cf 92       	push	r12
     8f8:	df 92       	push	r13
     8fa:	ef 92       	push	r14
     8fc:	ff 92       	push	r15
     8fe:	0f 93       	push	r16
     900:	1f 93       	push	r17
     902:	cf 93       	push	r28
     904:	df 93       	push	r29
     906:	8b 01       	movw	r16, r22
     908:	fb 01       	movw	r30, r22
     90a:	84 80       	ldd	r8, Z+4	; 0x04
     90c:	9f ef       	ldi	r25, 0xFF	; 255
     90e:	98 0d       	add	r25, r8
     910:	90 31       	cpi	r25, 0x10	; 16
     912:	28 f5       	brcc	.+74     	; 0x95e <highscore_save+0x74>
     914:	91 2c       	mov	r9, r1
     916:	f1 e0       	ldi	r31, 0x01	; 1
     918:	8f 1a       	sub	r8, r31
     91a:	91 08       	sbc	r9, r1
     91c:	88 0c       	add	r8, r8
     91e:	99 1c       	adc	r9, r9
     920:	88 0c       	add	r8, r8
     922:	99 1c       	adc	r9, r9
     924:	eb 01       	movw	r28, r22
     926:	61 2c       	mov	r6, r1
     928:	71 2c       	mov	r7, r1
     92a:	e8 2e       	mov	r14, r24
     92c:	f1 2c       	mov	r15, r1
     92e:	54 01       	movw	r10, r8
     930:	ae 0c       	add	r10, r14
     932:	bf 1c       	adc	r11, r15
     934:	69 91       	ld	r22, Y+
     936:	c5 01       	movw	r24, r10
     938:	86 0d       	add	r24, r6
     93a:	97 1d       	adc	r25, r7
     93c:	0e 94 76 02 	call	0x4ec	; 0x4ec <EEPROM_write>
     940:	8f ef       	ldi	r24, 0xFF	; 255
     942:	68 1a       	sub	r6, r24
     944:	78 0a       	sbc	r7, r24
     946:	93 e0       	ldi	r25, 0x03	; 3
     948:	69 16       	cp	r6, r25
     94a:	71 04       	cpc	r7, r1
     94c:	99 f7       	brne	.-26     	; 0x934 <highscore_save+0x4a>
     94e:	c4 01       	movw	r24, r8
     950:	8e 0d       	add	r24, r14
     952:	9f 1d       	adc	r25, r15
     954:	f8 01       	movw	r30, r16
     956:	63 81       	ldd	r22, Z+3	; 0x03
     958:	03 96       	adiw	r24, 0x03	; 3
     95a:	0e 94 76 02 	call	0x4ec	; 0x4ec <EEPROM_write>
     95e:	df 91       	pop	r29
     960:	cf 91       	pop	r28
     962:	1f 91       	pop	r17
     964:	0f 91       	pop	r16
     966:	ff 90       	pop	r15
     968:	ef 90       	pop	r14
     96a:	df 90       	pop	r13
     96c:	cf 90       	pop	r12
     96e:	bf 90       	pop	r11
     970:	af 90       	pop	r10
     972:	9f 90       	pop	r9
     974:	8f 90       	pop	r8
     976:	7f 90       	pop	r7
     978:	6f 90       	pop	r6
     97a:	08 95       	ret

0000097c <highscore_get>:
     97c:	5f 92       	push	r5
     97e:	6f 92       	push	r6
     980:	7f 92       	push	r7
     982:	8f 92       	push	r8
     984:	9f 92       	push	r9
     986:	af 92       	push	r10
     988:	bf 92       	push	r11
     98a:	cf 92       	push	r12
     98c:	df 92       	push	r13
     98e:	ef 92       	push	r14
     990:	ff 92       	push	r15
     992:	0f 93       	push	r16
     994:	1f 93       	push	r17
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	cd b7       	in	r28, 0x3d	; 61
     99c:	de b7       	in	r29, 0x3e	; 62
     99e:	2a 97       	sbiw	r28, 0x0a	; 10
     9a0:	0f b6       	in	r0, 0x3f	; 63
     9a2:	f8 94       	cli
     9a4:	de bf       	out	0x3e, r29	; 62
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	cd bf       	out	0x3d, r28	; 61
     9aa:	56 2e       	mov	r5, r22
     9ac:	9f ef       	ldi	r25, 0xFF	; 255
     9ae:	96 0f       	add	r25, r22
     9b0:	90 31       	cpi	r25, 0x10	; 16
     9b2:	08 f0       	brcs	.+2      	; 0x9b6 <highscore_get+0x3a>
     9b4:	51 2c       	mov	r5, r1
     9b6:	65 2c       	mov	r6, r5
     9b8:	71 2c       	mov	r7, r1
     9ba:	91 e0       	ldi	r25, 0x01	; 1
     9bc:	69 1a       	sub	r6, r25
     9be:	71 08       	sbc	r7, r1
     9c0:	66 0c       	add	r6, r6
     9c2:	77 1c       	adc	r7, r7
     9c4:	66 0c       	add	r6, r6
     9c6:	77 1c       	adc	r7, r7
     9c8:	8e 01       	movw	r16, r28
     9ca:	0a 5f       	subi	r16, 0xFA	; 250
     9cc:	1f 4f       	sbci	r17, 0xFF	; 255
     9ce:	4e 01       	movw	r8, r28
     9d0:	e9 e0       	ldi	r30, 0x09	; 9
     9d2:	8e 0e       	add	r8, r30
     9d4:	91 1c       	adc	r9, r1
     9d6:	e8 2e       	mov	r14, r24
     9d8:	f1 2c       	mov	r15, r1
     9da:	57 01       	movw	r10, r14
     9dc:	a0 1a       	sub	r10, r16
     9de:	b1 0a       	sbc	r11, r17
     9e0:	a6 0c       	add	r10, r6
     9e2:	b7 1c       	adc	r11, r7
     9e4:	c5 01       	movw	r24, r10
     9e6:	80 0f       	add	r24, r16
     9e8:	91 1f       	adc	r25, r17
     9ea:	0e 94 6f 02 	call	0x4de	; 0x4de <EEPROM_read>
     9ee:	f8 01       	movw	r30, r16
     9f0:	81 93       	st	Z+, r24
     9f2:	8f 01       	movw	r16, r30
     9f4:	e8 15       	cp	r30, r8
     9f6:	f9 05       	cpc	r31, r9
     9f8:	a9 f7       	brne	.-22     	; 0x9e4 <highscore_get+0x68>
     9fa:	c3 01       	movw	r24, r6
     9fc:	8e 0d       	add	r24, r14
     9fe:	9f 1d       	adc	r25, r15
     a00:	03 96       	adiw	r24, 0x03	; 3
     a02:	0e 94 6f 02 	call	0x4de	; 0x4de <EEPROM_read>
     a06:	89 87       	std	Y+9, r24	; 0x09
     a08:	5a 86       	std	Y+10, r5	; 0x0a
     a0a:	85 e0       	ldi	r24, 0x05	; 5
     a0c:	fe 01       	movw	r30, r28
     a0e:	36 96       	adiw	r30, 0x06	; 6
     a10:	de 01       	movw	r26, r28
     a12:	11 96       	adiw	r26, 0x01	; 1
     a14:	01 90       	ld	r0, Z+
     a16:	0d 92       	st	X+, r0
     a18:	8a 95       	dec	r24
     a1a:	e1 f7       	brne	.-8      	; 0xa14 <highscore_get+0x98>
     a1c:	29 81       	ldd	r18, Y+1	; 0x01
     a1e:	3a 81       	ldd	r19, Y+2	; 0x02
     a20:	4b 81       	ldd	r20, Y+3	; 0x03
     a22:	5c 81       	ldd	r21, Y+4	; 0x04
     a24:	6d 81       	ldd	r22, Y+5	; 0x05
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	80 e0       	ldi	r24, 0x00	; 0
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	2a 96       	adiw	r28, 0x0a	; 10
     a2e:	0f b6       	in	r0, 0x3f	; 63
     a30:	f8 94       	cli
     a32:	de bf       	out	0x3e, r29	; 62
     a34:	0f be       	out	0x3f, r0	; 63
     a36:	cd bf       	out	0x3d, r28	; 61
     a38:	df 91       	pop	r29
     a3a:	cf 91       	pop	r28
     a3c:	1f 91       	pop	r17
     a3e:	0f 91       	pop	r16
     a40:	ff 90       	pop	r15
     a42:	ef 90       	pop	r14
     a44:	df 90       	pop	r13
     a46:	cf 90       	pop	r12
     a48:	bf 90       	pop	r11
     a4a:	af 90       	pop	r10
     a4c:	9f 90       	pop	r9
     a4e:	8f 90       	pop	r8
     a50:	7f 90       	pop	r7
     a52:	6f 90       	pop	r6
     a54:	5f 90       	pop	r5
     a56:	08 95       	ret

00000a58 <highscore_leaderboard>:
     a58:	df 92       	push	r13
     a5a:	ef 92       	push	r14
     a5c:	ff 92       	push	r15
     a5e:	0f 93       	push	r16
     a60:	1f 93       	push	r17
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	d8 2e       	mov	r13, r24
     a68:	14 16       	cp	r1, r20
     a6a:	15 06       	cpc	r1, r21
     a6c:	bc f4       	brge	.+46     	; 0xa9c <highscore_leaderboard+0x44>
     a6e:	c6 2f       	mov	r28, r22
     a70:	d7 2f       	mov	r29, r23
     a72:	7a 01       	movw	r14, r20
     a74:	8f ef       	ldi	r24, 0xFF	; 255
     a76:	e8 1a       	sub	r14, r24
     a78:	f8 0a       	sbc	r15, r24
     a7a:	01 e0       	ldi	r16, 0x01	; 1
     a7c:	10 e0       	ldi	r17, 0x00	; 0
     a7e:	60 2f       	mov	r22, r16
     a80:	8d 2d       	mov	r24, r13
     a82:	0e 94 be 04 	call	0x97c	; 0x97c <highscore_get>
     a86:	28 83       	st	Y, r18
     a88:	39 83       	std	Y+1, r19	; 0x01
     a8a:	4a 83       	std	Y+2, r20	; 0x02
     a8c:	5b 83       	std	Y+3, r21	; 0x03
     a8e:	6c 83       	std	Y+4, r22	; 0x04
     a90:	0f 5f       	subi	r16, 0xFF	; 255
     a92:	1f 4f       	sbci	r17, 0xFF	; 255
     a94:	25 96       	adiw	r28, 0x05	; 5
     a96:	0e 15       	cp	r16, r14
     a98:	1f 05       	cpc	r17, r15
     a9a:	89 f7       	brne	.-30     	; 0xa7e <highscore_leaderboard+0x26>
     a9c:	df 91       	pop	r29
     a9e:	cf 91       	pop	r28
     aa0:	1f 91       	pop	r17
     aa2:	0f 91       	pop	r16
     aa4:	ff 90       	pop	r15
     aa6:	ef 90       	pop	r14
     aa8:	df 90       	pop	r13
     aaa:	08 95       	ret

00000aac <highscore_add>:
     aac:	af 92       	push	r10
     aae:	bf 92       	push	r11
     ab0:	df 92       	push	r13
     ab2:	ef 92       	push	r14
     ab4:	ff 92       	push	r15
     ab6:	0f 93       	push	r16
     ab8:	1f 93       	push	r17
     aba:	cf 93       	push	r28
     abc:	df 93       	push	r29
     abe:	cd b7       	in	r28, 0x3d	; 61
     ac0:	de b7       	in	r29, 0x3e	; 62
     ac2:	c0 55       	subi	r28, 0x50	; 80
     ac4:	d1 09       	sbc	r29, r1
     ac6:	0f b6       	in	r0, 0x3f	; 63
     ac8:	f8 94       	cli
     aca:	de bf       	out	0x3e, r29	; 62
     acc:	0f be       	out	0x3f, r0	; 63
     ace:	cd bf       	out	0x3d, r28	; 61
     ad0:	d8 2e       	mov	r13, r24
     ad2:	7b 01       	movw	r14, r22
     ad4:	40 e1       	ldi	r20, 0x10	; 16
     ad6:	50 e0       	ldi	r21, 0x00	; 0
     ad8:	be 01       	movw	r22, r28
     ada:	6f 5f       	subi	r22, 0xFF	; 255
     adc:	7f 4f       	sbci	r23, 0xFF	; 255
     ade:	0e 94 2c 05 	call	0xa58	; 0xa58 <highscore_leaderboard>
     ae2:	f7 01       	movw	r30, r14
     ae4:	14 82       	std	Z+4, r1	; 0x04
     ae6:	93 81       	ldd	r25, Z+3	; 0x03
     ae8:	fe 01       	movw	r30, r28
     aea:	34 96       	adiw	r30, 0x04	; 4
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	80 81       	ld	r24, Z
     af2:	89 17       	cp	r24, r25
     af4:	80 f4       	brcc	.+32     	; 0xb16 <highscore_add+0x6a>
     af6:	f9 01       	movw	r30, r18
     af8:	ee 0f       	add	r30, r30
     afa:	ff 1f       	adc	r31, r31
     afc:	ee 0f       	add	r30, r30
     afe:	ff 1f       	adc	r31, r31
     b00:	2e 0f       	add	r18, r30
     b02:	3f 1f       	adc	r19, r31
     b04:	fe 01       	movw	r30, r28
     b06:	e2 0f       	add	r30, r18
     b08:	f3 1f       	adc	r31, r19
     b0a:	85 81       	ldd	r24, Z+5	; 0x05
     b0c:	f7 01       	movw	r30, r14
     b0e:	84 83       	std	Z+4, r24	; 0x04
     b10:	88 23       	and	r24, r24
     b12:	a1 f1       	breq	.+104    	; 0xb7c <highscore_add+0xd0>
     b14:	07 c0       	rjmp	.+14     	; 0xb24 <highscore_add+0x78>
     b16:	2f 5f       	subi	r18, 0xFF	; 255
     b18:	3f 4f       	sbci	r19, 0xFF	; 255
     b1a:	35 96       	adiw	r30, 0x05	; 5
     b1c:	20 31       	cpi	r18, 0x10	; 16
     b1e:	31 05       	cpc	r19, r1
     b20:	39 f7       	brne	.-50     	; 0xaf0 <highscore_add+0x44>
     b22:	2e c0       	rjmp	.+92     	; 0xb80 <highscore_add+0xd4>
     b24:	b7 01       	movw	r22, r14
     b26:	8d 2d       	mov	r24, r13
     b28:	0e 94 75 04 	call	0x8ea	; 0x8ea <highscore_save>
     b2c:	f7 01       	movw	r30, r14
     b2e:	84 81       	ldd	r24, Z+4	; 0x04
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	01 97       	sbiw	r24, 0x01	; 1
     b34:	80 31       	cpi	r24, 0x10	; 16
     b36:	91 05       	cpc	r25, r1
     b38:	f4 f4       	brge	.+60     	; 0xb76 <highscore_add+0xca>
     b3a:	8c 01       	movw	r16, r24
     b3c:	00 0f       	add	r16, r16
     b3e:	11 1f       	adc	r17, r17
     b40:	00 0f       	add	r16, r16
     b42:	11 1f       	adc	r17, r17
     b44:	08 0f       	add	r16, r24
     b46:	19 1f       	adc	r17, r25
     b48:	0c 0f       	add	r16, r28
     b4a:	1d 1f       	adc	r17, r29
     b4c:	0b 5f       	subi	r16, 0xFB	; 251
     b4e:	1f 4f       	sbci	r17, 0xFF	; 255
     b50:	5e 01       	movw	r10, r28
     b52:	f5 e5       	ldi	r31, 0x55	; 85
     b54:	af 0e       	add	r10, r31
     b56:	b1 1c       	adc	r11, r1
     b58:	f8 01       	movw	r30, r16
     b5a:	80 81       	ld	r24, Z
     b5c:	8f 5f       	subi	r24, 0xFF	; 255
     b5e:	80 83       	st	Z, r24
     b60:	b8 01       	movw	r22, r16
     b62:	64 50       	subi	r22, 0x04	; 4
     b64:	71 09       	sbc	r23, r1
     b66:	8d 2d       	mov	r24, r13
     b68:	0e 94 75 04 	call	0x8ea	; 0x8ea <highscore_save>
     b6c:	0b 5f       	subi	r16, 0xFB	; 251
     b6e:	1f 4f       	sbci	r17, 0xFF	; 255
     b70:	0a 15       	cp	r16, r10
     b72:	1b 05       	cpc	r17, r11
     b74:	89 f7       	brne	.-30     	; 0xb58 <highscore_add+0xac>
     b76:	f7 01       	movw	r30, r14
     b78:	84 81       	ldd	r24, Z+4	; 0x04
     b7a:	03 c0       	rjmp	.+6      	; 0xb82 <highscore_add+0xd6>
     b7c:	80 e0       	ldi	r24, 0x00	; 0
     b7e:	01 c0       	rjmp	.+2      	; 0xb82 <highscore_add+0xd6>
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	c0 5b       	subi	r28, 0xB0	; 176
     b84:	df 4f       	sbci	r29, 0xFF	; 255
     b86:	0f b6       	in	r0, 0x3f	; 63
     b88:	f8 94       	cli
     b8a:	de bf       	out	0x3e, r29	; 62
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	cd bf       	out	0x3d, r28	; 61
     b90:	df 91       	pop	r29
     b92:	cf 91       	pop	r28
     b94:	1f 91       	pop	r17
     b96:	0f 91       	pop	r16
     b98:	ff 90       	pop	r15
     b9a:	ef 90       	pop	r14
     b9c:	df 90       	pop	r13
     b9e:	bf 90       	pop	r11
     ba0:	af 90       	pop	r10
     ba2:	08 95       	ret

00000ba4 <highscore_clear>:
     ba4:	0f 93       	push	r16
     ba6:	1f 93       	push	r17
     ba8:	cf 93       	push	r28
     baa:	df 93       	push	r29
     bac:	00 d0       	rcall	.+0      	; 0xbae <highscore_clear+0xa>
     bae:	00 d0       	rcall	.+0      	; 0xbb0 <highscore_clear+0xc>
     bb0:	1f 92       	push	r1
     bb2:	cd b7       	in	r28, 0x3d	; 61
     bb4:	de b7       	in	r29, 0x3e	; 62
     bb6:	08 2f       	mov	r16, r24
     bb8:	8e e4       	ldi	r24, 0x4E	; 78
     bba:	89 83       	std	Y+1, r24	; 0x01
     bbc:	91 e4       	ldi	r25, 0x41	; 65
     bbe:	9a 83       	std	Y+2, r25	; 0x02
     bc0:	8b 83       	std	Y+3, r24	; 0x03
     bc2:	1c 82       	std	Y+4, r1	; 0x04
     bc4:	11 e0       	ldi	r17, 0x01	; 1
     bc6:	1d 83       	std	Y+5, r17	; 0x05
     bc8:	be 01       	movw	r22, r28
     bca:	6f 5f       	subi	r22, 0xFF	; 255
     bcc:	7f 4f       	sbci	r23, 0xFF	; 255
     bce:	80 2f       	mov	r24, r16
     bd0:	0e 94 75 04 	call	0x8ea	; 0x8ea <highscore_save>
     bd4:	1f 5f       	subi	r17, 0xFF	; 255
     bd6:	11 31       	cpi	r17, 0x11	; 17
     bd8:	b1 f7       	brne	.-20     	; 0xbc6 <highscore_clear+0x22>
     bda:	0f 90       	pop	r0
     bdc:	0f 90       	pop	r0
     bde:	0f 90       	pop	r0
     be0:	0f 90       	pop	r0
     be2:	0f 90       	pop	r0
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	1f 91       	pop	r17
     bea:	0f 91       	pop	r16
     bec:	08 95       	ret

00000bee <highscore_clear_all>:
     bee:	80 e0       	ldi	r24, 0x00	; 0
     bf0:	0e 94 d2 05 	call	0xba4	; 0xba4 <highscore_clear>
     bf4:	80 e8       	ldi	r24, 0x80	; 128
     bf6:	0e 94 d2 05 	call	0xba4	; 0xba4 <highscore_clear>
     bfa:	80 e4       	ldi	r24, 0x40	; 64
     bfc:	0e 94 d2 05 	call	0xba4	; 0xba4 <highscore_clear>
     c00:	08 95       	ret

00000c02 <highscore_print>:
     c02:	af 92       	push	r10
     c04:	bf 92       	push	r11
     c06:	cf 92       	push	r12
     c08:	df 92       	push	r13
     c0a:	ef 92       	push	r14
     c0c:	ff 92       	push	r15
     c0e:	0f 93       	push	r16
     c10:	1f 93       	push	r17
     c12:	cf 93       	push	r28
     c14:	df 93       	push	r29
     c16:	cd b7       	in	r28, 0x3d	; 61
     c18:	de b7       	in	r29, 0x3e	; 62
     c1a:	c0 56       	subi	r28, 0x60	; 96
     c1c:	d1 09       	sbc	r29, r1
     c1e:	0f b6       	in	r0, 0x3f	; 63
     c20:	f8 94       	cli
     c22:	de bf       	out	0x3e, r29	; 62
     c24:	0f be       	out	0x3f, r0	; 63
     c26:	cd bf       	out	0x3d, r28	; 61
     c28:	40 e1       	ldi	r20, 0x10	; 16
     c2a:	50 e0       	ldi	r21, 0x00	; 0
     c2c:	be 01       	movw	r22, r28
     c2e:	6f 5f       	subi	r22, 0xFF	; 255
     c30:	7f 4f       	sbci	r23, 0xFF	; 255
     c32:	0e 94 2c 05 	call	0xa58	; 0xa58 <highscore_leaderboard>
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
     c3e:	8e 01       	movw	r16, r28
     c40:	0b 5f       	subi	r16, 0xFB	; 251
     c42:	1f 4f       	sbci	r17, 0xFF	; 255
     c44:	e1 2c       	mov	r14, r1
     c46:	f1 2c       	mov	r15, r1
     c48:	0f 2e       	mov	r0, r31
     c4a:	fa e6       	ldi	r31, 0x6A	; 106
     c4c:	af 2e       	mov	r10, r31
     c4e:	f1 e0       	ldi	r31, 0x01	; 1
     c50:	bf 2e       	mov	r11, r31
     c52:	f0 2d       	mov	r31, r0
     c54:	6e 01       	movw	r12, r28
     c56:	21 e5       	ldi	r18, 0x51	; 81
     c58:	c2 0e       	add	r12, r18
     c5a:	d1 1c       	adc	r13, r1
     c5c:	f8 01       	movw	r30, r16
     c5e:	31 97       	sbiw	r30, 0x01	; 1
     c60:	80 81       	ld	r24, Z
     c62:	1f 92       	push	r1
     c64:	8f 93       	push	r24
     c66:	31 97       	sbiw	r30, 0x01	; 1
     c68:	80 81       	ld	r24, Z
     c6a:	1f 92       	push	r1
     c6c:	8f 93       	push	r24
     c6e:	31 97       	sbiw	r30, 0x01	; 1
     c70:	80 81       	ld	r24, Z
     c72:	1f 92       	push	r1
     c74:	8f 93       	push	r24
     c76:	31 97       	sbiw	r30, 0x01	; 1
     c78:	80 81       	ld	r24, Z
     c7a:	1f 92       	push	r1
     c7c:	8f 93       	push	r24
     c7e:	f8 01       	movw	r30, r16
     c80:	80 81       	ld	r24, Z
     c82:	1f 92       	push	r1
     c84:	8f 93       	push	r24
     c86:	bf 92       	push	r11
     c88:	af 92       	push	r10
     c8a:	df 92       	push	r13
     c8c:	cf 92       	push	r12
     c8e:	0e 94 14 19 	call	0x3228	; 0x3228 <sprintf>
     c92:	a7 01       	movw	r20, r14
     c94:	b6 01       	movw	r22, r12
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
     c9e:	ff ef       	ldi	r31, 0xFF	; 255
     ca0:	ef 1a       	sub	r14, r31
     ca2:	ff 0a       	sbc	r15, r31
     ca4:	0b 5f       	subi	r16, 0xFB	; 251
     ca6:	1f 4f       	sbci	r17, 0xFF	; 255
     ca8:	0f b6       	in	r0, 0x3f	; 63
     caa:	f8 94       	cli
     cac:	de bf       	out	0x3e, r29	; 62
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	cd bf       	out	0x3d, r28	; 61
     cb2:	97 e0       	ldi	r25, 0x07	; 7
     cb4:	e9 16       	cp	r14, r25
     cb6:	f1 04       	cpc	r15, r1
     cb8:	89 f6       	brne	.-94     	; 0xc5c <highscore_print+0x5a>
     cba:	80 e0       	ldi	r24, 0x00	; 0
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
     cc2:	09 c0       	rjmp	.+18     	; 0xcd6 <highscore_print+0xd4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cc4:	ef ef       	ldi	r30, 0xFF	; 255
     cc6:	ff e7       	ldi	r31, 0x7F	; 127
     cc8:	21 e0       	ldi	r18, 0x01	; 1
     cca:	e1 50       	subi	r30, 0x01	; 1
     ccc:	f0 40       	sbci	r31, 0x00	; 0
     cce:	20 40       	sbci	r18, 0x00	; 0
     cd0:	e1 f7       	brne	.-8      	; 0xcca <highscore_print+0xc8>
     cd2:	00 c0       	rjmp	.+0      	; 0xcd4 <highscore_print+0xd2>
     cd4:	00 c0       	rjmp	.+0      	; 0xcd6 <highscore_print+0xd4>
     cd6:	0e 94 2b 09 	call	0x1256	; 0x1256 <get_joystick_position>
     cda:	81 11       	cpse	r24, r1
     cdc:	f3 cf       	rjmp	.-26     	; 0xcc4 <highscore_print+0xc2>
     cde:	c0 5a       	subi	r28, 0xA0	; 160
     ce0:	df 4f       	sbci	r29, 0xFF	; 255
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	df 91       	pop	r29
     cee:	cf 91       	pop	r28
     cf0:	1f 91       	pop	r17
     cf2:	0f 91       	pop	r16
     cf4:	ff 90       	pop	r15
     cf6:	ef 90       	pop	r14
     cf8:	df 90       	pop	r13
     cfa:	cf 90       	pop	r12
     cfc:	bf 90       	pop	r11
     cfe:	af 90       	pop	r10
     d00:	08 95       	ret

00000d02 <highscore_print_pingpong>:
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	0e 94 01 06 	call	0xc02	; 0xc02 <highscore_print>
     d08:	08 95       	ret

00000d0a <highscore_print_snake>:
     d0a:	80 e4       	ldi	r24, 0x40	; 64
     d0c:	0e 94 01 06 	call	0xc02	; 0xc02 <highscore_print>
     d10:	08 95       	ret

00000d12 <highscore_print_pong>:
     d12:	80 e8       	ldi	r24, 0x80	; 128
     d14:	0e 94 01 06 	call	0xc02	; 0xc02 <highscore_print>
     d18:	08 95       	ret

00000d1a <highscore_prompt>:
     d1a:	8f 92       	push	r8
     d1c:	9f 92       	push	r9
     d1e:	af 92       	push	r10
     d20:	bf 92       	push	r11
     d22:	cf 92       	push	r12
     d24:	df 92       	push	r13
     d26:	ef 92       	push	r14
     d28:	ff 92       	push	r15
     d2a:	0f 93       	push	r16
     d2c:	1f 93       	push	r17
     d2e:	cf 93       	push	r28
     d30:	df 93       	push	r29
     d32:	cd b7       	in	r28, 0x3d	; 61
     d34:	de b7       	in	r29, 0x3e	; 62
     d36:	65 97       	sbiw	r28, 0x15	; 21
     d38:	0f b6       	in	r0, 0x3f	; 63
     d3a:	f8 94       	cli
     d3c:	de bf       	out	0x3e, r29	; 62
     d3e:	0f be       	out	0x3f, r0	; 63
     d40:	cd bf       	out	0x3d, r28	; 61
     d42:	98 2e       	mov	r9, r24
     d44:	81 e4       	ldi	r24, 0x41	; 65
     d46:	89 83       	std	Y+1, r24	; 0x01
     d48:	8a 83       	std	Y+2, r24	; 0x02
     d4a:	8b 83       	std	Y+3, r24	; 0x03
     d4c:	6c 83       	std	Y+4, r22	; 0x04
     d4e:	80 e0       	ldi	r24, 0x00	; 0
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
     d56:	8c 81       	ldd	r24, Y+4	; 0x04
     d58:	1f 92       	push	r1
     d5a:	8f 93       	push	r24
     d5c:	87 e7       	ldi	r24, 0x77	; 119
     d5e:	91 e0       	ldi	r25, 0x01	; 1
     d60:	9f 93       	push	r25
     d62:	8f 93       	push	r24
     d64:	8e 01       	movw	r16, r28
     d66:	0a 5f       	subi	r16, 0xFA	; 250
     d68:	1f 4f       	sbci	r17, 0xFF	; 255
     d6a:	1f 93       	push	r17
     d6c:	0f 93       	push	r16
     d6e:	0e 94 14 19 	call	0x3228	; 0x3228 <sprintf>
     d72:	42 e0       	ldi	r20, 0x02	; 2
     d74:	50 e0       	ldi	r21, 0x00	; 0
     d76:	b8 01       	movw	r22, r16
     d78:	80 e0       	ldi	r24, 0x00	; 0
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
     d80:	0e 94 2b 09 	call	0x1256	; 0x1256 <get_joystick_position>
     d84:	88 2e       	mov	r8, r24
     d86:	0f 90       	pop	r0
     d88:	0f 90       	pop	r0
     d8a:	0f 90       	pop	r0
     d8c:	0f 90       	pop	r0
     d8e:	0f 90       	pop	r0
     d90:	0f 90       	pop	r0
     d92:	e1 2c       	mov	r14, r1
     d94:	f1 2c       	mov	r15, r1
     d96:	0f 2e       	mov	r0, r31
     d98:	f3 e0       	ldi	r31, 0x03	; 3
     d9a:	af 2e       	mov	r10, r31
     d9c:	b1 2c       	mov	r11, r1
     d9e:	f0 2d       	mov	r31, r0
     da0:	0f 2e       	mov	r0, r31
     da2:	f1 e8       	ldi	r31, 0x81	; 129
     da4:	cf 2e       	mov	r12, r31
     da6:	f1 e0       	ldi	r31, 0x01	; 1
     da8:	df 2e       	mov	r13, r31
     daa:	f0 2d       	mov	r31, r0
     dac:	2f ef       	ldi	r18, 0xFF	; 255
     dae:	8f e7       	ldi	r24, 0x7F	; 127
     db0:	91 e0       	ldi	r25, 0x01	; 1
     db2:	21 50       	subi	r18, 0x01	; 1
     db4:	80 40       	sbci	r24, 0x00	; 0
     db6:	90 40       	sbci	r25, 0x00	; 0
     db8:	e1 f7       	brne	.-8      	; 0xdb2 <highscore_prompt+0x98>
     dba:	00 c0       	rjmp	.+0      	; 0xdbc <highscore_prompt+0xa2>
     dbc:	00 c0       	rjmp	.+0      	; 0xdbe <highscore_prompt+0xa4>
     dbe:	0e 94 2b 09 	call	0x1256	; 0x1256 <get_joystick_position>
     dc2:	88 16       	cp	r8, r24
     dc4:	69 f1       	breq	.+90     	; 0xe20 <highscore_prompt+0x106>
     dc6:	0e 94 2b 09 	call	0x1256	; 0x1256 <get_joystick_position>
     dca:	88 2e       	mov	r8, r24
     dcc:	21 e0       	ldi	r18, 0x01	; 1
     dce:	82 17       	cp	r24, r18
     dd0:	81 f0       	breq	.+32     	; 0xdf2 <highscore_prompt+0xd8>
     dd2:	82 17       	cp	r24, r18
     dd4:	38 f0       	brcs	.+14     	; 0xde4 <highscore_prompt+0xca>
     dd6:	82 e0       	ldi	r24, 0x02	; 2
     dd8:	88 16       	cp	r8, r24
     dda:	79 f0       	breq	.+30     	; 0xdfa <highscore_prompt+0xe0>
     ddc:	93 e0       	ldi	r25, 0x03	; 3
     dde:	89 16       	cp	r8, r25
     de0:	b1 f0       	breq	.+44     	; 0xe0e <highscore_prompt+0xf4>
     de2:	1e c0       	rjmp	.+60     	; 0xe20 <highscore_prompt+0x106>
     de4:	c7 01       	movw	r24, r14
     de6:	02 96       	adiw	r24, 0x02	; 2
     de8:	b5 01       	movw	r22, r10
     dea:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
     dee:	7c 01       	movw	r14, r24
     df0:	17 c0       	rjmp	.+46     	; 0xe20 <highscore_prompt+0x106>
     df2:	2f ef       	ldi	r18, 0xFF	; 255
     df4:	e2 1a       	sub	r14, r18
     df6:	f2 0a       	sbc	r15, r18
     df8:	13 c0       	rjmp	.+38     	; 0xe20 <highscore_prompt+0x106>
     dfa:	e1 e0       	ldi	r30, 0x01	; 1
     dfc:	f0 e0       	ldi	r31, 0x00	; 0
     dfe:	ec 0f       	add	r30, r28
     e00:	fd 1f       	adc	r31, r29
     e02:	ee 0d       	add	r30, r14
     e04:	ff 1d       	adc	r31, r15
     e06:	80 81       	ld	r24, Z
     e08:	8f 5f       	subi	r24, 0xFF	; 255
     e0a:	80 83       	st	Z, r24
     e0c:	09 c0       	rjmp	.+18     	; 0xe20 <highscore_prompt+0x106>
     e0e:	e1 e0       	ldi	r30, 0x01	; 1
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	ec 0f       	add	r30, r28
     e14:	fd 1f       	adc	r31, r29
     e16:	ee 0d       	add	r30, r14
     e18:	ff 1d       	adc	r31, r15
     e1a:	80 81       	ld	r24, Z
     e1c:	81 50       	subi	r24, 0x01	; 1
     e1e:	80 83       	st	Z, r24
     e20:	8b 81       	ldd	r24, Y+3	; 0x03
     e22:	1f 92       	push	r1
     e24:	8f 93       	push	r24
     e26:	8a 81       	ldd	r24, Y+2	; 0x02
     e28:	1f 92       	push	r1
     e2a:	8f 93       	push	r24
     e2c:	89 81       	ldd	r24, Y+1	; 0x01
     e2e:	1f 92       	push	r1
     e30:	8f 93       	push	r24
     e32:	df 92       	push	r13
     e34:	cf 92       	push	r12
     e36:	1f 93       	push	r17
     e38:	0f 93       	push	r16
     e3a:	0e 94 14 19 	call	0x3228	; 0x3228 <sprintf>
     e3e:	a5 01       	movw	r20, r10
     e40:	b8 01       	movw	r22, r16
     e42:	80 e0       	ldi	r24, 0x00	; 0
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
     e4a:	44 e0       	ldi	r20, 0x04	; 4
     e4c:	50 e0       	ldi	r21, 0x00	; 0
     e4e:	6e e8       	ldi	r22, 0x8E	; 142
     e50:	71 e0       	ldi	r23, 0x01	; 1
     e52:	80 e0       	ldi	r24, 0x00	; 0
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
     e5a:	97 01       	movw	r18, r14
     e5c:	2a 5f       	subi	r18, 0xFA	; 250
     e5e:	3f 4f       	sbci	r19, 0xFF	; 255
     e60:	22 0f       	add	r18, r18
     e62:	33 1f       	adc	r19, r19
     e64:	22 0f       	add	r18, r18
     e66:	33 1f       	adc	r19, r19
     e68:	22 0f       	add	r18, r18
     e6a:	33 1f       	adc	r19, r19
     e6c:	44 e0       	ldi	r20, 0x04	; 4
     e6e:	50 e0       	ldi	r21, 0x00	; 0
     e70:	69 e9       	ldi	r22, 0x99	; 153
     e72:	71 e0       	ldi	r23, 0x01	; 1
     e74:	80 e0       	ldi	r24, 0x00	; 0
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
     e7c:	80 e0       	ldi	r24, 0x00	; 0
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
     e84:	0f b6       	in	r0, 0x3f	; 63
     e86:	f8 94       	cli
     e88:	de bf       	out	0x3e, r29	; 62
     e8a:	0f be       	out	0x3f, r0	; 63
     e8c:	cd bf       	out	0x3d, r28	; 61
     e8e:	93 e0       	ldi	r25, 0x03	; 3
     e90:	e9 16       	cp	r14, r25
     e92:	f1 04       	cpc	r15, r1
     e94:	0c f4       	brge	.+2      	; 0xe98 <highscore_prompt+0x17e>
     e96:	8a cf       	rjmp	.-236    	; 0xdac <highscore_prompt+0x92>
     e98:	be 01       	movw	r22, r28
     e9a:	6f 5f       	subi	r22, 0xFF	; 255
     e9c:	7f 4f       	sbci	r23, 0xFF	; 255
     e9e:	89 2d       	mov	r24, r9
     ea0:	0e 94 56 05 	call	0xaac	; 0xaac <highscore_add>
     ea4:	65 96       	adiw	r28, 0x15	; 21
     ea6:	0f b6       	in	r0, 0x3f	; 63
     ea8:	f8 94       	cli
     eaa:	de bf       	out	0x3e, r29	; 62
     eac:	0f be       	out	0x3f, r0	; 63
     eae:	cd bf       	out	0x3d, r28	; 61
     eb0:	df 91       	pop	r29
     eb2:	cf 91       	pop	r28
     eb4:	1f 91       	pop	r17
     eb6:	0f 91       	pop	r16
     eb8:	ff 90       	pop	r15
     eba:	ef 90       	pop	r14
     ebc:	df 90       	pop	r13
     ebe:	cf 90       	pop	r12
     ec0:	bf 90       	pop	r11
     ec2:	af 90       	pop	r10
     ec4:	9f 90       	pop	r9
     ec6:	8f 90       	pop	r8
     ec8:	08 95       	ret

00000eca <play_pingpong>:

volatile State current_state;
volatile uint8_t current_score;

//Send CAN message to node 2 to start ping pong game with one of two controller states
void play_pingpong(uint8_t state){
     eca:	cf 92       	push	r12
     ecc:	df 92       	push	r13
     ece:	ef 92       	push	r14
     ed0:	ff 92       	push	r15
     ed2:	0f 93       	push	r16
     ed4:	1f 93       	push	r17
     ed6:	cf 93       	push	r28
     ed8:	df 93       	push	r29
     eda:	cd b7       	in	r28, 0x3d	; 61
     edc:	de b7       	in	r29, 0x3e	; 62
     ede:	6a 97       	sbiw	r28, 0x1a	; 26
     ee0:	0f b6       	in	r0, 0x3f	; 63
     ee2:	f8 94       	cli
     ee4:	de bf       	out	0x3e, r29	; 62
     ee6:	0f be       	out	0x3f, r0	; 63
     ee8:	cd bf       	out	0x3d, r28	; 61
}


void state_set(State state){
	
	current_state = state;
     eea:	80 93 dc 02 	sts	0x02DC, r24
}

void score_set(uint8_t score){
	current_score = score;
     eee:	10 92 dd 02 	sts	0x02DD, r1
	state_set(state);
	score_set(0);
	
	//Send message to node 2
	Message m;
	m.id = GAME_STATUS;
     ef2:	92 e0       	ldi	r25, 0x02	; 2
     ef4:	99 83       	std	Y+1, r25	; 0x01
	m.length = 1;
     ef6:	91 e0       	ldi	r25, 0x01	; 1
     ef8:	9a 83       	std	Y+2, r25	; 0x02
	m.data[0] = state;
     efa:	8b 83       	std	Y+3, r24	; 0x03
	CAN_transmit(&m);
     efc:	ce 01       	movw	r24, r28
     efe:	01 96       	adiw	r24, 0x01	; 1
     f00:	0e 94 40 08 	call	0x1080	; 0x1080 <CAN_transmit>
	
	//Print message on screen, and go into waiting mode
	oled_sram_clear_screen(0);
     f04:	80 e0       	ldi	r24, 0x00	; 0
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
	oled_sram_write_string(0, "Playing pingpong", 2);
     f0c:	42 e0       	ldi	r20, 0x02	; 2
     f0e:	50 e0       	ldi	r21, 0x00	; 0
     f10:	6b e9       	ldi	r22, 0x9B	; 155
     f12:	71 e0       	ldi	r23, 0x01	; 1
     f14:	80 e0       	ldi	r24, 0x00	; 0
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
	char score[16];
	while(current_state == PLAY_PINGPONG_WEB || current_state == PLAY_PINGPONG_JOY || current_state == PLAY_PINGPONG_SELF){
		_delay_ms(100);
		printf("State %i \n\r", current_state);
     f1c:	0f 2e       	mov	r0, r31
     f1e:	fc ea       	ldi	r31, 0xAC	; 172
     f20:	cf 2e       	mov	r12, r31
     f22:	f1 e0       	ldi	r31, 0x01	; 1
     f24:	df 2e       	mov	r13, r31
     f26:	f0 2d       	mov	r31, r0
		send_controlls();
		sprintf(score, "Score: %d", current_score);
     f28:	0f 2e       	mov	r0, r31
     f2a:	f8 eb       	ldi	r31, 0xB8	; 184
     f2c:	ef 2e       	mov	r14, r31
     f2e:	f1 e0       	ldi	r31, 0x01	; 1
     f30:	ff 2e       	mov	r15, r31
     f32:	f0 2d       	mov	r31, r0
     f34:	8e 01       	movw	r16, r28
     f36:	05 5f       	subi	r16, 0xF5	; 245
     f38:	1f 4f       	sbci	r17, 0xFF	; 255
	
	//Print message on screen, and go into waiting mode
	oled_sram_clear_screen(0);
	oled_sram_write_string(0, "Playing pingpong", 2);
	char score[16];
	while(current_state == PLAY_PINGPONG_WEB || current_state == PLAY_PINGPONG_JOY || current_state == PLAY_PINGPONG_SELF){
     f3a:	2d c0       	rjmp	.+90     	; 0xf96 <play_pingpong+0xcc>
     f3c:	2f ef       	ldi	r18, 0xFF	; 255
     f3e:	8f e7       	ldi	r24, 0x7F	; 127
     f40:	91 e0       	ldi	r25, 0x01	; 1
     f42:	21 50       	subi	r18, 0x01	; 1
     f44:	80 40       	sbci	r24, 0x00	; 0
     f46:	90 40       	sbci	r25, 0x00	; 0
     f48:	e1 f7       	brne	.-8      	; 0xf42 <play_pingpong+0x78>
     f4a:	00 c0       	rjmp	.+0      	; 0xf4c <play_pingpong+0x82>
     f4c:	00 c0       	rjmp	.+0      	; 0xf4e <play_pingpong+0x84>
		_delay_ms(100);
		printf("State %i \n\r", current_state);
     f4e:	80 91 dc 02 	lds	r24, 0x02DC
     f52:	1f 92       	push	r1
     f54:	8f 93       	push	r24
     f56:	df 92       	push	r13
     f58:	cf 92       	push	r12
     f5a:	0e 94 00 19 	call	0x3200	; 0x3200 <printf>
		send_controlls();
     f5e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <send_controlls>
		sprintf(score, "Score: %d", current_score);
     f62:	80 91 dd 02 	lds	r24, 0x02DD
     f66:	1f 92       	push	r1
     f68:	8f 93       	push	r24
     f6a:	ff 92       	push	r15
     f6c:	ef 92       	push	r14
     f6e:	1f 93       	push	r17
     f70:	0f 93       	push	r16
     f72:	0e 94 14 19 	call	0x3228	; 0x3228 <sprintf>
		oled_sram_write_string(0, score, 4);
     f76:	44 e0       	ldi	r20, 0x04	; 4
     f78:	50 e0       	ldi	r21, 0x00	; 0
     f7a:	b8 01       	movw	r22, r16
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
		oled_sram_flush(0);
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
     f8c:	0f b6       	in	r0, 0x3f	; 63
     f8e:	f8 94       	cli
     f90:	de bf       	out	0x3e, r29	; 62
     f92:	0f be       	out	0x3f, r0	; 63
     f94:	cd bf       	out	0x3d, r28	; 61
	
	//Print message on screen, and go into waiting mode
	oled_sram_clear_screen(0);
	oled_sram_write_string(0, "Playing pingpong", 2);
	char score[16];
	while(current_state == PLAY_PINGPONG_WEB || current_state == PLAY_PINGPONG_JOY || current_state == PLAY_PINGPONG_SELF){
     f96:	80 91 dc 02 	lds	r24, 0x02DC
     f9a:	81 30       	cpi	r24, 0x01	; 1
     f9c:	79 f2       	breq	.-98     	; 0xf3c <play_pingpong+0x72>
     f9e:	80 91 dc 02 	lds	r24, 0x02DC
     fa2:	82 30       	cpi	r24, 0x02	; 2
     fa4:	59 f2       	breq	.-106    	; 0xf3c <play_pingpong+0x72>
     fa6:	80 91 dc 02 	lds	r24, 0x02DC
     faa:	83 30       	cpi	r24, 0x03	; 3
     fac:	39 f2       	breq	.-114    	; 0xf3c <play_pingpong+0x72>
		sprintf(score, "Score: %d", current_score);
		oled_sram_write_string(0, score, 4);
		oled_sram_flush(0);
	}
	
	highscore_prompt(PINGPONG, current_score);
     fae:	60 91 dd 02 	lds	r22, 0x02DD
     fb2:	80 e0       	ldi	r24, 0x00	; 0
     fb4:	0e 94 8d 06 	call	0xd1a	; 0xd1a <highscore_prompt>
}
     fb8:	6a 96       	adiw	r28, 0x1a	; 26
     fba:	0f b6       	in	r0, 0x3f	; 63
     fbc:	f8 94       	cli
     fbe:	de bf       	out	0x3e, r29	; 62
     fc0:	0f be       	out	0x3f, r0	; 63
     fc2:	cd bf       	out	0x3d, r28	; 61
     fc4:	df 91       	pop	r29
     fc6:	cf 91       	pop	r28
     fc8:	1f 91       	pop	r17
     fca:	0f 91       	pop	r16
     fcc:	ff 90       	pop	r15
     fce:	ef 90       	pop	r14
     fd0:	df 90       	pop	r13
     fd2:	cf 90       	pop	r12
     fd4:	08 95       	ret

00000fd6 <play_pingpong_web>:

void play_pingpong_web(){
	play_pingpong(PLAY_PINGPONG_WEB);
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	0e 94 65 07 	call	0xeca	; 0xeca <play_pingpong>
     fdc:	08 95       	ret

00000fde <play_pingpong_joy>:
}

void play_pingpong_joy(){
	play_pingpong(PLAY_PINGPONG_JOY);
     fde:	82 e0       	ldi	r24, 0x02	; 2
     fe0:	0e 94 65 07 	call	0xeca	; 0xeca <play_pingpong>
     fe4:	08 95       	ret

00000fe6 <play_pingpong_self>:
}

void play_pingpong_self(){
	play_pingpong(PLAY_PINGPONG_SELF);
     fe6:	83 e0       	ldi	r24, 0x03	; 3
     fe8:	0e 94 65 07 	call	0xeca	; 0xeca <play_pingpong>
     fec:	08 95       	ret

00000fee <state_set>:
}


void state_set(State state){
	
	current_state = state;
     fee:	80 93 dc 02 	sts	0x02DC, r24
     ff2:	08 95       	ret

00000ff4 <score_set>:
}

void score_set(uint8_t score){
	current_score = score;
     ff4:	80 93 dd 02 	sts	0x02DD, r24
     ff8:	08 95       	ret

00000ffa <bus_init>:
#define INCFILE1_H_


void bus_init(void){
	//Mask out 4 msb of addrBus
	SFIOR |= (1<<XMM2);
     ffa:	80 b7       	in	r24, 0x30	; 48
     ffc:	80 62       	ori	r24, 0x20	; 32
     ffe:	80 bf       	out	0x30, r24	; 48
	//Enable bus
	MCUCR |= (1<<SRE);
    1000:	85 b7       	in	r24, 0x35	; 53
    1002:	80 68       	ori	r24, 0x80	; 128
    1004:	85 bf       	out	0x35, r24	; 53
    1006:	08 95       	ret

00001008 <main>:
#include "Driver_files/CAN_driver.h"
#include "Driver_files/message_handler.h"

int main(void)
{
	uartInit(9600);
    1008:	80 e8       	ldi	r24, 0x80	; 128
    100a:	95 e2       	ldi	r25, 0x25	; 37
    100c:	0e 94 65 0c 	call	0x18ca	; 0x18ca <uartInit>
	bus_init();
    1010:	0e 94 fd 07 	call	0xffa	; 0xffa <bus_init>
	oled_init();
    1014:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <oled_init>
	handler_init();
    1018:	0e 94 80 02 	call	0x500	; 0x500 <handler_init>
	CAN_init();
    101c:	0e 94 27 08 	call	0x104e	; 0x104e <CAN_init>
    while(1)
    {
		menuSystem();
    1020:	0e 94 41 13 	call	0x2682	; 0x2682 <menuSystem>
    1024:	fd cf       	rjmp	.-6      	; 0x1020 <main+0x18>

00001026 <get_adc>:
    1026:	83 70       	andi	r24, 0x03	; 3
    1028:	90 78       	andi	r25, 0x80	; 128
    102a:	99 23       	and	r25, r25
    102c:	24 f4       	brge	.+8      	; 0x1036 <get_adc+0x10>
    102e:	01 97       	sbiw	r24, 0x01	; 1
    1030:	8c 6f       	ori	r24, 0xFC	; 252
    1032:	9f 6f       	ori	r25, 0xFF	; 255
    1034:	01 96       	adiw	r24, 0x01	; 1
    1036:	8c 5f       	subi	r24, 0xFC	; 252
    1038:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    103c:	85 ef       	ldi	r24, 0xF5	; 245
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	01 97       	sbiw	r24, 0x01	; 1
    1042:	f1 f7       	brne	.-4      	; 0x1040 <get_adc+0x1a>
    1044:	00 c0       	rjmp	.+0      	; 0x1046 <get_adc+0x20>
    1046:	00 00       	nop
    1048:	80 91 00 14 	lds	r24, 0x1400
    104c:	08 95       	ret

0000104e <CAN_init>:
    104e:	0e 94 6d 0a 	call	0x14da	; 0x14da <MCP_init>
    1052:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <MCP_reset>
    1056:	40 e0       	ldi	r20, 0x00	; 0
    1058:	60 ee       	ldi	r22, 0xE0	; 224
    105a:	8f e0       	ldi	r24, 0x0F	; 15
    105c:	0e 94 be 0a 	call	0x157c	; 0x157c <MCP_bit_modify>
    1060:	4f ef       	ldi	r20, 0xFF	; 255
    1062:	63 e0       	ldi	r22, 0x03	; 3
    1064:	8b e2       	ldi	r24, 0x2B	; 43
    1066:	0e 94 be 0a 	call	0x157c	; 0x157c <MCP_bit_modify>
    106a:	8e e0       	ldi	r24, 0x0E	; 14
    106c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <MCP_read>
    1070:	28 2f       	mov	r18, r24
    1072:	20 7e       	andi	r18, 0xE0	; 224
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	11 f4       	brne	.+4      	; 0x107e <CAN_init+0x30>
    107a:	80 e0       	ldi	r24, 0x00	; 0
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	08 95       	ret

00001080 <CAN_transmit>:
    1080:	1f 93       	push	r17
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	ec 01       	movw	r28, r24
    1088:	48 81       	ld	r20, Y
    108a:	42 95       	swap	r20
    108c:	44 0f       	add	r20, r20
    108e:	40 7e       	andi	r20, 0xE0	; 224
    1090:	60 ee       	ldi	r22, 0xE0	; 224
    1092:	82 e3       	ldi	r24, 0x32	; 50
    1094:	0e 94 be 0a 	call	0x157c	; 0x157c <MCP_bit_modify>
    1098:	48 81       	ld	r20, Y
    109a:	46 95       	lsr	r20
    109c:	46 95       	lsr	r20
    109e:	46 95       	lsr	r20
    10a0:	6f ef       	ldi	r22, 0xFF	; 255
    10a2:	81 e3       	ldi	r24, 0x31	; 49
    10a4:	0e 94 be 0a 	call	0x157c	; 0x157c <MCP_bit_modify>
    10a8:	69 81       	ldd	r22, Y+1	; 0x01
    10aa:	85 e3       	ldi	r24, 0x35	; 53
    10ac:	0e 94 89 0a 	call	0x1512	; 0x1512 <MCP_write>
    10b0:	69 81       	ldd	r22, Y+1	; 0x01
    10b2:	85 e3       	ldi	r24, 0x35	; 53
    10b4:	0e 94 89 0a 	call	0x1512	; 0x1512 <MCP_write>
    10b8:	89 81       	ldd	r24, Y+1	; 0x01
    10ba:	88 23       	and	r24, r24
    10bc:	69 f0       	breq	.+26     	; 0x10d8 <CAN_transmit+0x58>
    10be:	10 e0       	ldi	r17, 0x00	; 0
    10c0:	fe 01       	movw	r30, r28
    10c2:	e1 0f       	add	r30, r17
    10c4:	f1 1d       	adc	r31, r1
    10c6:	62 81       	ldd	r22, Z+2	; 0x02
    10c8:	86 e3       	ldi	r24, 0x36	; 54
    10ca:	81 0f       	add	r24, r17
    10cc:	0e 94 89 0a 	call	0x1512	; 0x1512 <MCP_write>
    10d0:	1f 5f       	subi	r17, 0xFF	; 255
    10d2:	89 81       	ldd	r24, Y+1	; 0x01
    10d4:	18 17       	cp	r17, r24
    10d6:	a0 f3       	brcs	.-24     	; 0x10c0 <CAN_transmit+0x40>
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	0e 94 9d 0a 	call	0x153a	; 0x153a <MCP_rts>
    10de:	df 91       	pop	r29
    10e0:	cf 91       	pop	r28
    10e2:	1f 91       	pop	r17
    10e4:	08 95       	ret

000010e6 <CAN_receive>:
    10e6:	1f 93       	push	r17
    10e8:	cf 93       	push	r28
    10ea:	df 93       	push	r29
    10ec:	ec 01       	movw	r28, r24
    10ee:	8c e2       	ldi	r24, 0x2C	; 44
    10f0:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <MCP_read>
    10f4:	80 ff       	sbrs	r24, 0
    10f6:	2c c0       	rjmp	.+88     	; 0x1150 <CAN_receive+0x6a>
    10f8:	85 e6       	ldi	r24, 0x65	; 101
    10fa:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <MCP_read>
    10fe:	89 83       	std	Y+1, r24	; 0x01
    1100:	82 e6       	ldi	r24, 0x62	; 98
    1102:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <MCP_read>
    1106:	18 2f       	mov	r17, r24
    1108:	12 95       	swap	r17
    110a:	16 95       	lsr	r17
    110c:	17 70       	andi	r17, 0x07	; 7
    110e:	18 83       	st	Y, r17
    1110:	81 e6       	ldi	r24, 0x61	; 97
    1112:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <MCP_read>
    1116:	88 0f       	add	r24, r24
    1118:	88 0f       	add	r24, r24
    111a:	88 0f       	add	r24, r24
    111c:	18 0f       	add	r17, r24
    111e:	18 83       	st	Y, r17
    1120:	89 81       	ldd	r24, Y+1	; 0x01
    1122:	88 23       	and	r24, r24
    1124:	69 f0       	breq	.+26     	; 0x1140 <CAN_receive+0x5a>
    1126:	10 e0       	ldi	r17, 0x00	; 0
    1128:	86 e6       	ldi	r24, 0x66	; 102
    112a:	81 0f       	add	r24, r17
    112c:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <MCP_read>
    1130:	fe 01       	movw	r30, r28
    1132:	e1 0f       	add	r30, r17
    1134:	f1 1d       	adc	r31, r1
    1136:	82 83       	std	Z+2, r24	; 0x02
    1138:	1f 5f       	subi	r17, 0xFF	; 255
    113a:	89 81       	ldd	r24, Y+1	; 0x01
    113c:	18 17       	cp	r17, r24
    113e:	a0 f3       	brcs	.-24     	; 0x1128 <CAN_receive+0x42>
    1140:	40 e0       	ldi	r20, 0x00	; 0
    1142:	61 e0       	ldi	r22, 0x01	; 1
    1144:	8c e2       	ldi	r24, 0x2C	; 44
    1146:	0e 94 be 0a 	call	0x157c	; 0x157c <MCP_bit_modify>
    114a:	80 e0       	ldi	r24, 0x00	; 0
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <CAN_receive+0x6e>
    1150:	81 e0       	ldi	r24, 0x01	; 1
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	df 91       	pop	r29
    1156:	cf 91       	pop	r28
    1158:	1f 91       	pop	r17
    115a:	08 95       	ret

0000115c <get_slider_position>:
    115c:	cf 93       	push	r28
    115e:	df 93       	push	r29
    1160:	81 e0       	ldi	r24, 0x01	; 1
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 13 08 	call	0x1026	; 0x1026 <get_adc>
    1168:	ec 01       	movw	r28, r24
    116a:	80 e0       	ldi	r24, 0x00	; 0
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	0e 94 13 08 	call	0x1026	; 0x1026 <get_adc>
    1172:	fc 01       	movw	r30, r24
    1174:	44 e6       	ldi	r20, 0x64	; 100
    1176:	4c 9f       	mul	r20, r28
    1178:	c0 01       	movw	r24, r0
    117a:	4d 9f       	mul	r20, r29
    117c:	90 0d       	add	r25, r0
    117e:	11 24       	eor	r1, r1
    1180:	2f ef       	ldi	r18, 0xFF	; 255
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	b9 01       	movw	r22, r18
    1186:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
    118a:	c6 2f       	mov	r28, r22
    118c:	4e 9f       	mul	r20, r30
    118e:	c0 01       	movw	r24, r0
    1190:	4f 9f       	mul	r20, r31
    1192:	90 0d       	add	r25, r0
    1194:	11 24       	eor	r1, r1
    1196:	b9 01       	movw	r22, r18
    1198:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
    119c:	76 2f       	mov	r23, r22
    119e:	6c 2f       	mov	r22, r28
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	df 91       	pop	r29
    11a6:	cf 91       	pop	r28
    11a8:	08 95       	ret

000011aa <get_joystick_direction>:
    11aa:	cf 92       	push	r12
    11ac:	df 92       	push	r13
    11ae:	ef 92       	push	r14
    11b0:	ff 92       	push	r15
    11b2:	0f 93       	push	r16
    11b4:	1f 93       	push	r17
    11b6:	cf 93       	push	r28
    11b8:	df 93       	push	r29
    11ba:	8c 01       	movw	r16, r24
    11bc:	eb 01       	movw	r28, r22
    11be:	bc 01       	movw	r22, r24
    11c0:	88 27       	eor	r24, r24
    11c2:	77 fd       	sbrc	r23, 7
    11c4:	80 95       	com	r24
    11c6:	98 2f       	mov	r25, r24
    11c8:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    11cc:	6b 01       	movw	r12, r22
    11ce:	7c 01       	movw	r14, r24
    11d0:	e8 94       	clt
    11d2:	f7 f8       	bld	r15, 7
    11d4:	20 e0       	ldi	r18, 0x00	; 0
    11d6:	30 e0       	ldi	r19, 0x00	; 0
    11d8:	48 e4       	ldi	r20, 0x48	; 72
    11da:	52 e4       	ldi	r21, 0x42	; 66
    11dc:	c7 01       	movw	r24, r14
    11de:	b6 01       	movw	r22, r12
    11e0:	0e 94 11 15 	call	0x2a22	; 0x2a22 <__cmpsf2>
    11e4:	88 23       	and	r24, r24
    11e6:	84 f4       	brge	.+32     	; 0x1208 <get_joystick_direction+0x5e>
    11e8:	be 01       	movw	r22, r28
    11ea:	88 27       	eor	r24, r24
    11ec:	77 fd       	sbrc	r23, 7
    11ee:	80 95       	com	r24
    11f0:	98 2f       	mov	r25, r24
    11f2:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    11f6:	9f 77       	andi	r25, 0x7F	; 127
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	48 e4       	ldi	r20, 0x48	; 72
    11fe:	52 e4       	ldi	r21, 0x42	; 66
    1200:	0e 94 11 15 	call	0x2a22	; 0x2a22 <__cmpsf2>
    1204:	88 23       	and	r24, r24
    1206:	dc f0       	brlt	.+54     	; 0x123e <get_joystick_direction+0x94>
    1208:	be 01       	movw	r22, r28
    120a:	88 27       	eor	r24, r24
    120c:	77 fd       	sbrc	r23, 7
    120e:	80 95       	com	r24
    1210:	98 2f       	mov	r25, r24
    1212:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    1216:	9b 01       	movw	r18, r22
    1218:	ac 01       	movw	r20, r24
    121a:	5f 77       	andi	r21, 0x7F	; 127
    121c:	c7 01       	movw	r24, r14
    121e:	b6 01       	movw	r22, r12
    1220:	0e 94 11 15 	call	0x2a22	; 0x2a22 <__cmpsf2>
    1224:	88 23       	and	r24, r24
    1226:	2c f4       	brge	.+10     	; 0x1232 <get_joystick_direction+0x88>
    1228:	1c 16       	cp	r1, r28
    122a:	1d 06       	cpc	r1, r29
    122c:	54 f4       	brge	.+20     	; 0x1242 <get_joystick_direction+0x98>
    122e:	82 e0       	ldi	r24, 0x02	; 2
    1230:	09 c0       	rjmp	.+18     	; 0x1244 <get_joystick_direction+0x9a>
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	10 16       	cp	r1, r16
    1236:	11 06       	cpc	r1, r17
    1238:	2c f0       	brlt	.+10     	; 0x1244 <get_joystick_direction+0x9a>
    123a:	80 e0       	ldi	r24, 0x00	; 0
    123c:	03 c0       	rjmp	.+6      	; 0x1244 <get_joystick_direction+0x9a>
    123e:	84 e0       	ldi	r24, 0x04	; 4
    1240:	01 c0       	rjmp	.+2      	; 0x1244 <get_joystick_direction+0x9a>
    1242:	83 e0       	ldi	r24, 0x03	; 3
    1244:	df 91       	pop	r29
    1246:	cf 91       	pop	r28
    1248:	1f 91       	pop	r17
    124a:	0f 91       	pop	r16
    124c:	ff 90       	pop	r15
    124e:	ef 90       	pop	r14
    1250:	df 90       	pop	r13
    1252:	cf 90       	pop	r12
    1254:	08 95       	ret

00001256 <get_joystick_position>:
    1256:	cf 92       	push	r12
    1258:	df 92       	push	r13
    125a:	ef 92       	push	r14
    125c:	ff 92       	push	r15
    125e:	cf 93       	push	r28
    1260:	82 e0       	ldi	r24, 0x02	; 2
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	0e 94 13 08 	call	0x1026	; 0x1026 <get_adc>
    1268:	c0 90 0a 01 	lds	r12, 0x010A
    126c:	d0 90 0b 01 	lds	r13, 0x010B
    1270:	e0 90 0c 01 	lds	r14, 0x010C
    1274:	f0 90 0d 01 	lds	r15, 0x010D
    1278:	bc 01       	movw	r22, r24
    127a:	88 27       	eor	r24, r24
    127c:	77 fd       	sbrc	r23, 7
    127e:	80 95       	com	r24
    1280:	98 2f       	mov	r25, r24
    1282:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    1286:	a7 01       	movw	r20, r14
    1288:	96 01       	movw	r18, r12
    128a:	0e 94 ac 14 	call	0x2958	; 0x2958 <__subsf3>
    128e:	20 e0       	ldi	r18, 0x00	; 0
    1290:	30 e0       	ldi	r19, 0x00	; 0
    1292:	48 ec       	ldi	r20, 0xC8	; 200
    1294:	52 e4       	ldi	r21, 0x42	; 66
    1296:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__mulsf3>
    129a:	a7 01       	movw	r20, r14
    129c:	96 01       	movw	r18, r12
    129e:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <__divsf3>
    12a2:	0e 94 7d 15 	call	0x2afa	; 0x2afa <__fixsfsi>
    12a6:	c6 2f       	mov	r28, r22
    12a8:	83 e0       	ldi	r24, 0x03	; 3
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	0e 94 13 08 	call	0x1026	; 0x1026 <get_adc>
    12b0:	c0 90 0e 01 	lds	r12, 0x010E
    12b4:	d0 90 0f 01 	lds	r13, 0x010F
    12b8:	e0 90 10 01 	lds	r14, 0x0110
    12bc:	f0 90 11 01 	lds	r15, 0x0111
    12c0:	bc 01       	movw	r22, r24
    12c2:	88 27       	eor	r24, r24
    12c4:	77 fd       	sbrc	r23, 7
    12c6:	80 95       	com	r24
    12c8:	98 2f       	mov	r25, r24
    12ca:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    12ce:	a7 01       	movw	r20, r14
    12d0:	96 01       	movw	r18, r12
    12d2:	0e 94 ac 14 	call	0x2958	; 0x2958 <__subsf3>
    12d6:	20 e0       	ldi	r18, 0x00	; 0
    12d8:	30 e0       	ldi	r19, 0x00	; 0
    12da:	48 ec       	ldi	r20, 0xC8	; 200
    12dc:	52 e4       	ldi	r21, 0x42	; 66
    12de:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__mulsf3>
    12e2:	a7 01       	movw	r20, r14
    12e4:	96 01       	movw	r18, r12
    12e6:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <__divsf3>
    12ea:	0e 94 7d 15 	call	0x2afa	; 0x2afa <__fixsfsi>
    12ee:	f6 2e       	mov	r15, r22
    12f0:	6c 2f       	mov	r22, r28
    12f2:	77 27       	eor	r23, r23
    12f4:	67 fd       	sbrc	r22, 7
    12f6:	70 95       	com	r23
    12f8:	8f 2d       	mov	r24, r15
    12fa:	99 27       	eor	r25, r25
    12fc:	87 fd       	sbrc	r24, 7
    12fe:	90 95       	com	r25
    1300:	0e 94 d5 08 	call	0x11aa	; 0x11aa <get_joystick_direction>
    1304:	6f 2d       	mov	r22, r15
    1306:	7c 2f       	mov	r23, r28
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	cf 91       	pop	r28
    130c:	ff 90       	pop	r15
    130e:	ef 90       	pop	r14
    1310:	df 90       	pop	r13
    1312:	cf 90       	pop	r12
    1314:	08 95       	ret

00001316 <calibration_visual_countdown>:
    1316:	cf 93       	push	r28
    1318:	df 93       	push	r29
    131a:	1f 92       	push	r1
    131c:	cd b7       	in	r28, 0x3d	; 61
    131e:	de b7       	in	r29, 0x3e	; 62
    1320:	28 ee       	ldi	r18, 0xE8	; 232
    1322:	33 e0       	ldi	r19, 0x03	; 3
    1324:	a9 01       	movw	r20, r18
    1326:	48 1b       	sub	r20, r24
    1328:	59 0b       	sbc	r21, r25
    132a:	ca 01       	movw	r24, r20
    132c:	68 ec       	ldi	r22, 0xC8	; 200
    132e:	70 e0       	ldi	r23, 0x00	; 0
    1330:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
    1334:	60 5d       	subi	r22, 0xD0	; 208
    1336:	69 83       	std	Y+1, r22	; 0x01
    1338:	80 e0       	ldi	r24, 0x00	; 0
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
    1340:	40 e0       	ldi	r20, 0x00	; 0
    1342:	50 e0       	ldi	r21, 0x00	; 0
    1344:	62 ec       	ldi	r22, 0xC2	; 194
    1346:	71 e0       	ldi	r23, 0x01	; 1
    1348:	80 e0       	ldi	r24, 0x00	; 0
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
    1350:	42 e0       	ldi	r20, 0x02	; 2
    1352:	50 e0       	ldi	r21, 0x00	; 0
    1354:	60 ed       	ldi	r22, 0xD0	; 208
    1356:	71 e0       	ldi	r23, 0x01	; 1
    1358:	80 e0       	ldi	r24, 0x00	; 0
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
    1360:	20 e6       	ldi	r18, 0x60	; 96
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	42 e0       	ldi	r20, 0x02	; 2
    1366:	50 e0       	ldi	r21, 0x00	; 0
    1368:	be 01       	movw	r22, r28
    136a:	6f 5f       	subi	r22, 0xFF	; 255
    136c:	7f 4f       	sbci	r23, 0xFF	; 255
    136e:	80 e0       	ldi	r24, 0x00	; 0
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
    1376:	80 e0       	ldi	r24, 0x00	; 0
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
    137e:	0f 90       	pop	r0
    1380:	df 91       	pop	r29
    1382:	cf 91       	pop	r28
    1384:	08 95       	ret

00001386 <calibrate_joystick>:
    1386:	bf 92       	push	r11
    1388:	cf 92       	push	r12
    138a:	df 92       	push	r13
    138c:	ef 92       	push	r14
    138e:	ff 92       	push	r15
    1390:	0f 93       	push	r16
    1392:	1f 93       	push	r17
    1394:	cf 93       	push	r28
    1396:	df 93       	push	r29
    1398:	e1 2c       	mov	r14, r1
    139a:	f1 2c       	mov	r15, r1
    139c:	1f e7       	ldi	r17, 0x7F	; 127
    139e:	0f e7       	ldi	r16, 0x7F	; 127
    13a0:	cf e7       	ldi	r28, 0x7F	; 127
    13a2:	df e7       	ldi	r29, 0x7F	; 127
    13a4:	0f 2e       	mov	r0, r31
    13a6:	f8 ec       	ldi	r31, 0xC8	; 200
    13a8:	cf 2e       	mov	r12, r31
    13aa:	d1 2c       	mov	r13, r1
    13ac:	f0 2d       	mov	r31, r0
    13ae:	82 e0       	ldi	r24, 0x02	; 2
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	0e 94 13 08 	call	0x1026	; 0x1026 <get_adc>
    13b6:	b8 2e       	mov	r11, r24
    13b8:	83 e0       	ldi	r24, 0x03	; 3
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	0e 94 13 08 	call	0x1026	; 0x1026 <get_adc>
    13c0:	bc 16       	cp	r11, r28
    13c2:	08 f4       	brcc	.+2      	; 0x13c6 <calibrate_joystick+0x40>
    13c4:	cb 2d       	mov	r28, r11
    13c6:	81 17       	cp	r24, r17
    13c8:	08 f4       	brcc	.+2      	; 0x13cc <calibrate_joystick+0x46>
    13ca:	18 2f       	mov	r17, r24
    13cc:	08 17       	cp	r16, r24
    13ce:	08 f4       	brcc	.+2      	; 0x13d2 <calibrate_joystick+0x4c>
    13d0:	08 2f       	mov	r16, r24
    13d2:	db 15       	cp	r29, r11
    13d4:	08 f4       	brcc	.+2      	; 0x13d8 <calibrate_joystick+0x52>
    13d6:	db 2d       	mov	r29, r11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    13d8:	8f ef       	ldi	r24, 0xFF	; 255
    13da:	97 e1       	ldi	r25, 0x17	; 23
    13dc:	01 97       	sbiw	r24, 0x01	; 1
    13de:	f1 f7       	brne	.-4      	; 0x13dc <calibrate_joystick+0x56>
    13e0:	00 c0       	rjmp	.+0      	; 0x13e2 <calibrate_joystick+0x5c>
    13e2:	00 00       	nop
    13e4:	c7 01       	movw	r24, r14
    13e6:	b6 01       	movw	r22, r12
    13e8:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
    13ec:	89 2b       	or	r24, r25
    13ee:	19 f4       	brne	.+6      	; 0x13f6 <calibrate_joystick+0x70>
    13f0:	c7 01       	movw	r24, r14
    13f2:	0e 94 8b 09 	call	0x1316	; 0x1316 <calibration_visual_countdown>
    13f6:	9f ef       	ldi	r25, 0xFF	; 255
    13f8:	e9 1a       	sub	r14, r25
    13fa:	f9 0a       	sbc	r15, r25
    13fc:	88 ee       	ldi	r24, 0xE8	; 232
    13fe:	e8 16       	cp	r14, r24
    1400:	83 e0       	ldi	r24, 0x03	; 3
    1402:	f8 06       	cpc	r15, r24
    1404:	a1 f6       	brne	.-88     	; 0x13ae <calibrate_joystick+0x28>
    1406:	6d 2f       	mov	r22, r29
    1408:	70 e0       	ldi	r23, 0x00	; 0
    140a:	6c 1b       	sub	r22, r28
    140c:	71 09       	sbc	r23, r1
    140e:	88 27       	eor	r24, r24
    1410:	77 fd       	sbrc	r23, 7
    1412:	80 95       	com	r24
    1414:	98 2f       	mov	r25, r24
    1416:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    141a:	20 e0       	ldi	r18, 0x00	; 0
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	40 e0       	ldi	r20, 0x00	; 0
    1420:	5f e3       	ldi	r21, 0x3F	; 63
    1422:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__mulsf3>
    1426:	60 93 0a 01 	sts	0x010A, r22
    142a:	70 93 0b 01 	sts	0x010B, r23
    142e:	80 93 0c 01 	sts	0x010C, r24
    1432:	90 93 0d 01 	sts	0x010D, r25
    1436:	60 2f       	mov	r22, r16
    1438:	70 e0       	ldi	r23, 0x00	; 0
    143a:	61 1b       	sub	r22, r17
    143c:	71 09       	sbc	r23, r1
    143e:	88 27       	eor	r24, r24
    1440:	77 fd       	sbrc	r23, 7
    1442:	80 95       	com	r24
    1444:	98 2f       	mov	r25, r24
    1446:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    144a:	20 e0       	ldi	r18, 0x00	; 0
    144c:	30 e0       	ldi	r19, 0x00	; 0
    144e:	40 e0       	ldi	r20, 0x00	; 0
    1450:	5f e3       	ldi	r21, 0x3F	; 63
    1452:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__mulsf3>
    1456:	60 93 0e 01 	sts	0x010E, r22
    145a:	70 93 0f 01 	sts	0x010F, r23
    145e:	80 93 10 01 	sts	0x0110, r24
    1462:	90 93 11 01 	sts	0x0111, r25
    1466:	1f 92       	push	r1
    1468:	0f 93       	push	r16
    146a:	1f 92       	push	r1
    146c:	1f 93       	push	r17
    146e:	1f 92       	push	r1
    1470:	df 93       	push	r29
    1472:	1f 92       	push	r1
    1474:	cf 93       	push	r28
    1476:	8c ed       	ldi	r24, 0xDC	; 220
    1478:	91 e0       	ldi	r25, 0x01	; 1
    147a:	9f 93       	push	r25
    147c:	8f 93       	push	r24
    147e:	0e 94 00 19 	call	0x3200	; 0x3200 <printf>
    1482:	8d b7       	in	r24, 0x3d	; 61
    1484:	9e b7       	in	r25, 0x3e	; 62
    1486:	0a 96       	adiw	r24, 0x0a	; 10
    1488:	0f b6       	in	r0, 0x3f	; 63
    148a:	f8 94       	cli
    148c:	9e bf       	out	0x3e, r25	; 62
    148e:	0f be       	out	0x3f, r0	; 63
    1490:	8d bf       	out	0x3d, r24	; 61
    1492:	df 91       	pop	r29
    1494:	cf 91       	pop	r28
    1496:	1f 91       	pop	r17
    1498:	0f 91       	pop	r16
    149a:	ff 90       	pop	r15
    149c:	ef 90       	pop	r14
    149e:	df 90       	pop	r13
    14a0:	cf 90       	pop	r12
    14a2:	bf 90       	pop	r11
    14a4:	08 95       	ret

000014a6 <MCP_reset>:
    14a6:	0e 94 73 04 	call	0x8e6	; 0x8e6 <SPI_ss_low>
    14aa:	80 ec       	ldi	r24, 0xC0	; 192
    14ac:	0e 94 65 04 	call	0x8ca	; 0x8ca <SPI_transmit>
    14b0:	0e 94 71 04 	call	0x8e2	; 0x8e2 <SPI_ss_high>
    14b4:	08 95       	ret

000014b6 <MCP_read>:
    14b6:	cf 93       	push	r28
    14b8:	c8 2f       	mov	r28, r24
    14ba:	0e 94 73 04 	call	0x8e6	; 0x8e6 <SPI_ss_low>
    14be:	83 e0       	ldi	r24, 0x03	; 3
    14c0:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    14c4:	8c 2f       	mov	r24, r28
    14c6:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    14ca:	0e 94 6d 04 	call	0x8da	; 0x8da <SPI_receive>
    14ce:	c8 2f       	mov	r28, r24
    14d0:	0e 94 71 04 	call	0x8e2	; 0x8e2 <SPI_ss_high>
    14d4:	8c 2f       	mov	r24, r28
    14d6:	cf 91       	pop	r28
    14d8:	08 95       	ret

000014da <MCP_init>:
    14da:	80 e8       	ldi	r24, 0x80	; 128
    14dc:	95 e2       	ldi	r25, 0x25	; 37
    14de:	0e 94 65 0c 	call	0x18ca	; 0x18ca <uartInit>
    14e2:	0e 94 60 04 	call	0x8c0	; 0x8c0 <SPI_init>
    14e6:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <MCP_reset>
    14ea:	8e e0       	ldi	r24, 0x0E	; 14
    14ec:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <MCP_read>
    14f0:	80 7e       	andi	r24, 0xE0	; 224
    14f2:	80 38       	cpi	r24, 0x80	; 128
    14f4:	59 f0       	breq	.+22     	; 0x150c <MCP_init+0x32>
    14f6:	88 ee       	ldi	r24, 0xE8	; 232
    14f8:	91 e0       	ldi	r25, 0x01	; 1
    14fa:	9f 93       	push	r25
    14fc:	8f 93       	push	r24
    14fe:	0e 94 00 19 	call	0x3200	; 0x3200 <printf>
    1502:	0f 90       	pop	r0
    1504:	0f 90       	pop	r0
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	08 95       	ret
    150c:	80 e0       	ldi	r24, 0x00	; 0
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	08 95       	ret

00001512 <MCP_write>:
    1512:	cf 93       	push	r28
    1514:	df 93       	push	r29
    1516:	d8 2f       	mov	r29, r24
    1518:	c6 2f       	mov	r28, r22
    151a:	0e 94 73 04 	call	0x8e6	; 0x8e6 <SPI_ss_low>
    151e:	82 e0       	ldi	r24, 0x02	; 2
    1520:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    1524:	8d 2f       	mov	r24, r29
    1526:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    152a:	8c 2f       	mov	r24, r28
    152c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    1530:	0e 94 71 04 	call	0x8e2	; 0x8e2 <SPI_ss_high>
    1534:	df 91       	pop	r29
    1536:	cf 91       	pop	r28
    1538:	08 95       	ret

0000153a <MCP_rts>:
    153a:	cf 93       	push	r28
    153c:	c8 2f       	mov	r28, r24
    153e:	0e 94 73 04 	call	0x8e6	; 0x8e6 <SPI_ss_low>
    1542:	8c 2f       	mov	r24, r28
    1544:	83 70       	andi	r24, 0x03	; 3
    1546:	81 30       	cpi	r24, 0x01	; 1
    1548:	51 f0       	breq	.+20     	; 0x155e <MCP_rts+0x24>
    154a:	28 f0       	brcs	.+10     	; 0x1556 <MCP_rts+0x1c>
    154c:	82 30       	cpi	r24, 0x02	; 2
    154e:	59 f0       	breq	.+22     	; 0x1566 <MCP_rts+0x2c>
    1550:	83 30       	cpi	r24, 0x03	; 3
    1552:	69 f0       	breq	.+26     	; 0x156e <MCP_rts+0x34>
    1554:	0f c0       	rjmp	.+30     	; 0x1574 <MCP_rts+0x3a>
    1556:	81 e8       	ldi	r24, 0x81	; 129
    1558:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    155c:	0b c0       	rjmp	.+22     	; 0x1574 <MCP_rts+0x3a>
    155e:	82 e8       	ldi	r24, 0x82	; 130
    1560:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    1564:	07 c0       	rjmp	.+14     	; 0x1574 <MCP_rts+0x3a>
    1566:	84 e8       	ldi	r24, 0x84	; 132
    1568:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    156c:	03 c0       	rjmp	.+6      	; 0x1574 <MCP_rts+0x3a>
    156e:	87 e8       	ldi	r24, 0x87	; 135
    1570:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    1574:	0e 94 71 04 	call	0x8e2	; 0x8e2 <SPI_ss_high>
    1578:	cf 91       	pop	r28
    157a:	08 95       	ret

0000157c <MCP_bit_modify>:
    157c:	1f 93       	push	r17
    157e:	cf 93       	push	r28
    1580:	df 93       	push	r29
    1582:	18 2f       	mov	r17, r24
    1584:	d6 2f       	mov	r29, r22
    1586:	c4 2f       	mov	r28, r20
    1588:	0e 94 73 04 	call	0x8e6	; 0x8e6 <SPI_ss_low>
    158c:	85 e0       	ldi	r24, 0x05	; 5
    158e:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    1592:	81 2f       	mov	r24, r17
    1594:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    1598:	8d 2f       	mov	r24, r29
    159a:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    159e:	8c 2f       	mov	r24, r28
    15a0:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <SPI_send>
    15a4:	0e 94 71 04 	call	0x8e2	; 0x8e2 <SPI_ss_high>
    15a8:	df 91       	pop	r29
    15aa:	cf 91       	pop	r28
    15ac:	1f 91       	pop	r17
    15ae:	08 95       	ret

000015b0 <oled_init>:
    15b0:	e0 e0       	ldi	r30, 0x00	; 0
    15b2:	f0 e1       	ldi	r31, 0x10	; 16
    15b4:	8e ea       	ldi	r24, 0xAE	; 174
    15b6:	80 83       	st	Z, r24
    15b8:	81 ea       	ldi	r24, 0xA1	; 161
    15ba:	80 83       	st	Z, r24
    15bc:	8a ed       	ldi	r24, 0xDA	; 218
    15be:	80 83       	st	Z, r24
    15c0:	82 e1       	ldi	r24, 0x12	; 18
    15c2:	80 83       	st	Z, r24
    15c4:	88 ec       	ldi	r24, 0xC8	; 200
    15c6:	80 83       	st	Z, r24
    15c8:	88 ea       	ldi	r24, 0xA8	; 168
    15ca:	80 83       	st	Z, r24
    15cc:	8f e3       	ldi	r24, 0x3F	; 63
    15ce:	80 83       	st	Z, r24
    15d0:	85 ed       	ldi	r24, 0xD5	; 213
    15d2:	80 83       	st	Z, r24
    15d4:	80 e8       	ldi	r24, 0x80	; 128
    15d6:	80 83       	st	Z, r24
    15d8:	81 e8       	ldi	r24, 0x81	; 129
    15da:	80 83       	st	Z, r24
    15dc:	80 e5       	ldi	r24, 0x50	; 80
    15de:	80 83       	st	Z, r24
    15e0:	89 ed       	ldi	r24, 0xD9	; 217
    15e2:	80 83       	st	Z, r24
    15e4:	81 e2       	ldi	r24, 0x21	; 33
    15e6:	80 83       	st	Z, r24
    15e8:	80 e2       	ldi	r24, 0x20	; 32
    15ea:	80 83       	st	Z, r24
    15ec:	82 e0       	ldi	r24, 0x02	; 2
    15ee:	80 83       	st	Z, r24
    15f0:	8b ed       	ldi	r24, 0xDB	; 219
    15f2:	80 83       	st	Z, r24
    15f4:	80 e3       	ldi	r24, 0x30	; 48
    15f6:	80 83       	st	Z, r24
    15f8:	8d ea       	ldi	r24, 0xAD	; 173
    15fa:	80 83       	st	Z, r24
    15fc:	10 82       	st	Z, r1
    15fe:	84 ea       	ldi	r24, 0xA4	; 164
    1600:	80 83       	st	Z, r24
    1602:	86 ea       	ldi	r24, 0xA6	; 166
    1604:	80 83       	st	Z, r24
    1606:	8f ea       	ldi	r24, 0xAF	; 175
    1608:	80 83       	st	Z, r24
    160a:	08 95       	ret

0000160c <oled_sram_flush>:
    160c:	af 92       	push	r10
    160e:	bf 92       	push	r11
    1610:	cf 92       	push	r12
    1612:	df 92       	push	r13
    1614:	ef 92       	push	r14
    1616:	ff 92       	push	r15
    1618:	0f 93       	push	r16
    161a:	1f 93       	push	r17
    161c:	cf 93       	push	r28
    161e:	df 93       	push	r29
    1620:	5c 01       	movw	r10, r24
    1622:	c0 e0       	ldi	r28, 0x00	; 0
    1624:	d0 e0       	ldi	r29, 0x00	; 0
    1626:	e1 2c       	mov	r14, r1
    1628:	f1 2c       	mov	r15, r1
    162a:	c1 2c       	mov	r12, r1
    162c:	68 94       	set
    162e:	dd 24       	eor	r13, r13
    1630:	d4 f8       	bld	r13, 4
    1632:	00 e0       	ldi	r16, 0x00	; 0
    1634:	12 e1       	ldi	r17, 0x12	; 18
    1636:	ce 01       	movw	r24, r28
    1638:	9e 01       	movw	r18, r28
    163a:	2f 77       	andi	r18, 0x7F	; 127
    163c:	33 27       	eor	r19, r19
    163e:	23 2b       	or	r18, r19
    1640:	39 f4       	brne	.+14     	; 0x1650 <oled_sram_flush+0x44>
    1642:	20 eb       	ldi	r18, 0xB0	; 176
    1644:	2e 0d       	add	r18, r14
    1646:	f6 01       	movw	r30, r12
    1648:	20 83       	st	Z, r18
    164a:	ff ef       	ldi	r31, 0xFF	; 255
    164c:	ef 1a       	sub	r14, r31
    164e:	ff 0a       	sbc	r15, r31
    1650:	8a 0d       	add	r24, r10
    1652:	9b 1d       	adc	r25, r11
    1654:	0e 94 56 0c 	call	0x18ac	; 0x18ac <getSRAM>
    1658:	f8 01       	movw	r30, r16
    165a:	80 83       	st	Z, r24
    165c:	21 96       	adiw	r28, 0x01	; 1
    165e:	c1 15       	cp	r28, r1
    1660:	f4 e0       	ldi	r31, 0x04	; 4
    1662:	df 07       	cpc	r29, r31
    1664:	41 f7       	brne	.-48     	; 0x1636 <oled_sram_flush+0x2a>
    1666:	df 91       	pop	r29
    1668:	cf 91       	pop	r28
    166a:	1f 91       	pop	r17
    166c:	0f 91       	pop	r16
    166e:	ff 90       	pop	r15
    1670:	ef 90       	pop	r14
    1672:	df 90       	pop	r13
    1674:	cf 90       	pop	r12
    1676:	bf 90       	pop	r11
    1678:	af 90       	pop	r10
    167a:	08 95       	ret

0000167c <__vector_14>:
    167c:	1f 92       	push	r1
    167e:	0f 92       	push	r0
    1680:	0f b6       	in	r0, 0x3f	; 63
    1682:	0f 92       	push	r0
    1684:	11 24       	eor	r1, r1
    1686:	2f 93       	push	r18
    1688:	3f 93       	push	r19
    168a:	4f 93       	push	r20
    168c:	5f 93       	push	r21
    168e:	6f 93       	push	r22
    1690:	7f 93       	push	r23
    1692:	8f 93       	push	r24
    1694:	9f 93       	push	r25
    1696:	af 93       	push	r26
    1698:	bf 93       	push	r27
    169a:	ef 93       	push	r30
    169c:	ff 93       	push	r31
    169e:	80 e0       	ldi	r24, 0x00	; 0
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
    16a6:	1d bc       	out	0x2d, r1	; 45
    16a8:	1c bc       	out	0x2c, r1	; 44
    16aa:	ff 91       	pop	r31
    16ac:	ef 91       	pop	r30
    16ae:	bf 91       	pop	r27
    16b0:	af 91       	pop	r26
    16b2:	9f 91       	pop	r25
    16b4:	8f 91       	pop	r24
    16b6:	7f 91       	pop	r23
    16b8:	6f 91       	pop	r22
    16ba:	5f 91       	pop	r21
    16bc:	4f 91       	pop	r20
    16be:	3f 91       	pop	r19
    16c0:	2f 91       	pop	r18
    16c2:	0f 90       	pop	r0
    16c4:	0f be       	out	0x3f, r0	; 63
    16c6:	0f 90       	pop	r0
    16c8:	1f 90       	pop	r1
    16ca:	18 95       	reti

000016cc <oled_sram_write_string>:
    16cc:	af 92       	push	r10
    16ce:	bf 92       	push	r11
    16d0:	cf 92       	push	r12
    16d2:	df 92       	push	r13
    16d4:	ef 92       	push	r14
    16d6:	ff 92       	push	r15
    16d8:	0f 93       	push	r16
    16da:	1f 93       	push	r17
    16dc:	cf 93       	push	r28
    16de:	df 93       	push	r29
    16e0:	6a 01       	movw	r12, r20
    16e2:	d6 94       	lsr	r13
    16e4:	dc 2c       	mov	r13, r12
    16e6:	cc 24       	eor	r12, r12
    16e8:	d7 94       	ror	r13
    16ea:	c7 94       	ror	r12
    16ec:	c8 0e       	add	r12, r24
    16ee:	d9 1e       	adc	r13, r25
    16f0:	fb 01       	movw	r30, r22
    16f2:	e0 80       	ld	r14, Z
    16f4:	ee 20       	and	r14, r14
    16f6:	69 f1       	breq	.+90     	; 0x1752 <oled_sram_write_string+0x86>
    16f8:	5b 01       	movw	r10, r22
    16fa:	ff ef       	ldi	r31, 0xFF	; 255
    16fc:	af 1a       	sub	r10, r31
    16fe:	bf 0a       	sbc	r11, r31
    1700:	15 c0       	rjmp	.+42     	; 0x172c <oled_sram_write_string+0x60>
    1702:	ce 01       	movw	r24, r28
    1704:	f7 01       	movw	r30, r14
    1706:	e8 0f       	add	r30, r24
    1708:	f9 1f       	adc	r31, r25
    170a:	64 91       	lpm	r22, Z
    170c:	ec 01       	movw	r28, r24
    170e:	21 96       	adiw	r28, 0x01	; 1
    1710:	70 e0       	ldi	r23, 0x00	; 0
    1712:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <setSRAM>
    1716:	c0 17       	cp	r28, r16
    1718:	d1 07       	cpc	r29, r17
    171a:	99 f7       	brne	.-26     	; 0x1702 <oled_sram_write_string+0x36>
    171c:	48 e0       	ldi	r20, 0x08	; 8
    171e:	c4 0e       	add	r12, r20
    1720:	d1 1c       	adc	r13, r1
    1722:	f5 01       	movw	r30, r10
    1724:	e1 90       	ld	r14, Z+
    1726:	5f 01       	movw	r10, r30
    1728:	ee 20       	and	r14, r14
    172a:	99 f0       	breq	.+38     	; 0x1752 <oled_sram_write_string+0x86>
    172c:	86 01       	movw	r16, r12
    172e:	08 5f       	subi	r16, 0xF8	; 248
    1730:	1f 4f       	sbci	r17, 0xFF	; 255
    1732:	f1 2c       	mov	r15, r1
    1734:	ee 0c       	add	r14, r14
    1736:	ff 1c       	adc	r15, r15
    1738:	ee 0c       	add	r14, r14
    173a:	ff 1c       	adc	r15, r15
    173c:	ee 0c       	add	r14, r14
    173e:	ff 1c       	adc	r15, r15
    1740:	97 01       	movw	r18, r14
    1742:	2c 19       	sub	r18, r12
    1744:	3d 09       	sbc	r19, r13
    1746:	c6 01       	movw	r24, r12
    1748:	a9 01       	movw	r20, r18
    174a:	48 55       	subi	r20, 0x58	; 88
    174c:	5f 4f       	sbci	r21, 0xFF	; 255
    174e:	7a 01       	movw	r14, r20
    1750:	d9 cf       	rjmp	.-78     	; 0x1704 <oled_sram_write_string+0x38>
    1752:	df 91       	pop	r29
    1754:	cf 91       	pop	r28
    1756:	1f 91       	pop	r17
    1758:	0f 91       	pop	r16
    175a:	ff 90       	pop	r15
    175c:	ef 90       	pop	r14
    175e:	df 90       	pop	r13
    1760:	cf 90       	pop	r12
    1762:	bf 90       	pop	r11
    1764:	af 90       	pop	r10
    1766:	08 95       	ret

00001768 <oled_sram_write_char>:
    1768:	ef 92       	push	r14
    176a:	ff 92       	push	r15
    176c:	0f 93       	push	r16
    176e:	1f 93       	push	r17
    1770:	cf 93       	push	r28
    1772:	df 93       	push	r29
    1774:	7b 01       	movw	r14, r22
    1776:	8a 01       	movw	r16, r20
    1778:	16 95       	lsr	r17
    177a:	10 2f       	mov	r17, r16
    177c:	00 27       	eor	r16, r16
    177e:	17 95       	ror	r17
    1780:	07 95       	ror	r16
    1782:	80 0f       	add	r24, r16
    1784:	91 1f       	adc	r25, r17
    1786:	8c 01       	movw	r16, r24
    1788:	02 0f       	add	r16, r18
    178a:	13 1f       	adc	r17, r19
    178c:	c0 e0       	ldi	r28, 0x00	; 0
    178e:	d0 e0       	ldi	r29, 0x00	; 0
    1790:	d7 01       	movw	r26, r14
    1792:	ec 91       	ld	r30, X
    1794:	f0 e0       	ldi	r31, 0x00	; 0
    1796:	b0 97       	sbiw	r30, 0x20	; 32
    1798:	ee 0f       	add	r30, r30
    179a:	ff 1f       	adc	r31, r31
    179c:	ee 0f       	add	r30, r30
    179e:	ff 1f       	adc	r31, r31
    17a0:	ee 0f       	add	r30, r30
    17a2:	ff 1f       	adc	r31, r31
    17a4:	ec 0f       	add	r30, r28
    17a6:	fd 1f       	adc	r31, r29
    17a8:	e8 55       	subi	r30, 0x58	; 88
    17aa:	fe 4f       	sbci	r31, 0xFE	; 254
    17ac:	64 91       	lpm	r22, Z
    17ae:	70 e0       	ldi	r23, 0x00	; 0
    17b0:	ce 01       	movw	r24, r28
    17b2:	80 0f       	add	r24, r16
    17b4:	91 1f       	adc	r25, r17
    17b6:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <setSRAM>
    17ba:	21 96       	adiw	r28, 0x01	; 1
    17bc:	c8 30       	cpi	r28, 0x08	; 8
    17be:	d1 05       	cpc	r29, r1
    17c0:	39 f7       	brne	.-50     	; 0x1790 <oled_sram_write_char+0x28>
    17c2:	df 91       	pop	r29
    17c4:	cf 91       	pop	r28
    17c6:	1f 91       	pop	r17
    17c8:	0f 91       	pop	r16
    17ca:	ff 90       	pop	r15
    17cc:	ef 90       	pop	r14
    17ce:	08 95       	ret

000017d0 <oled_sram_clear_line>:
    17d0:	0f 93       	push	r16
    17d2:	1f 93       	push	r17
    17d4:	cf 93       	push	r28
    17d6:	df 93       	push	r29
    17d8:	8b 01       	movw	r16, r22
    17da:	16 95       	lsr	r17
    17dc:	10 2f       	mov	r17, r16
    17de:	00 27       	eor	r16, r16
    17e0:	17 95       	ror	r17
    17e2:	07 95       	ror	r16
    17e4:	08 0f       	add	r16, r24
    17e6:	19 1f       	adc	r17, r25
    17e8:	c0 e0       	ldi	r28, 0x00	; 0
    17ea:	d0 e0       	ldi	r29, 0x00	; 0
    17ec:	60 e0       	ldi	r22, 0x00	; 0
    17ee:	70 e0       	ldi	r23, 0x00	; 0
    17f0:	ce 01       	movw	r24, r28
    17f2:	80 0f       	add	r24, r16
    17f4:	91 1f       	adc	r25, r17
    17f6:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <setSRAM>
    17fa:	21 96       	adiw	r28, 0x01	; 1
    17fc:	c0 38       	cpi	r28, 0x80	; 128
    17fe:	d1 05       	cpc	r29, r1
    1800:	a9 f7       	brne	.-22     	; 0x17ec <oled_sram_clear_line+0x1c>
    1802:	df 91       	pop	r29
    1804:	cf 91       	pop	r28
    1806:	1f 91       	pop	r17
    1808:	0f 91       	pop	r16
    180a:	08 95       	ret

0000180c <oled_sram_clear_screen>:
    180c:	0f 93       	push	r16
    180e:	1f 93       	push	r17
    1810:	cf 93       	push	r28
    1812:	df 93       	push	r29
    1814:	8c 01       	movw	r16, r24
    1816:	c0 e0       	ldi	r28, 0x00	; 0
    1818:	d0 e0       	ldi	r29, 0x00	; 0
    181a:	be 01       	movw	r22, r28
    181c:	c8 01       	movw	r24, r16
    181e:	0e 94 e8 0b 	call	0x17d0	; 0x17d0 <oled_sram_clear_line>
    1822:	21 96       	adiw	r28, 0x01	; 1
    1824:	c8 30       	cpi	r28, 0x08	; 8
    1826:	d1 05       	cpc	r29, r1
    1828:	c1 f7       	brne	.-16     	; 0x181a <oled_sram_clear_screen+0xe>
    182a:	df 91       	pop	r29
    182c:	cf 91       	pop	r28
    182e:	1f 91       	pop	r17
    1830:	0f 91       	pop	r16
    1832:	08 95       	ret

00001834 <oled_sram_write_bit>:
    1834:	0f 93       	push	r16
    1836:	1f 93       	push	r17
    1838:	cf 93       	push	r28
    183a:	df 93       	push	r29
    183c:	ea 01       	movw	r28, r20
    183e:	9a 01       	movw	r18, r20
    1840:	dd 23       	and	r29, r29
    1842:	14 f4       	brge	.+4      	; 0x1848 <oled_sram_write_bit+0x14>
    1844:	29 5f       	subi	r18, 0xF9	; 249
    1846:	3f 4f       	sbci	r19, 0xFF	; 255
    1848:	89 01       	movw	r16, r18
    184a:	15 95       	asr	r17
    184c:	07 95       	ror	r16
    184e:	15 95       	asr	r17
    1850:	07 95       	ror	r16
    1852:	15 95       	asr	r17
    1854:	07 95       	ror	r16
    1856:	16 95       	lsr	r17
    1858:	10 2f       	mov	r17, r16
    185a:	00 27       	eor	r16, r16
    185c:	17 95       	ror	r17
    185e:	07 95       	ror	r16
    1860:	08 0f       	add	r16, r24
    1862:	19 1f       	adc	r17, r25
    1864:	06 0f       	add	r16, r22
    1866:	17 1f       	adc	r17, r23
    1868:	c8 01       	movw	r24, r16
    186a:	0e 94 56 0c 	call	0x18ac	; 0x18ac <getSRAM>
    186e:	ae 01       	movw	r20, r28
    1870:	47 70       	andi	r20, 0x07	; 7
    1872:	50 78       	andi	r21, 0x80	; 128
    1874:	55 23       	and	r21, r21
    1876:	34 f4       	brge	.+12     	; 0x1884 <oled_sram_write_bit+0x50>
    1878:	41 50       	subi	r20, 0x01	; 1
    187a:	51 09       	sbc	r21, r1
    187c:	48 6f       	ori	r20, 0xF8	; 248
    187e:	5f 6f       	ori	r21, 0xFF	; 255
    1880:	4f 5f       	subi	r20, 0xFF	; 255
    1882:	5f 4f       	sbci	r21, 0xFF	; 255
    1884:	21 e0       	ldi	r18, 0x01	; 1
    1886:	30 e0       	ldi	r19, 0x00	; 0
    1888:	b9 01       	movw	r22, r18
    188a:	02 c0       	rjmp	.+4      	; 0x1890 <oled_sram_write_bit+0x5c>
    188c:	66 0f       	add	r22, r22
    188e:	77 1f       	adc	r23, r23
    1890:	4a 95       	dec	r20
    1892:	e2 f7       	brpl	.-8      	; 0x188c <oled_sram_write_bit+0x58>
    1894:	ab 01       	movw	r20, r22
    1896:	48 2b       	or	r20, r24
    1898:	64 2f       	mov	r22, r20
    189a:	70 e0       	ldi	r23, 0x00	; 0
    189c:	c8 01       	movw	r24, r16
    189e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <setSRAM>
    18a2:	df 91       	pop	r29
    18a4:	cf 91       	pop	r28
    18a6:	1f 91       	pop	r17
    18a8:	0f 91       	pop	r16
    18aa:	08 95       	ret

000018ac <getSRAM>:
    18ac:	98 5e       	subi	r25, 0xE8	; 232
    18ae:	fc 01       	movw	r30, r24
    18b0:	80 81       	ld	r24, Z
    18b2:	08 95       	ret

000018b4 <setSRAM>:
    18b4:	fc 01       	movw	r30, r24
    18b6:	f8 5e       	subi	r31, 0xE8	; 232
    18b8:	80 81       	ld	r24, Z
    18ba:	60 83       	st	Z, r22
    18bc:	08 95       	ret

000018be <uartSend>:
    18be:	5d 9b       	sbis	0x0b, 5	; 11
    18c0:	fe cf       	rjmp	.-4      	; 0x18be <uartSend>
    18c2:	8c b9       	out	0x0c, r24	; 12
    18c4:	80 e0       	ldi	r24, 0x00	; 0
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	08 95       	ret

000018ca <uartInit>:
    18ca:	9c 01       	movw	r18, r24
    18cc:	40 e0       	ldi	r20, 0x00	; 0
    18ce:	50 e0       	ldi	r21, 0x00	; 0
    18d0:	60 e0       	ldi	r22, 0x00	; 0
    18d2:	70 eb       	ldi	r23, 0xB0	; 176
    18d4:	84 e0       	ldi	r24, 0x04	; 4
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	0e 94 db 16 	call	0x2db6	; 0x2db6 <__divmodsi4>
    18dc:	21 50       	subi	r18, 0x01	; 1
    18de:	31 09       	sbc	r19, r1
    18e0:	30 bd       	out	0x20, r19	; 32
    18e2:	29 b9       	out	0x09, r18	; 9
    18e4:	8a b1       	in	r24, 0x0a	; 10
    18e6:	88 61       	ori	r24, 0x18	; 24
    18e8:	8a b9       	out	0x0a, r24	; 10
    18ea:	80 b5       	in	r24, 0x20	; 32
    18ec:	86 68       	ori	r24, 0x86	; 134
    18ee:	80 bd       	out	0x20, r24	; 32
    18f0:	60 e0       	ldi	r22, 0x00	; 0
    18f2:	70 e0       	ldi	r23, 0x00	; 0
    18f4:	8f e5       	ldi	r24, 0x5F	; 95
    18f6:	9c e0       	ldi	r25, 0x0C	; 12
    18f8:	0e 94 b5 18 	call	0x316a	; 0x316a <fdevopen>
    18fc:	80 e0       	ldi	r24, 0x00	; 0
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	08 95       	ret

00001902 <play_draw>:
    1902:	80 e0       	ldi	r24, 0x00	; 0
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
    190a:	0f e1       	ldi	r16, 0x1F	; 31
    190c:	10 e0       	ldi	r17, 0x00	; 0
    190e:	cf e3       	ldi	r28, 0x3F	; 63
    1910:	d0 e0       	ldi	r29, 0x00	; 0
    1912:	0e 94 2b 09 	call	0x1256	; 0x1256 <get_joystick_position>
    1916:	81 30       	cpi	r24, 0x01	; 1
    1918:	71 f0       	breq	.+28     	; 0x1936 <play_draw+0x34>
    191a:	58 f0       	brcs	.+22     	; 0x1932 <play_draw+0x30>
    191c:	82 30       	cpi	r24, 0x02	; 2
    191e:	19 f0       	breq	.+6      	; 0x1926 <play_draw+0x24>
    1920:	83 30       	cpi	r24, 0x03	; 3
    1922:	21 f0       	breq	.+8      	; 0x192c <play_draw+0x2a>
    1924:	09 c0       	rjmp	.+18     	; 0x1938 <play_draw+0x36>
    1926:	01 50       	subi	r16, 0x01	; 1
    1928:	11 09       	sbc	r17, r1
    192a:	06 c0       	rjmp	.+12     	; 0x1938 <play_draw+0x36>
    192c:	0f 5f       	subi	r16, 0xFF	; 255
    192e:	1f 4f       	sbci	r17, 0xFF	; 255
    1930:	03 c0       	rjmp	.+6      	; 0x1938 <play_draw+0x36>
    1932:	21 97       	sbiw	r28, 0x01	; 1
    1934:	01 c0       	rjmp	.+2      	; 0x1938 <play_draw+0x36>
    1936:	21 96       	adiw	r28, 0x01	; 1
    1938:	a8 01       	movw	r20, r16
    193a:	be 01       	movw	r22, r28
    193c:	80 e0       	ldi	r24, 0x00	; 0
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	0e 94 1a 0c 	call	0x1834	; 0x1834 <oled_sram_write_bit>
    1944:	80 e0       	ldi	r24, 0x00	; 0
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
    194c:	2f ef       	ldi	r18, 0xFF	; 255
    194e:	8f e7       	ldi	r24, 0x7F	; 127
    1950:	91 e0       	ldi	r25, 0x01	; 1
    1952:	21 50       	subi	r18, 0x01	; 1
    1954:	80 40       	sbci	r24, 0x00	; 0
    1956:	90 40       	sbci	r25, 0x00	; 0
    1958:	e1 f7       	brne	.-8      	; 0x1952 <play_draw+0x50>
    195a:	00 c0       	rjmp	.+0      	; 0x195c <play_draw+0x5a>
    195c:	00 c0       	rjmp	.+0      	; 0x195e <play_draw+0x5c>
    195e:	d9 cf       	rjmp	.-78     	; 0x1912 <play_draw+0x10>

00001960 <racketHit>:
    1960:	cf 92       	push	r12
    1962:	df 92       	push	r13
    1964:	ef 92       	push	r14
    1966:	ff 92       	push	r15
    1968:	cf 93       	push	r28
    196a:	df 93       	push	r29
    196c:	eb 01       	movw	r28, r22
    196e:	fc 01       	movw	r30, r24
    1970:	c2 80       	ldd	r12, Z+2	; 0x02
    1972:	d3 80       	ldd	r13, Z+3	; 0x03
    1974:	e4 80       	ldd	r14, Z+4	; 0x04
    1976:	f5 80       	ldd	r15, Z+5	; 0x05
    1978:	88 27       	eor	r24, r24
    197a:	77 fd       	sbrc	r23, 7
    197c:	80 95       	com	r24
    197e:	98 2f       	mov	r25, r24
    1980:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    1984:	9b 01       	movw	r18, r22
    1986:	ac 01       	movw	r20, r24
    1988:	c7 01       	movw	r24, r14
    198a:	b6 01       	movw	r22, r12
    198c:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <__gesf2>
    1990:	88 23       	and	r24, r24
    1992:	bc f0       	brlt	.+46     	; 0x19c2 <racketHit+0x62>
    1994:	be 01       	movw	r22, r28
    1996:	60 5f       	subi	r22, 0xF0	; 240
    1998:	7f 4f       	sbci	r23, 0xFF	; 255
    199a:	88 27       	eor	r24, r24
    199c:	77 fd       	sbrc	r23, 7
    199e:	80 95       	com	r24
    19a0:	98 2f       	mov	r25, r24
    19a2:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    19a6:	9b 01       	movw	r18, r22
    19a8:	ac 01       	movw	r20, r24
    19aa:	d1 e0       	ldi	r29, 0x01	; 1
    19ac:	c0 e0       	ldi	r28, 0x00	; 0
    19ae:	c7 01       	movw	r24, r14
    19b0:	b6 01       	movw	r22, r12
    19b2:	0e 94 11 15 	call	0x2a22	; 0x2a22 <__cmpsf2>
    19b6:	88 23       	and	r24, r24
    19b8:	0c f0       	brlt	.+2      	; 0x19bc <racketHit+0x5c>
    19ba:	d0 e0       	ldi	r29, 0x00	; 0
    19bc:	8d 2f       	mov	r24, r29
    19be:	9c 2f       	mov	r25, r28
    19c0:	02 c0       	rjmp	.+4      	; 0x19c6 <racketHit+0x66>
    19c2:	80 e0       	ldi	r24, 0x00	; 0
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	df 91       	pop	r29
    19c8:	cf 91       	pop	r28
    19ca:	ff 90       	pop	r15
    19cc:	ef 90       	pop	r14
    19ce:	df 90       	pop	r13
    19d0:	cf 90       	pop	r12
    19d2:	08 95       	ret

000019d4 <updateBallAngle>:
    19d4:	cf 92       	push	r12
    19d6:	df 92       	push	r13
    19d8:	ef 92       	push	r14
    19da:	ff 92       	push	r15
    19dc:	0f 93       	push	r16
    19de:	1f 93       	push	r17
    19e0:	cf 93       	push	r28
    19e2:	df 93       	push	r29
    19e4:	ec 01       	movw	r28, r24
    19e6:	8b 01       	movw	r16, r22
    19e8:	6e 81       	ldd	r22, Y+6	; 0x06
    19ea:	7f 81       	ldd	r23, Y+7	; 0x07
    19ec:	88 27       	eor	r24, r24
    19ee:	77 fd       	sbrc	r23, 7
    19f0:	80 95       	com	r24
    19f2:	98 2f       	mov	r25, r24
    19f4:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    19f8:	6b 01       	movw	r12, r22
    19fa:	7c 01       	movw	r14, r24
    19fc:	b8 01       	movw	r22, r16
    19fe:	88 27       	eor	r24, r24
    1a00:	77 fd       	sbrc	r23, 7
    1a02:	80 95       	com	r24
    1a04:	98 2f       	mov	r25, r24
    1a06:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    1a0a:	9b 01       	movw	r18, r22
    1a0c:	ac 01       	movw	r20, r24
    1a0e:	6a 81       	ldd	r22, Y+2	; 0x02
    1a10:	7b 81       	ldd	r23, Y+3	; 0x03
    1a12:	8c 81       	ldd	r24, Y+4	; 0x04
    1a14:	9d 81       	ldd	r25, Y+5	; 0x05
    1a16:	0e 94 ac 14 	call	0x2958	; 0x2958 <__subsf3>
    1a1a:	20 e0       	ldi	r18, 0x00	; 0
    1a1c:	30 e0       	ldi	r19, 0x00	; 0
    1a1e:	40 e0       	ldi	r20, 0x00	; 0
    1a20:	51 e4       	ldi	r21, 0x41	; 65
    1a22:	0e 94 ac 14 	call	0x2958	; 0x2958 <__subsf3>
    1a26:	20 e0       	ldi	r18, 0x00	; 0
    1a28:	30 e0       	ldi	r19, 0x00	; 0
    1a2a:	40 e0       	ldi	r20, 0x00	; 0
    1a2c:	5e e3       	ldi	r21, 0x3E	; 62
    1a2e:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__mulsf3>
    1a32:	20 e0       	ldi	r18, 0x00	; 0
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	44 e3       	ldi	r20, 0x34	; 52
    1a38:	52 e4       	ldi	r21, 0x42	; 66
    1a3a:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <__mulsf3>
    1a3e:	9b 01       	movw	r18, r22
    1a40:	ac 01       	movw	r20, r24
    1a42:	c7 01       	movw	r24, r14
    1a44:	b6 01       	movw	r22, r12
    1a46:	0e 94 ad 14 	call	0x295a	; 0x295a <__addsf3>
    1a4a:	0e 94 7d 15 	call	0x2afa	; 0x2afa <__fixsfsi>
    1a4e:	6e 32       	cpi	r22, 0x2E	; 46
    1a50:	71 05       	cpc	r23, r1
    1a52:	2c f0       	brlt	.+10     	; 0x1a5e <updateBallAngle+0x8a>
    1a54:	8d e2       	ldi	r24, 0x2D	; 45
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	9f 83       	std	Y+7, r25	; 0x07
    1a5a:	8e 83       	std	Y+6, r24	; 0x06
    1a5c:	0b c0       	rjmp	.+22     	; 0x1a74 <updateBallAngle+0xa0>
    1a5e:	63 3d       	cpi	r22, 0xD3	; 211
    1a60:	4f ef       	ldi	r20, 0xFF	; 255
    1a62:	74 07       	cpc	r23, r20
    1a64:	2c f4       	brge	.+10     	; 0x1a70 <updateBallAngle+0x9c>
    1a66:	8d e2       	ldi	r24, 0x2D	; 45
    1a68:	90 e0       	ldi	r25, 0x00	; 0
    1a6a:	9f 83       	std	Y+7, r25	; 0x07
    1a6c:	8e 83       	std	Y+6, r24	; 0x06
    1a6e:	02 c0       	rjmp	.+4      	; 0x1a74 <updateBallAngle+0xa0>
    1a70:	7f 83       	std	Y+7, r23	; 0x07
    1a72:	6e 83       	std	Y+6, r22	; 0x06
    1a74:	df 91       	pop	r29
    1a76:	cf 91       	pop	r28
    1a78:	1f 91       	pop	r17
    1a7a:	0f 91       	pop	r16
    1a7c:	ff 90       	pop	r15
    1a7e:	ef 90       	pop	r14
    1a80:	df 90       	pop	r13
    1a82:	cf 90       	pop	r12
    1a84:	08 95       	ret

00001a86 <ballInit>:
    1a86:	cf 93       	push	r28
    1a88:	df 93       	push	r29
    1a8a:	ec 01       	movw	r28, r24
    1a8c:	0e 94 a5 18 	call	0x314a	; 0x314a <rand>
    1a90:	81 70       	andi	r24, 0x01	; 1
    1a92:	90 78       	andi	r25, 0x80	; 128
    1a94:	99 23       	and	r25, r25
    1a96:	24 f4       	brge	.+8      	; 0x1aa0 <ballInit+0x1a>
    1a98:	01 97       	sbiw	r24, 0x01	; 1
    1a9a:	8e 6f       	ori	r24, 0xFE	; 254
    1a9c:	9f 6f       	ori	r25, 0xFF	; 255
    1a9e:	01 96       	adiw	r24, 0x01	; 1
    1aa0:	99 87       	std	Y+9, r25	; 0x09
    1aa2:	88 87       	std	Y+8, r24	; 0x08
    1aa4:	0e 94 a5 18 	call	0x314a	; 0x314a <rand>
    1aa8:	6b e5       	ldi	r22, 0x5B	; 91
    1aaa:	70 e0       	ldi	r23, 0x00	; 0
    1aac:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
    1ab0:	8d 97       	sbiw	r24, 0x2d	; 45
    1ab2:	9f 83       	std	Y+7, r25	; 0x07
    1ab4:	8e 83       	std	Y+6, r24	; 0x06
    1ab6:	8f e3       	ldi	r24, 0x3F	; 63
    1ab8:	90 e0       	ldi	r25, 0x00	; 0
    1aba:	99 83       	std	Y+1, r25	; 0x01
    1abc:	88 83       	st	Y, r24
    1abe:	df 91       	pop	r29
    1ac0:	cf 91       	pop	r28
    1ac2:	08 95       	ret

00001ac4 <updateBallPosition>:
    1ac4:	cf 92       	push	r12
    1ac6:	df 92       	push	r13
    1ac8:	ef 92       	push	r14
    1aca:	ff 92       	push	r15
    1acc:	0f 93       	push	r16
    1ace:	1f 93       	push	r17
    1ad0:	cf 93       	push	r28
    1ad2:	df 93       	push	r29
    1ad4:	ec 01       	movw	r28, r24
    1ad6:	0e 81       	ldd	r16, Y+6	; 0x06
    1ad8:	1f 81       	ldd	r17, Y+7	; 0x07
    1ada:	b8 01       	movw	r22, r16
    1adc:	88 27       	eor	r24, r24
    1ade:	77 fd       	sbrc	r23, 7
    1ae0:	80 95       	com	r24
    1ae2:	98 2f       	mov	r25, r24
    1ae4:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__floatsisf>
    1ae8:	20 e0       	ldi	r18, 0x00	; 0
    1aea:	30 e0       	ldi	r19, 0x00	; 0
    1aec:	44 e3       	ldi	r20, 0x34	; 52
    1aee:	52 e4       	ldi	r21, 0x42	; 66
    1af0:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <__divsf3>
    1af4:	2a 81       	ldd	r18, Y+2	; 0x02
    1af6:	3b 81       	ldd	r19, Y+3	; 0x03
    1af8:	4c 81       	ldd	r20, Y+4	; 0x04
    1afa:	5d 81       	ldd	r21, Y+5	; 0x05
    1afc:	0e 94 ad 14 	call	0x295a	; 0x295a <__addsf3>
    1b00:	6b 01       	movw	r12, r22
    1b02:	7c 01       	movw	r14, r24
    1b04:	20 e0       	ldi	r18, 0x00	; 0
    1b06:	30 e0       	ldi	r19, 0x00	; 0
    1b08:	4c e7       	ldi	r20, 0x7C	; 124
    1b0a:	52 e4       	ldi	r21, 0x42	; 66
    1b0c:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <__gesf2>
    1b10:	18 16       	cp	r1, r24
    1b12:	d4 f4       	brge	.+52     	; 0x1b48 <updateBallPosition+0x84>
    1b14:	20 e0       	ldi	r18, 0x00	; 0
    1b16:	30 e0       	ldi	r19, 0x00	; 0
    1b18:	4c e7       	ldi	r20, 0x7C	; 124
    1b1a:	52 e4       	ldi	r21, 0x42	; 66
    1b1c:	c7 01       	movw	r24, r14
    1b1e:	b6 01       	movw	r22, r12
    1b20:	0e 94 ac 14 	call	0x2958	; 0x2958 <__subsf3>
    1b24:	9b 01       	movw	r18, r22
    1b26:	ac 01       	movw	r20, r24
    1b28:	60 e0       	ldi	r22, 0x00	; 0
    1b2a:	70 e0       	ldi	r23, 0x00	; 0
    1b2c:	8c e7       	ldi	r24, 0x7C	; 124
    1b2e:	92 e4       	ldi	r25, 0x42	; 66
    1b30:	0e 94 ac 14 	call	0x2958	; 0x2958 <__subsf3>
    1b34:	6a 83       	std	Y+2, r22	; 0x02
    1b36:	7b 83       	std	Y+3, r23	; 0x03
    1b38:	8c 83       	std	Y+4, r24	; 0x04
    1b3a:	9d 83       	std	Y+5, r25	; 0x05
    1b3c:	11 95       	neg	r17
    1b3e:	01 95       	neg	r16
    1b40:	11 09       	sbc	r17, r1
    1b42:	1f 83       	std	Y+7, r17	; 0x07
    1b44:	0e 83       	std	Y+6, r16	; 0x06
    1b46:	1b c0       	rjmp	.+54     	; 0x1b7e <updateBallPosition+0xba>
    1b48:	20 e0       	ldi	r18, 0x00	; 0
    1b4a:	30 e0       	ldi	r19, 0x00	; 0
    1b4c:	a9 01       	movw	r20, r18
    1b4e:	c7 01       	movw	r24, r14
    1b50:	b6 01       	movw	r22, r12
    1b52:	0e 94 11 15 	call	0x2a22	; 0x2a22 <__cmpsf2>
    1b56:	88 23       	and	r24, r24
    1b58:	74 f4       	brge	.+28     	; 0x1b76 <updateBallPosition+0xb2>
    1b5a:	f7 fa       	bst	r15, 7
    1b5c:	f0 94       	com	r15
    1b5e:	f7 f8       	bld	r15, 7
    1b60:	f0 94       	com	r15
    1b62:	ca 82       	std	Y+2, r12	; 0x02
    1b64:	db 82       	std	Y+3, r13	; 0x03
    1b66:	ec 82       	std	Y+4, r14	; 0x04
    1b68:	fd 82       	std	Y+5, r15	; 0x05
    1b6a:	11 95       	neg	r17
    1b6c:	01 95       	neg	r16
    1b6e:	11 09       	sbc	r17, r1
    1b70:	1f 83       	std	Y+7, r17	; 0x07
    1b72:	0e 83       	std	Y+6, r16	; 0x06
    1b74:	04 c0       	rjmp	.+8      	; 0x1b7e <updateBallPosition+0xba>
    1b76:	ca 82       	std	Y+2, r12	; 0x02
    1b78:	db 82       	std	Y+3, r13	; 0x03
    1b7a:	ec 82       	std	Y+4, r14	; 0x04
    1b7c:	fd 82       	std	Y+5, r15	; 0x05
    1b7e:	88 85       	ldd	r24, Y+8	; 0x08
    1b80:	99 85       	ldd	r25, Y+9	; 0x09
    1b82:	01 97       	sbiw	r24, 0x01	; 1
    1b84:	31 f4       	brne	.+12     	; 0x1b92 <updateBallPosition+0xce>
    1b86:	88 81       	ld	r24, Y
    1b88:	99 81       	ldd	r25, Y+1	; 0x01
    1b8a:	01 96       	adiw	r24, 0x01	; 1
    1b8c:	99 83       	std	Y+1, r25	; 0x01
    1b8e:	88 83       	st	Y, r24
    1b90:	05 c0       	rjmp	.+10     	; 0x1b9c <updateBallPosition+0xd8>
    1b92:	88 81       	ld	r24, Y
    1b94:	99 81       	ldd	r25, Y+1	; 0x01
    1b96:	01 97       	sbiw	r24, 0x01	; 1
    1b98:	99 83       	std	Y+1, r25	; 0x01
    1b9a:	88 83       	st	Y, r24
    1b9c:	df 91       	pop	r29
    1b9e:	cf 91       	pop	r28
    1ba0:	1f 91       	pop	r17
    1ba2:	0f 91       	pop	r16
    1ba4:	ff 90       	pop	r15
    1ba6:	ef 90       	pop	r14
    1ba8:	df 90       	pop	r13
    1baa:	cf 90       	pop	r12
    1bac:	08 95       	ret

00001bae <updateSliderPosition>:
    1bae:	cf 93       	push	r28
    1bb0:	df 93       	push	r29
    1bb2:	ec 01       	movw	r28, r24
    1bb4:	0e 94 ae 08 	call	0x115c	; 0x115c <get_slider_position>
    1bb8:	79 83       	std	Y+1, r23	; 0x01
    1bba:	8a 83       	std	Y+2, r24	; 0x02
    1bbc:	9b 83       	std	Y+3, r25	; 0x03
    1bbe:	4f e2       	ldi	r20, 0x2F	; 47
    1bc0:	46 9f       	mul	r20, r22
    1bc2:	c0 01       	movw	r24, r0
    1bc4:	11 24       	eor	r1, r1
    1bc6:	24 e6       	ldi	r18, 0x64	; 100
    1bc8:	30 e0       	ldi	r19, 0x00	; 0
    1bca:	b9 01       	movw	r22, r18
    1bcc:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
    1bd0:	68 83       	st	Y, r22
    1bd2:	89 81       	ldd	r24, Y+1	; 0x01
    1bd4:	48 9f       	mul	r20, r24
    1bd6:	c0 01       	movw	r24, r0
    1bd8:	11 24       	eor	r1, r1
    1bda:	b9 01       	movw	r22, r18
    1bdc:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
    1be0:	69 83       	std	Y+1, r22	; 0x01
    1be2:	df 91       	pop	r29
    1be4:	cf 91       	pop	r28
    1be6:	08 95       	ret

00001be8 <updateScreen>:
    1be8:	cf 92       	push	r12
    1bea:	df 92       	push	r13
    1bec:	ef 92       	push	r14
    1bee:	ff 92       	push	r15
    1bf0:	0f 93       	push	r16
    1bf2:	1f 93       	push	r17
    1bf4:	cf 93       	push	r28
    1bf6:	df 93       	push	r29
    1bf8:	cd b7       	in	r28, 0x3d	; 61
    1bfa:	de b7       	in	r29, 0x3e	; 62
    1bfc:	2a 97       	sbiw	r28, 0x0a	; 10
    1bfe:	0f b6       	in	r0, 0x3f	; 63
    1c00:	f8 94       	cli
    1c02:	de bf       	out	0x3e, r29	; 62
    1c04:	0f be       	out	0x3f, r0	; 63
    1c06:	cd bf       	out	0x3d, r28	; 61
    1c08:	09 83       	std	Y+1, r16	; 0x01
    1c0a:	1a 83       	std	Y+2, r17	; 0x02
    1c0c:	2b 83       	std	Y+3, r18	; 0x03
    1c0e:	3c 83       	std	Y+4, r19	; 0x04
    1c10:	4d 83       	std	Y+5, r20	; 0x05
    1c12:	5e 83       	std	Y+6, r21	; 0x06
    1c14:	80 e0       	ldi	r24, 0x00	; 0
    1c16:	90 e0       	ldi	r25, 0x00	; 0
    1c18:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
    1c1c:	00 e0       	ldi	r16, 0x00	; 0
    1c1e:	10 e0       	ldi	r17, 0x00	; 0
    1c20:	a8 01       	movw	r20, r16
    1c22:	4e 0d       	add	r20, r14
    1c24:	5f 1d       	adc	r21, r15
    1c26:	61 e0       	ldi	r22, 0x01	; 1
    1c28:	70 e0       	ldi	r23, 0x00	; 0
    1c2a:	80 e0       	ldi	r24, 0x00	; 0
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	0e 94 1a 0c 	call	0x1834	; 0x1834 <oled_sram_write_bit>
    1c32:	a8 01       	movw	r20, r16
    1c34:	4c 0d       	add	r20, r12
    1c36:	5d 1d       	adc	r21, r13
    1c38:	6f e7       	ldi	r22, 0x7F	; 127
    1c3a:	70 e0       	ldi	r23, 0x00	; 0
    1c3c:	80 e0       	ldi	r24, 0x00	; 0
    1c3e:	90 e0       	ldi	r25, 0x00	; 0
    1c40:	0e 94 1a 0c 	call	0x1834	; 0x1834 <oled_sram_write_bit>
    1c44:	0f 5f       	subi	r16, 0xFF	; 255
    1c46:	1f 4f       	sbci	r17, 0xFF	; 255
    1c48:	00 31       	cpi	r16, 0x10	; 16
    1c4a:	11 05       	cpc	r17, r1
    1c4c:	49 f7       	brne	.-46     	; 0x1c20 <updateScreen+0x38>
    1c4e:	00 e0       	ldi	r16, 0x00	; 0
    1c50:	10 e0       	ldi	r17, 0x00	; 0
    1c52:	20 e0       	ldi	r18, 0x00	; 0
    1c54:	30 e0       	ldi	r19, 0x00	; 0
    1c56:	a9 01       	movw	r20, r18
    1c58:	6b 81       	ldd	r22, Y+3	; 0x03
    1c5a:	7c 81       	ldd	r23, Y+4	; 0x04
    1c5c:	8d 81       	ldd	r24, Y+5	; 0x05
    1c5e:	9e 81       	ldd	r25, Y+6	; 0x06
    1c60:	0e 94 ad 14 	call	0x295a	; 0x295a <__addsf3>
    1c64:	0e 94 7d 15 	call	0x2afa	; 0x2afa <__fixsfsi>
    1c68:	29 81       	ldd	r18, Y+1	; 0x01
    1c6a:	3a 81       	ldd	r19, Y+2	; 0x02
    1c6c:	20 0f       	add	r18, r16
    1c6e:	31 1f       	adc	r19, r17
    1c70:	ab 01       	movw	r20, r22
    1c72:	b9 01       	movw	r22, r18
    1c74:	80 e0       	ldi	r24, 0x00	; 0
    1c76:	90 e0       	ldi	r25, 0x00	; 0
    1c78:	0e 94 1a 0c 	call	0x1834	; 0x1834 <oled_sram_write_bit>
    1c7c:	20 e0       	ldi	r18, 0x00	; 0
    1c7e:	30 e0       	ldi	r19, 0x00	; 0
    1c80:	40 e8       	ldi	r20, 0x80	; 128
    1c82:	5f e3       	ldi	r21, 0x3F	; 63
    1c84:	6b 81       	ldd	r22, Y+3	; 0x03
    1c86:	7c 81       	ldd	r23, Y+4	; 0x04
    1c88:	8d 81       	ldd	r24, Y+5	; 0x05
    1c8a:	9e 81       	ldd	r25, Y+6	; 0x06
    1c8c:	0e 94 ad 14 	call	0x295a	; 0x295a <__addsf3>
    1c90:	0e 94 7d 15 	call	0x2afa	; 0x2afa <__fixsfsi>
    1c94:	29 81       	ldd	r18, Y+1	; 0x01
    1c96:	3a 81       	ldd	r19, Y+2	; 0x02
    1c98:	20 0f       	add	r18, r16
    1c9a:	31 1f       	adc	r19, r17
    1c9c:	ab 01       	movw	r20, r22
    1c9e:	b9 01       	movw	r22, r18
    1ca0:	80 e0       	ldi	r24, 0x00	; 0
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	0e 94 1a 0c 	call	0x1834	; 0x1834 <oled_sram_write_bit>
    1ca8:	0f 5f       	subi	r16, 0xFF	; 255
    1caa:	1f 4f       	sbci	r17, 0xFF	; 255
    1cac:	02 30       	cpi	r16, 0x02	; 2
    1cae:	11 05       	cpc	r17, r1
    1cb0:	81 f6       	brne	.-96     	; 0x1c52 <updateScreen+0x6a>
    1cb2:	80 e0       	ldi	r24, 0x00	; 0
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
    1cba:	2a 96       	adiw	r28, 0x0a	; 10
    1cbc:	0f b6       	in	r0, 0x3f	; 63
    1cbe:	f8 94       	cli
    1cc0:	de bf       	out	0x3e, r29	; 62
    1cc2:	0f be       	out	0x3f, r0	; 63
    1cc4:	cd bf       	out	0x3d, r28	; 61
    1cc6:	df 91       	pop	r29
    1cc8:	cf 91       	pop	r28
    1cca:	1f 91       	pop	r17
    1ccc:	0f 91       	pop	r16
    1cce:	ff 90       	pop	r15
    1cd0:	ef 90       	pop	r14
    1cd2:	df 90       	pop	r13
    1cd4:	cf 90       	pop	r12
    1cd6:	08 95       	ret

00001cd8 <playRound>:
    1cd8:	af 92       	push	r10
    1cda:	bf 92       	push	r11
    1cdc:	cf 92       	push	r12
    1cde:	df 92       	push	r13
    1ce0:	ef 92       	push	r14
    1ce2:	ff 92       	push	r15
    1ce4:	0f 93       	push	r16
    1ce6:	1f 93       	push	r17
    1ce8:	cf 93       	push	r28
    1cea:	df 93       	push	r29
    1cec:	cd b7       	in	r28, 0x3d	; 61
    1cee:	de b7       	in	r29, 0x3e	; 62
    1cf0:	2e 97       	sbiw	r28, 0x0e	; 14
    1cf2:	0f b6       	in	r0, 0x3f	; 63
    1cf4:	f8 94       	cli
    1cf6:	de bf       	out	0x3e, r29	; 62
    1cf8:	0f be       	out	0x3f, r0	; 63
    1cfa:	cd bf       	out	0x3d, r28	; 61
    1cfc:	ce 01       	movw	r24, r28
    1cfe:	01 96       	adiw	r24, 0x01	; 1
    1d00:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <ballInit>
    1d04:	aa 24       	eor	r10, r10
    1d06:	a3 94       	inc	r10
    1d08:	b1 2c       	mov	r11, r1
    1d0a:	ce 01       	movw	r24, r28
    1d0c:	0b 96       	adiw	r24, 0x0b	; 11
    1d0e:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <updateSliderPosition>
    1d12:	09 81       	ldd	r16, Y+1	; 0x01
    1d14:	1a 81       	ldd	r17, Y+2	; 0x02
    1d16:	0e 37       	cpi	r16, 0x7E	; 126
    1d18:	11 05       	cpc	r17, r1
    1d1a:	94 f0       	brlt	.+36     	; 0x1d40 <playRound+0x68>
    1d1c:	ec 84       	ldd	r14, Y+12	; 0x0c
    1d1e:	f1 2c       	mov	r15, r1
    1d20:	b7 01       	movw	r22, r14
    1d22:	ce 01       	movw	r24, r28
    1d24:	01 96       	adiw	r24, 0x01	; 1
    1d26:	0e 94 b0 0c 	call	0x1960	; 0x1960 <racketHit>
    1d2a:	8c 01       	movw	r16, r24
    1d2c:	00 97       	sbiw	r24, 0x00	; 0
    1d2e:	a9 f1       	breq	.+106    	; 0x1d9a <playRound+0xc2>
    1d30:	1a 86       	std	Y+10, r1	; 0x0a
    1d32:	19 86       	std	Y+9, r1	; 0x09
    1d34:	b7 01       	movw	r22, r14
    1d36:	ce 01       	movw	r24, r28
    1d38:	01 96       	adiw	r24, 0x01	; 1
    1d3a:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <updateBallAngle>
    1d3e:	13 c0       	rjmp	.+38     	; 0x1d66 <playRound+0x8e>
    1d40:	01 30       	cpi	r16, 0x01	; 1
    1d42:	11 05       	cpc	r17, r1
    1d44:	81 f4       	brne	.+32     	; 0x1d66 <playRound+0x8e>
    1d46:	eb 84       	ldd	r14, Y+11	; 0x0b
    1d48:	f1 2c       	mov	r15, r1
    1d4a:	b7 01       	movw	r22, r14
    1d4c:	ce 01       	movw	r24, r28
    1d4e:	01 96       	adiw	r24, 0x01	; 1
    1d50:	0e 94 b0 0c 	call	0x1960	; 0x1960 <racketHit>
    1d54:	89 2b       	or	r24, r25
    1d56:	09 f1       	breq	.+66     	; 0x1d9a <playRound+0xc2>
    1d58:	ba 86       	std	Y+10, r11	; 0x0a
    1d5a:	a9 86       	std	Y+9, r10	; 0x09
    1d5c:	b7 01       	movw	r22, r14
    1d5e:	ce 01       	movw	r24, r28
    1d60:	01 96       	adiw	r24, 0x01	; 1
    1d62:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <updateBallAngle>
    1d66:	ce 01       	movw	r24, r28
    1d68:	01 96       	adiw	r24, 0x01	; 1
    1d6a:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <updateBallPosition>
    1d6e:	cc 84       	ldd	r12, Y+12	; 0x0c
    1d70:	d1 2c       	mov	r13, r1
    1d72:	eb 84       	ldd	r14, Y+11	; 0x0b
    1d74:	f1 2c       	mov	r15, r1
    1d76:	09 81       	ldd	r16, Y+1	; 0x01
    1d78:	1a 81       	ldd	r17, Y+2	; 0x02
    1d7a:	2b 81       	ldd	r18, Y+3	; 0x03
    1d7c:	3c 81       	ldd	r19, Y+4	; 0x04
    1d7e:	4d 81       	ldd	r20, Y+5	; 0x05
    1d80:	5e 81       	ldd	r21, Y+6	; 0x06
    1d82:	6f 81       	ldd	r22, Y+7	; 0x07
    1d84:	78 85       	ldd	r23, Y+8	; 0x08
    1d86:	89 85       	ldd	r24, Y+9	; 0x09
    1d88:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d8a:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <updateScreen>
    1d8e:	89 e9       	ldi	r24, 0x99	; 153
    1d90:	99 e0       	ldi	r25, 0x09	; 9
    1d92:	01 97       	sbiw	r24, 0x01	; 1
    1d94:	f1 f7       	brne	.-4      	; 0x1d92 <playRound+0xba>
    1d96:	00 c0       	rjmp	.+0      	; 0x1d98 <playRound+0xc0>
    1d98:	b8 cf       	rjmp	.-144    	; 0x1d0a <playRound+0x32>
    1d9a:	c8 01       	movw	r24, r16
    1d9c:	2e 96       	adiw	r28, 0x0e	; 14
    1d9e:	0f b6       	in	r0, 0x3f	; 63
    1da0:	f8 94       	cli
    1da2:	de bf       	out	0x3e, r29	; 62
    1da4:	0f be       	out	0x3f, r0	; 63
    1da6:	cd bf       	out	0x3d, r28	; 61
    1da8:	df 91       	pop	r29
    1daa:	cf 91       	pop	r28
    1dac:	1f 91       	pop	r17
    1dae:	0f 91       	pop	r16
    1db0:	ff 90       	pop	r15
    1db2:	ef 90       	pop	r14
    1db4:	df 90       	pop	r13
    1db6:	cf 90       	pop	r12
    1db8:	bf 90       	pop	r11
    1dba:	af 90       	pop	r10
    1dbc:	08 95       	ret

00001dbe <printScore>:
    1dbe:	0f 93       	push	r16
    1dc0:	1f 93       	push	r17
    1dc2:	cf 93       	push	r28
    1dc4:	df 93       	push	r29
    1dc6:	00 d0       	rcall	.+0      	; 0x1dc8 <printScore+0xa>
    1dc8:	1f 92       	push	r1
    1dca:	cd b7       	in	r28, 0x3d	; 61
    1dcc:	de b7       	in	r29, 0x3e	; 62
    1dce:	08 2f       	mov	r16, r24
    1dd0:	16 2f       	mov	r17, r22
    1dd2:	80 e0       	ldi	r24, 0x00	; 0
    1dd4:	90 e0       	ldi	r25, 0x00	; 0
    1dd6:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
    1dda:	00 5d       	subi	r16, 0xD0	; 208
    1ddc:	09 83       	std	Y+1, r16	; 0x01
    1dde:	8d e2       	ldi	r24, 0x2D	; 45
    1de0:	8a 83       	std	Y+2, r24	; 0x02
    1de2:	10 5d       	subi	r17, 0xD0	; 208
    1de4:	1b 83       	std	Y+3, r17	; 0x03
    1de6:	28 e3       	ldi	r18, 0x38	; 56
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	42 e0       	ldi	r20, 0x02	; 2
    1dec:	50 e0       	ldi	r21, 0x00	; 0
    1dee:	be 01       	movw	r22, r28
    1df0:	6f 5f       	subi	r22, 0xFF	; 255
    1df2:	7f 4f       	sbci	r23, 0xFF	; 255
    1df4:	80 e0       	ldi	r24, 0x00	; 0
    1df6:	90 e0       	ldi	r25, 0x00	; 0
    1df8:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
    1dfc:	20 e4       	ldi	r18, 0x40	; 64
    1dfe:	30 e0       	ldi	r19, 0x00	; 0
    1e00:	42 e0       	ldi	r20, 0x02	; 2
    1e02:	50 e0       	ldi	r21, 0x00	; 0
    1e04:	be 01       	movw	r22, r28
    1e06:	6e 5f       	subi	r22, 0xFE	; 254
    1e08:	7f 4f       	sbci	r23, 0xFF	; 255
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	90 e0       	ldi	r25, 0x00	; 0
    1e0e:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
    1e12:	28 e4       	ldi	r18, 0x48	; 72
    1e14:	30 e0       	ldi	r19, 0x00	; 0
    1e16:	42 e0       	ldi	r20, 0x02	; 2
    1e18:	50 e0       	ldi	r21, 0x00	; 0
    1e1a:	be 01       	movw	r22, r28
    1e1c:	6d 5f       	subi	r22, 0xFD	; 253
    1e1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e20:	80 e0       	ldi	r24, 0x00	; 0
    1e22:	90 e0       	ldi	r25, 0x00	; 0
    1e24:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
    1e28:	80 e0       	ldi	r24, 0x00	; 0
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
    1e30:	0f 90       	pop	r0
    1e32:	0f 90       	pop	r0
    1e34:	0f 90       	pop	r0
    1e36:	df 91       	pop	r29
    1e38:	cf 91       	pop	r28
    1e3a:	1f 91       	pop	r17
    1e3c:	0f 91       	pop	r16
    1e3e:	08 95       	ret

00001e40 <printEndScreen>:
    1e40:	0f 93       	push	r16
    1e42:	1f 93       	push	r17
    1e44:	cf 93       	push	r28
    1e46:	df 93       	push	r29
    1e48:	8c 01       	movw	r16, r24
    1e4a:	80 e0       	ldi	r24, 0x00	; 0
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
    1e52:	c0 e0       	ldi	r28, 0x00	; 0
    1e54:	d0 e0       	ldi	r29, 0x00	; 0
    1e56:	c0 ff       	sbrs	r28, 0
    1e58:	11 c0       	rjmp	.+34     	; 0x1e7c <printEndScreen+0x3c>
    1e5a:	42 e0       	ldi	r20, 0x02	; 2
    1e5c:	50 e0       	ldi	r21, 0x00	; 0
    1e5e:	b8 01       	movw	r22, r16
    1e60:	80 e0       	ldi	r24, 0x00	; 0
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
    1e68:	8f ef       	ldi	r24, 0xFF	; 255
    1e6a:	9f e7       	ldi	r25, 0x7F	; 127
    1e6c:	24 e0       	ldi	r18, 0x04	; 4
    1e6e:	81 50       	subi	r24, 0x01	; 1
    1e70:	90 40       	sbci	r25, 0x00	; 0
    1e72:	20 40       	sbci	r18, 0x00	; 0
    1e74:	e1 f7       	brne	.-8      	; 0x1e6e <printEndScreen+0x2e>
    1e76:	00 c0       	rjmp	.+0      	; 0x1e78 <printEndScreen+0x38>
    1e78:	00 00       	nop
    1e7a:	09 c0       	rjmp	.+18     	; 0x1e8e <printEndScreen+0x4e>
    1e7c:	8f ef       	ldi	r24, 0xFF	; 255
    1e7e:	9f e7       	ldi	r25, 0x7F	; 127
    1e80:	24 e0       	ldi	r18, 0x04	; 4
    1e82:	81 50       	subi	r24, 0x01	; 1
    1e84:	90 40       	sbci	r25, 0x00	; 0
    1e86:	20 40       	sbci	r18, 0x00	; 0
    1e88:	e1 f7       	brne	.-8      	; 0x1e82 <printEndScreen+0x42>
    1e8a:	00 c0       	rjmp	.+0      	; 0x1e8c <printEndScreen+0x4c>
    1e8c:	00 00       	nop
    1e8e:	21 96       	adiw	r28, 0x01	; 1
    1e90:	ca 30       	cpi	r28, 0x0A	; 10
    1e92:	d1 05       	cpc	r29, r1
    1e94:	01 f7       	brne	.-64     	; 0x1e56 <printEndScreen+0x16>
    1e96:	80 e0       	ldi	r24, 0x00	; 0
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
    1e9e:	df 91       	pop	r29
    1ea0:	cf 91       	pop	r28
    1ea2:	1f 91       	pop	r17
    1ea4:	0f 91       	pop	r16
    1ea6:	08 95       	ret

00001ea8 <playPong>:
    1ea8:	80 e0       	ldi	r24, 0x00	; 0
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
    1eb0:	00 e0       	ldi	r16, 0x00	; 0
    1eb2:	10 e0       	ldi	r17, 0x00	; 0
    1eb4:	c0 e0       	ldi	r28, 0x00	; 0
    1eb6:	d0 e0       	ldi	r29, 0x00	; 0
    1eb8:	b8 01       	movw	r22, r16
    1eba:	ce 01       	movw	r24, r28
    1ebc:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <printScore>
    1ec0:	2f ef       	ldi	r18, 0xFF	; 255
    1ec2:	8f ef       	ldi	r24, 0xFF	; 255
    1ec4:	9d e1       	ldi	r25, 0x1D	; 29
    1ec6:	21 50       	subi	r18, 0x01	; 1
    1ec8:	80 40       	sbci	r24, 0x00	; 0
    1eca:	90 40       	sbci	r25, 0x00	; 0
    1ecc:	e1 f7       	brne	.-8      	; 0x1ec6 <playPong+0x1e>
    1ece:	00 c0       	rjmp	.+0      	; 0x1ed0 <playPong+0x28>
    1ed0:	00 00       	nop
    1ed2:	0e 94 6c 0e 	call	0x1cd8	; 0x1cd8 <playRound>
    1ed6:	89 2b       	or	r24, r25
    1ed8:	11 f4       	brne	.+4      	; 0x1ede <playPong+0x36>
    1eda:	21 96       	adiw	r28, 0x01	; 1
    1edc:	02 c0       	rjmp	.+4      	; 0x1ee2 <playPong+0x3a>
    1ede:	0f 5f       	subi	r16, 0xFF	; 255
    1ee0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ee2:	c5 30       	cpi	r28, 0x05	; 5
    1ee4:	d1 05       	cpc	r29, r1
    1ee6:	29 f4       	brne	.+10     	; 0x1ef2 <playPong+0x4a>
    1ee8:	8c e1       	ldi	r24, 0x1C	; 28
    1eea:	92 e0       	ldi	r25, 0x02	; 2
    1eec:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <printEndScreen>
    1ef0:	e3 cf       	rjmp	.-58     	; 0x1eb8 <playPong+0x10>
    1ef2:	05 30       	cpi	r16, 0x05	; 5
    1ef4:	11 05       	cpc	r17, r1
    1ef6:	01 f7       	brne	.-64     	; 0x1eb8 <playPong+0x10>
    1ef8:	8e e2       	ldi	r24, 0x2E	; 46
    1efa:	92 e0       	ldi	r25, 0x02	; 2
    1efc:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <printEndScreen>
    1f00:	db cf       	rjmp	.-74     	; 0x1eb8 <playPong+0x10>

00001f02 <detectCollision>:
    1f02:	fc 01       	movw	r30, r24
    1f04:	00 97       	sbiw	r24, 0x00	; 0
    1f06:	81 f0       	breq	.+32     	; 0x1f28 <detectCollision+0x26>
    1f08:	84 81       	ldd	r24, Z+4	; 0x04
    1f0a:	95 81       	ldd	r25, Z+5	; 0x05
    1f0c:	86 17       	cp	r24, r22
    1f0e:	97 07       	cpc	r25, r23
    1f10:	29 f4       	brne	.+10     	; 0x1f1c <detectCollision+0x1a>
    1f12:	86 81       	ldd	r24, Z+6	; 0x06
    1f14:	97 81       	ldd	r25, Z+7	; 0x07
    1f16:	84 17       	cp	r24, r20
    1f18:	95 07       	cpc	r25, r21
    1f1a:	49 f0       	breq	.+18     	; 0x1f2e <detectCollision+0x2c>
    1f1c:	01 90       	ld	r0, Z+
    1f1e:	f0 81       	ld	r31, Z
    1f20:	e0 2d       	mov	r30, r0
    1f22:	30 97       	sbiw	r30, 0x00	; 0
    1f24:	89 f7       	brne	.-30     	; 0x1f08 <detectCollision+0x6>
    1f26:	06 c0       	rjmp	.+12     	; 0x1f34 <detectCollision+0x32>
    1f28:	80 e0       	ldi	r24, 0x00	; 0
    1f2a:	90 e0       	ldi	r25, 0x00	; 0
    1f2c:	08 95       	ret
    1f2e:	81 e0       	ldi	r24, 0x01	; 1
    1f30:	90 e0       	ldi	r25, 0x00	; 0
    1f32:	08 95       	ret
    1f34:	80 e0       	ldi	r24, 0x00	; 0
    1f36:	90 e0       	ldi	r25, 0x00	; 0
    1f38:	08 95       	ret

00001f3a <placeFood>:
    1f3a:	0f 93       	push	r16
    1f3c:	1f 93       	push	r17
    1f3e:	cf 93       	push	r28
    1f40:	df 93       	push	r29
    1f42:	ec 01       	movw	r28, r24
    1f44:	8b 01       	movw	r16, r22
    1f46:	0e 94 a5 18 	call	0x314a	; 0x314a <rand>
    1f4a:	8f 73       	andi	r24, 0x3F	; 63
    1f4c:	90 78       	andi	r25, 0x80	; 128
    1f4e:	99 23       	and	r25, r25
    1f50:	24 f4       	brge	.+8      	; 0x1f5a <placeFood+0x20>
    1f52:	01 97       	sbiw	r24, 0x01	; 1
    1f54:	80 6c       	ori	r24, 0xC0	; 192
    1f56:	9f 6f       	ori	r25, 0xFF	; 255
    1f58:	01 96       	adiw	r24, 0x01	; 1
    1f5a:	99 83       	std	Y+1, r25	; 0x01
    1f5c:	88 83       	st	Y, r24
    1f5e:	0e 94 a5 18 	call	0x314a	; 0x314a <rand>
    1f62:	ac 01       	movw	r20, r24
    1f64:	4f 71       	andi	r20, 0x1F	; 31
    1f66:	50 78       	andi	r21, 0x80	; 128
    1f68:	55 23       	and	r21, r21
    1f6a:	34 f4       	brge	.+12     	; 0x1f78 <placeFood+0x3e>
    1f6c:	41 50       	subi	r20, 0x01	; 1
    1f6e:	51 09       	sbc	r21, r1
    1f70:	40 6e       	ori	r20, 0xE0	; 224
    1f72:	5f 6f       	ori	r21, 0xFF	; 255
    1f74:	4f 5f       	subi	r20, 0xFF	; 255
    1f76:	5f 4f       	sbci	r21, 0xFF	; 255
    1f78:	5b 83       	std	Y+3, r21	; 0x03
    1f7a:	4a 83       	std	Y+2, r20	; 0x02
    1f7c:	68 81       	ld	r22, Y
    1f7e:	79 81       	ldd	r23, Y+1	; 0x01
    1f80:	c8 01       	movw	r24, r16
    1f82:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <detectCollision>
    1f86:	89 2b       	or	r24, r25
    1f88:	f1 f6       	brne	.-68     	; 0x1f46 <placeFood+0xc>
    1f8a:	df 91       	pop	r29
    1f8c:	cf 91       	pop	r28
    1f8e:	1f 91       	pop	r17
    1f90:	0f 91       	pop	r16
    1f92:	08 95       	ret

00001f94 <drawBoard>:
    1f94:	cf 92       	push	r12
    1f96:	df 92       	push	r13
    1f98:	ef 92       	push	r14
    1f9a:	ff 92       	push	r15
    1f9c:	0f 93       	push	r16
    1f9e:	1f 93       	push	r17
    1fa0:	cf 93       	push	r28
    1fa2:	df 93       	push	r29
    1fa4:	8c 01       	movw	r16, r24
    1fa6:	7b 01       	movw	r14, r22
    1fa8:	80 e0       	ldi	r24, 0x00	; 0
    1faa:	90 e0       	ldi	r25, 0x00	; 0
    1fac:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
    1fb0:	01 15       	cp	r16, r1
    1fb2:	11 05       	cpc	r17, r1
    1fb4:	09 f4       	brne	.+2      	; 0x1fb8 <drawBoard+0x24>
    1fb6:	59 c0       	rjmp	.+178    	; 0x206a <drawBoard+0xd6>
    1fb8:	c1 2c       	mov	r12, r1
    1fba:	d1 2c       	mov	r13, r1
    1fbc:	2a c0       	rjmp	.+84     	; 0x2012 <drawBoard+0x7e>
    1fbe:	f8 01       	movw	r30, r16
    1fc0:	46 81       	ldd	r20, Z+6	; 0x06
    1fc2:	57 81       	ldd	r21, Z+7	; 0x07
    1fc4:	44 0f       	add	r20, r20
    1fc6:	55 1f       	adc	r21, r21
    1fc8:	64 81       	ldd	r22, Z+4	; 0x04
    1fca:	75 81       	ldd	r23, Z+5	; 0x05
    1fcc:	66 0f       	add	r22, r22
    1fce:	77 1f       	adc	r23, r23
    1fd0:	6c 0f       	add	r22, r28
    1fd2:	7d 1f       	adc	r23, r29
    1fd4:	8c 2d       	mov	r24, r12
    1fd6:	9d 2d       	mov	r25, r13
    1fd8:	0e 94 1a 0c 	call	0x1834	; 0x1834 <oled_sram_write_bit>
    1fdc:	f8 01       	movw	r30, r16
    1fde:	46 81       	ldd	r20, Z+6	; 0x06
    1fe0:	57 81       	ldd	r21, Z+7	; 0x07
    1fe2:	44 0f       	add	r20, r20
    1fe4:	55 1f       	adc	r21, r21
    1fe6:	4f 5f       	subi	r20, 0xFF	; 255
    1fe8:	5f 4f       	sbci	r21, 0xFF	; 255
    1fea:	64 81       	ldd	r22, Z+4	; 0x04
    1fec:	75 81       	ldd	r23, Z+5	; 0x05
    1fee:	66 0f       	add	r22, r22
    1ff0:	77 1f       	adc	r23, r23
    1ff2:	6c 0f       	add	r22, r28
    1ff4:	7d 1f       	adc	r23, r29
    1ff6:	8c 2d       	mov	r24, r12
    1ff8:	9d 2d       	mov	r25, r13
    1ffa:	0e 94 1a 0c 	call	0x1834	; 0x1834 <oled_sram_write_bit>
    1ffe:	21 96       	adiw	r28, 0x01	; 1
    2000:	c2 30       	cpi	r28, 0x02	; 2
    2002:	d1 05       	cpc	r29, r1
    2004:	e1 f6       	brne	.-72     	; 0x1fbe <drawBoard+0x2a>
    2006:	f8 01       	movw	r30, r16
    2008:	00 81       	ld	r16, Z
    200a:	11 81       	ldd	r17, Z+1	; 0x01
    200c:	01 15       	cp	r16, r1
    200e:	11 05       	cpc	r17, r1
    2010:	61 f1       	breq	.+88     	; 0x206a <drawBoard+0xd6>
    2012:	cc 2d       	mov	r28, r12
    2014:	dd 2d       	mov	r29, r13
    2016:	d3 cf       	rjmp	.-90     	; 0x1fbe <drawBoard+0x2a>
    2018:	f7 01       	movw	r30, r14
    201a:	42 81       	ldd	r20, Z+2	; 0x02
    201c:	53 81       	ldd	r21, Z+3	; 0x03
    201e:	44 0f       	add	r20, r20
    2020:	55 1f       	adc	r21, r21
    2022:	60 81       	ld	r22, Z
    2024:	71 81       	ldd	r23, Z+1	; 0x01
    2026:	66 0f       	add	r22, r22
    2028:	77 1f       	adc	r23, r23
    202a:	6c 0f       	add	r22, r28
    202c:	7d 1f       	adc	r23, r29
    202e:	80 e0       	ldi	r24, 0x00	; 0
    2030:	90 e0       	ldi	r25, 0x00	; 0
    2032:	0e 94 1a 0c 	call	0x1834	; 0x1834 <oled_sram_write_bit>
    2036:	f7 01       	movw	r30, r14
    2038:	42 81       	ldd	r20, Z+2	; 0x02
    203a:	53 81       	ldd	r21, Z+3	; 0x03
    203c:	44 0f       	add	r20, r20
    203e:	55 1f       	adc	r21, r21
    2040:	4f 5f       	subi	r20, 0xFF	; 255
    2042:	5f 4f       	sbci	r21, 0xFF	; 255
    2044:	60 81       	ld	r22, Z
    2046:	71 81       	ldd	r23, Z+1	; 0x01
    2048:	66 0f       	add	r22, r22
    204a:	77 1f       	adc	r23, r23
    204c:	6c 0f       	add	r22, r28
    204e:	7d 1f       	adc	r23, r29
    2050:	80 e0       	ldi	r24, 0x00	; 0
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	0e 94 1a 0c 	call	0x1834	; 0x1834 <oled_sram_write_bit>
    2058:	21 96       	adiw	r28, 0x01	; 1
    205a:	c2 30       	cpi	r28, 0x02	; 2
    205c:	d1 05       	cpc	r29, r1
    205e:	e1 f6       	brne	.-72     	; 0x2018 <drawBoard+0x84>
    2060:	80 e0       	ldi	r24, 0x00	; 0
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
    2068:	03 c0       	rjmp	.+6      	; 0x2070 <drawBoard+0xdc>
    206a:	c0 e0       	ldi	r28, 0x00	; 0
    206c:	d0 e0       	ldi	r29, 0x00	; 0
    206e:	d4 cf       	rjmp	.-88     	; 0x2018 <drawBoard+0x84>
    2070:	df 91       	pop	r29
    2072:	cf 91       	pop	r28
    2074:	1f 91       	pop	r17
    2076:	0f 91       	pop	r16
    2078:	ff 90       	pop	r15
    207a:	ef 90       	pop	r14
    207c:	df 90       	pop	r13
    207e:	cf 90       	pop	r12
    2080:	08 95       	ret

00002082 <playSnake>:
    2082:	af 92       	push	r10
    2084:	bf 92       	push	r11
    2086:	cf 92       	push	r12
    2088:	df 92       	push	r13
    208a:	ef 92       	push	r14
    208c:	ff 92       	push	r15
    208e:	0f 93       	push	r16
    2090:	1f 93       	push	r17
    2092:	cf 93       	push	r28
    2094:	df 93       	push	r29
    2096:	00 d0       	rcall	.+0      	; 0x2098 <playSnake+0x16>
    2098:	00 d0       	rcall	.+0      	; 0x209a <playSnake+0x18>
    209a:	cd b7       	in	r28, 0x3d	; 61
    209c:	de b7       	in	r29, 0x3e	; 62
    209e:	88 e0       	ldi	r24, 0x08	; 8
    20a0:	90 e0       	ldi	r25, 0x00	; 0
    20a2:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    20a6:	7c 01       	movw	r14, r24
    20a8:	80 e2       	ldi	r24, 0x20	; 32
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	d7 01       	movw	r26, r14
    20ae:	15 96       	adiw	r26, 0x05	; 5
    20b0:	9c 93       	st	X, r25
    20b2:	8e 93       	st	-X, r24
    20b4:	14 97       	sbiw	r26, 0x04	; 4
    20b6:	80 e1       	ldi	r24, 0x10	; 16
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	17 96       	adiw	r26, 0x07	; 7
    20bc:	9c 93       	st	X, r25
    20be:	8e 93       	st	-X, r24
    20c0:	16 97       	sbiw	r26, 0x06	; 6
    20c2:	11 96       	adiw	r26, 0x01	; 1
    20c4:	1c 92       	st	X, r1
    20c6:	1e 92       	st	-X, r1
    20c8:	13 96       	adiw	r26, 0x03	; 3
    20ca:	1c 92       	st	X, r1
    20cc:	1e 92       	st	-X, r1
    20ce:	12 97       	sbiw	r26, 0x02	; 2
    20d0:	67 01       	movw	r12, r14
    20d2:	68 94       	set
    20d4:	aa 24       	eor	r10, r10
    20d6:	a2 f8       	bld	r10, 2
    20d8:	b1 2c       	mov	r11, r1
    20da:	88 e0       	ldi	r24, 0x08	; 8
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    20e2:	8c 01       	movw	r16, r24
    20e4:	f6 01       	movw	r30, r12
    20e6:	84 81       	ldd	r24, Z+4	; 0x04
    20e8:	95 81       	ldd	r25, Z+5	; 0x05
    20ea:	01 96       	adiw	r24, 0x01	; 1
    20ec:	d8 01       	movw	r26, r16
    20ee:	15 96       	adiw	r26, 0x05	; 5
    20f0:	9c 93       	st	X, r25
    20f2:	8e 93       	st	-X, r24
    20f4:	14 97       	sbiw	r26, 0x04	; 4
    20f6:	86 81       	ldd	r24, Z+6	; 0x06
    20f8:	97 81       	ldd	r25, Z+7	; 0x07
    20fa:	17 96       	adiw	r26, 0x07	; 7
    20fc:	9c 93       	st	X, r25
    20fe:	8e 93       	st	-X, r24
    2100:	16 97       	sbiw	r26, 0x06	; 6
    2102:	11 96       	adiw	r26, 0x01	; 1
    2104:	dc 92       	st	X, r13
    2106:	ce 92       	st	-X, r12
    2108:	13 96       	adiw	r26, 0x03	; 3
    210a:	1c 92       	st	X, r1
    210c:	1e 92       	st	-X, r1
    210e:	12 97       	sbiw	r26, 0x02	; 2
    2110:	13 83       	std	Z+3, r17	; 0x03
    2112:	02 83       	std	Z+2, r16	; 0x02
    2114:	b1 e0       	ldi	r27, 0x01	; 1
    2116:	ab 1a       	sub	r10, r27
    2118:	b1 08       	sbc	r11, r1
    211a:	a1 14       	cp	r10, r1
    211c:	b1 04       	cpc	r11, r1
    211e:	11 f0       	breq	.+4      	; 0x2124 <playSnake+0xa2>
    2120:	68 01       	movw	r12, r16
    2122:	db cf       	rjmp	.-74     	; 0x20da <playSnake+0x58>
    2124:	b8 01       	movw	r22, r16
    2126:	ce 01       	movw	r24, r28
    2128:	01 96       	adiw	r24, 0x01	; 1
    212a:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <placeFood>
    212e:	80 e0       	ldi	r24, 0x00	; 0
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
    2136:	dd 24       	eor	r13, r13
    2138:	d3 94       	inc	r13
    213a:	97 c0       	rjmp	.+302    	; 0x226a <playSnake+0x1e8>
    213c:	0e 94 2b 09 	call	0x1256	; 0x1256 <get_joystick_position>
    2140:	c8 2e       	mov	r12, r24
    2142:	e4 e0       	ldi	r30, 0x04	; 4
    2144:	8e 17       	cp	r24, r30
    2146:	f1 f0       	breq	.+60     	; 0x2184 <playSnake+0x102>
    2148:	f3 e0       	ldi	r31, 0x03	; 3
    214a:	8f 13       	cpse	r24, r31
    214c:	04 c0       	rjmp	.+8      	; 0x2156 <playSnake+0xd4>
    214e:	22 e0       	ldi	r18, 0x02	; 2
    2150:	d2 12       	cpse	r13, r18
    2152:	10 c0       	rjmp	.+32     	; 0x2174 <playSnake+0xf2>
    2154:	b9 c0       	rjmp	.+370    	; 0x22c8 <playSnake+0x246>
    2156:	82 e0       	ldi	r24, 0x02	; 2
    2158:	c8 12       	cpse	r12, r24
    215a:	06 c0       	rjmp	.+12     	; 0x2168 <playSnake+0xe6>
    215c:	93 e0       	ldi	r25, 0x03	; 3
    215e:	d9 16       	cp	r13, r25
    2160:	09 f4       	brne	.+2      	; 0x2164 <playSnake+0xe2>
    2162:	cd c0       	rjmp	.+410    	; 0x22fe <playSnake+0x27c>
    2164:	dc 2c       	mov	r13, r12
    2166:	0e c0       	rjmp	.+28     	; 0x2184 <playSnake+0x102>
    2168:	c1 10       	cpse	r12, r1
    216a:	04 c0       	rjmp	.+8      	; 0x2174 <playSnake+0xf2>
    216c:	a1 e0       	ldi	r26, 0x01	; 1
    216e:	da 12       	cpse	r13, r26
    2170:	19 c1       	rjmp	.+562    	; 0x23a4 <playSnake+0x322>
    2172:	fc c0       	rjmp	.+504    	; 0x236c <playSnake+0x2ea>
    2174:	b1 e0       	ldi	r27, 0x01	; 1
    2176:	cb 12       	cpse	r12, r27
    2178:	04 c0       	rjmp	.+8      	; 0x2182 <playSnake+0x100>
    217a:	dd 20       	and	r13, r13
    217c:	09 f4       	brne	.+2      	; 0x2180 <playSnake+0xfe>
    217e:	da c0       	rjmp	.+436    	; 0x2334 <playSnake+0x2b2>
    2180:	2c c1       	rjmp	.+600    	; 0x23da <playSnake+0x358>
    2182:	dc 2c       	mov	r13, r12
    2184:	88 e0       	ldi	r24, 0x08	; 8
    2186:	90 e0       	ldi	r25, 0x00	; 0
    2188:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    218c:	fc 01       	movw	r30, r24
    218e:	d8 01       	movw	r26, r16
    2190:	14 96       	adiw	r26, 0x04	; 4
    2192:	8d 91       	ld	r24, X+
    2194:	9c 91       	ld	r25, X
    2196:	15 97       	sbiw	r26, 0x05	; 5
    2198:	95 83       	std	Z+5, r25	; 0x05
    219a:	84 83       	std	Z+4, r24	; 0x04
    219c:	16 96       	adiw	r26, 0x06	; 6
    219e:	8d 91       	ld	r24, X+
    21a0:	9c 91       	ld	r25, X
    21a2:	17 97       	sbiw	r26, 0x07	; 7
    21a4:	97 83       	std	Z+7, r25	; 0x07
    21a6:	86 83       	std	Z+6, r24	; 0x06
    21a8:	11 83       	std	Z+1, r17	; 0x01
    21aa:	00 83       	st	Z, r16
    21ac:	13 82       	std	Z+3, r1	; 0x03
    21ae:	12 82       	std	Z+2, r1	; 0x02
    21b0:	13 96       	adiw	r26, 0x03	; 3
    21b2:	fc 93       	st	X, r31
    21b4:	ee 93       	st	-X, r30
    21b6:	12 97       	sbiw	r26, 0x02	; 2
    21b8:	b1 e0       	ldi	r27, 0x01	; 1
    21ba:	db 16       	cp	r13, r27
    21bc:	09 f1       	breq	.+66     	; 0x2200 <playSnake+0x17e>
    21be:	db 16       	cp	r13, r27
    21c0:	a8 f0       	brcs	.+42     	; 0x21ec <playSnake+0x16a>
    21c2:	22 e0       	ldi	r18, 0x02	; 2
    21c4:	d2 16       	cp	r13, r18
    21c6:	21 f0       	breq	.+8      	; 0x21d0 <playSnake+0x14e>
    21c8:	83 e0       	ldi	r24, 0x03	; 3
    21ca:	d8 12       	cpse	r13, r24
    21cc:	25 c0       	rjmp	.+74     	; 0x2218 <playSnake+0x196>
    21ce:	07 c0       	rjmp	.+14     	; 0x21de <playSnake+0x15c>
    21d0:	86 81       	ldd	r24, Z+6	; 0x06
    21d2:	97 81       	ldd	r25, Z+7	; 0x07
    21d4:	01 97       	sbiw	r24, 0x01	; 1
    21d6:	97 83       	std	Z+7, r25	; 0x07
    21d8:	86 83       	std	Z+6, r24	; 0x06
    21da:	8f 01       	movw	r16, r30
    21dc:	1e c0       	rjmp	.+60     	; 0x221a <playSnake+0x198>
    21de:	86 81       	ldd	r24, Z+6	; 0x06
    21e0:	97 81       	ldd	r25, Z+7	; 0x07
    21e2:	01 96       	adiw	r24, 0x01	; 1
    21e4:	97 83       	std	Z+7, r25	; 0x07
    21e6:	86 83       	std	Z+6, r24	; 0x06
    21e8:	8f 01       	movw	r16, r30
    21ea:	17 c0       	rjmp	.+46     	; 0x221a <playSnake+0x198>
    21ec:	cd 2c       	mov	r12, r13
    21ee:	24 81       	ldd	r18, Z+4	; 0x04
    21f0:	35 81       	ldd	r19, Z+5	; 0x05
    21f2:	21 50       	subi	r18, 0x01	; 1
    21f4:	31 09       	sbc	r19, r1
    21f6:	35 83       	std	Z+5, r19	; 0x05
    21f8:	24 83       	std	Z+4, r18	; 0x04
    21fa:	8f 01       	movw	r16, r30
    21fc:	dc 2c       	mov	r13, r12
    21fe:	0d c0       	rjmp	.+26     	; 0x221a <playSnake+0x198>
    2200:	8f 01       	movw	r16, r30
    2202:	d8 01       	movw	r26, r16
    2204:	14 96       	adiw	r26, 0x04	; 4
    2206:	8d 91       	ld	r24, X+
    2208:	9c 91       	ld	r25, X
    220a:	15 97       	sbiw	r26, 0x05	; 5
    220c:	01 96       	adiw	r24, 0x01	; 1
    220e:	15 96       	adiw	r26, 0x05	; 5
    2210:	9c 93       	st	X, r25
    2212:	8e 93       	st	-X, r24
    2214:	14 97       	sbiw	r26, 0x04	; 4
    2216:	01 c0       	rjmp	.+2      	; 0x221a <playSnake+0x198>
    2218:	8f 01       	movw	r16, r30
    221a:	4b 81       	ldd	r20, Y+3	; 0x03
    221c:	5c 81       	ldd	r21, Y+4	; 0x04
    221e:	69 81       	ldd	r22, Y+1	; 0x01
    2220:	7a 81       	ldd	r23, Y+2	; 0x02
    2222:	c8 01       	movw	r24, r16
    2224:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <detectCollision>
    2228:	89 2b       	or	r24, r25
    222a:	31 f0       	breq	.+12     	; 0x2238 <playSnake+0x1b6>
    222c:	b8 01       	movw	r22, r16
    222e:	ce 01       	movw	r24, r28
    2230:	01 96       	adiw	r24, 0x01	; 1
    2232:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <placeFood>
    2236:	0a c0       	rjmp	.+20     	; 0x224c <playSnake+0x1ca>
    2238:	f7 01       	movw	r30, r14
    223a:	a2 80       	ldd	r10, Z+2	; 0x02
    223c:	b3 80       	ldd	r11, Z+3	; 0x03
    223e:	d5 01       	movw	r26, r10
    2240:	1d 92       	st	X+, r1
    2242:	1c 92       	st	X, r1
    2244:	c7 01       	movw	r24, r14
    2246:	0e 94 c8 17 	call	0x2f90	; 0x2f90 <free>
    224a:	75 01       	movw	r14, r10
    224c:	be 01       	movw	r22, r28
    224e:	6f 5f       	subi	r22, 0xFF	; 255
    2250:	7f 4f       	sbci	r23, 0xFF	; 255
    2252:	c8 01       	movw	r24, r16
    2254:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <drawBoard>
    2258:	bf ef       	ldi	r27, 0xFF	; 255
    225a:	ef e7       	ldi	r30, 0x7F	; 127
    225c:	f1 e0       	ldi	r31, 0x01	; 1
    225e:	b1 50       	subi	r27, 0x01	; 1
    2260:	e0 40       	sbci	r30, 0x00	; 0
    2262:	f0 40       	sbci	r31, 0x00	; 0
    2264:	e1 f7       	brne	.-8      	; 0x225e <playSnake+0x1dc>
    2266:	00 c0       	rjmp	.+0      	; 0x2268 <playSnake+0x1e6>
    2268:	00 c0       	rjmp	.+0      	; 0x226a <playSnake+0x1e8>
    226a:	d8 01       	movw	r26, r16
    226c:	16 96       	adiw	r26, 0x06	; 6
    226e:	4d 91       	ld	r20, X+
    2270:	5c 91       	ld	r21, X
    2272:	17 97       	sbiw	r26, 0x07	; 7
    2274:	14 96       	adiw	r26, 0x04	; 4
    2276:	6d 91       	ld	r22, X+
    2278:	7c 91       	ld	r23, X
    227a:	15 97       	sbiw	r26, 0x05	; 5
    227c:	8d 91       	ld	r24, X+
    227e:	9c 91       	ld	r25, X
    2280:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <detectCollision>
    2284:	89 2b       	or	r24, r25
    2286:	09 f4       	brne	.+2      	; 0x228a <playSnake+0x208>
    2288:	59 cf       	rjmp	.-334    	; 0x213c <playSnake+0xba>
    228a:	0e 15       	cp	r16, r14
    228c:	1f 05       	cpc	r17, r15
    228e:	81 f0       	breq	.+32     	; 0x22b0 <playSnake+0x22e>
    2290:	a1 2c       	mov	r10, r1
    2292:	b1 2c       	mov	r11, r1
    2294:	f8 01       	movw	r30, r16
    2296:	c0 80       	ld	r12, Z
    2298:	d1 80       	ldd	r13, Z+1	; 0x01
    229a:	c8 01       	movw	r24, r16
    229c:	0e 94 c8 17 	call	0x2f90	; 0x2f90 <free>
    22a0:	ff ef       	ldi	r31, 0xFF	; 255
    22a2:	af 1a       	sub	r10, r31
    22a4:	bf 0a       	sbc	r11, r31
    22a6:	ec 14       	cp	r14, r12
    22a8:	fd 04       	cpc	r15, r13
    22aa:	29 f0       	breq	.+10     	; 0x22b6 <playSnake+0x234>
    22ac:	86 01       	movw	r16, r12
    22ae:	f2 cf       	rjmp	.-28     	; 0x2294 <playSnake+0x212>
    22b0:	68 01       	movw	r12, r16
    22b2:	a1 2c       	mov	r10, r1
    22b4:	b1 2c       	mov	r11, r1
    22b6:	c6 01       	movw	r24, r12
    22b8:	0e 94 c8 17 	call	0x2f90	; 0x2f90 <free>
    22bc:	6c ef       	ldi	r22, 0xFC	; 252
    22be:	6a 0d       	add	r22, r10
    22c0:	80 e4       	ldi	r24, 0x40	; 64
    22c2:	0e 94 8d 06 	call	0xd1a	; 0xd1a <highscore_prompt>
    22c6:	a6 c0       	rjmp	.+332    	; 0x2414 <playSnake+0x392>
    22c8:	88 e0       	ldi	r24, 0x08	; 8
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    22d0:	fc 01       	movw	r30, r24
    22d2:	d8 01       	movw	r26, r16
    22d4:	14 96       	adiw	r26, 0x04	; 4
    22d6:	8d 91       	ld	r24, X+
    22d8:	9c 91       	ld	r25, X
    22da:	15 97       	sbiw	r26, 0x05	; 5
    22dc:	95 83       	std	Z+5, r25	; 0x05
    22de:	84 83       	std	Z+4, r24	; 0x04
    22e0:	16 96       	adiw	r26, 0x06	; 6
    22e2:	8d 91       	ld	r24, X+
    22e4:	9c 91       	ld	r25, X
    22e6:	17 97       	sbiw	r26, 0x07	; 7
    22e8:	97 83       	std	Z+7, r25	; 0x07
    22ea:	86 83       	std	Z+6, r24	; 0x06
    22ec:	11 83       	std	Z+1, r17	; 0x01
    22ee:	00 83       	st	Z, r16
    22f0:	13 82       	std	Z+3, r1	; 0x03
    22f2:	12 82       	std	Z+2, r1	; 0x02
    22f4:	13 96       	adiw	r26, 0x03	; 3
    22f6:	fc 93       	st	X, r31
    22f8:	ee 93       	st	-X, r30
    22fa:	12 97       	sbiw	r26, 0x02	; 2
    22fc:	69 cf       	rjmp	.-302    	; 0x21d0 <playSnake+0x14e>
    22fe:	88 e0       	ldi	r24, 0x08	; 8
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    2306:	fc 01       	movw	r30, r24
    2308:	d8 01       	movw	r26, r16
    230a:	14 96       	adiw	r26, 0x04	; 4
    230c:	8d 91       	ld	r24, X+
    230e:	9c 91       	ld	r25, X
    2310:	15 97       	sbiw	r26, 0x05	; 5
    2312:	95 83       	std	Z+5, r25	; 0x05
    2314:	84 83       	std	Z+4, r24	; 0x04
    2316:	16 96       	adiw	r26, 0x06	; 6
    2318:	8d 91       	ld	r24, X+
    231a:	9c 91       	ld	r25, X
    231c:	17 97       	sbiw	r26, 0x07	; 7
    231e:	97 83       	std	Z+7, r25	; 0x07
    2320:	86 83       	std	Z+6, r24	; 0x06
    2322:	11 83       	std	Z+1, r17	; 0x01
    2324:	00 83       	st	Z, r16
    2326:	13 82       	std	Z+3, r1	; 0x03
    2328:	12 82       	std	Z+2, r1	; 0x02
    232a:	13 96       	adiw	r26, 0x03	; 3
    232c:	fc 93       	st	X, r31
    232e:	ee 93       	st	-X, r30
    2330:	12 97       	sbiw	r26, 0x02	; 2
    2332:	55 cf       	rjmp	.-342    	; 0x21de <playSnake+0x15c>
    2334:	88 e0       	ldi	r24, 0x08	; 8
    2336:	90 e0       	ldi	r25, 0x00	; 0
    2338:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    233c:	fc 01       	movw	r30, r24
    233e:	d8 01       	movw	r26, r16
    2340:	14 96       	adiw	r26, 0x04	; 4
    2342:	8d 91       	ld	r24, X+
    2344:	9c 91       	ld	r25, X
    2346:	15 97       	sbiw	r26, 0x05	; 5
    2348:	95 83       	std	Z+5, r25	; 0x05
    234a:	84 83       	std	Z+4, r24	; 0x04
    234c:	16 96       	adiw	r26, 0x06	; 6
    234e:	8d 91       	ld	r24, X+
    2350:	9c 91       	ld	r25, X
    2352:	17 97       	sbiw	r26, 0x07	; 7
    2354:	97 83       	std	Z+7, r25	; 0x07
    2356:	86 83       	std	Z+6, r24	; 0x06
    2358:	11 83       	std	Z+1, r17	; 0x01
    235a:	00 83       	st	Z, r16
    235c:	13 82       	std	Z+3, r1	; 0x03
    235e:	12 82       	std	Z+2, r1	; 0x02
    2360:	13 96       	adiw	r26, 0x03	; 3
    2362:	fc 93       	st	X, r31
    2364:	ee 93       	st	-X, r30
    2366:	12 97       	sbiw	r26, 0x02	; 2
    2368:	cd 2c       	mov	r12, r13
    236a:	41 cf       	rjmp	.-382    	; 0x21ee <playSnake+0x16c>
    236c:	88 e0       	ldi	r24, 0x08	; 8
    236e:	90 e0       	ldi	r25, 0x00	; 0
    2370:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    2374:	fc 01       	movw	r30, r24
    2376:	d8 01       	movw	r26, r16
    2378:	14 96       	adiw	r26, 0x04	; 4
    237a:	8d 91       	ld	r24, X+
    237c:	9c 91       	ld	r25, X
    237e:	15 97       	sbiw	r26, 0x05	; 5
    2380:	95 83       	std	Z+5, r25	; 0x05
    2382:	84 83       	std	Z+4, r24	; 0x04
    2384:	16 96       	adiw	r26, 0x06	; 6
    2386:	8d 91       	ld	r24, X+
    2388:	9c 91       	ld	r25, X
    238a:	17 97       	sbiw	r26, 0x07	; 7
    238c:	97 83       	std	Z+7, r25	; 0x07
    238e:	86 83       	std	Z+6, r24	; 0x06
    2390:	11 83       	std	Z+1, r17	; 0x01
    2392:	00 83       	st	Z, r16
    2394:	13 82       	std	Z+3, r1	; 0x03
    2396:	12 82       	std	Z+2, r1	; 0x02
    2398:	13 96       	adiw	r26, 0x03	; 3
    239a:	fc 93       	st	X, r31
    239c:	ee 93       	st	-X, r30
    239e:	12 97       	sbiw	r26, 0x02	; 2
    23a0:	8f 01       	movw	r16, r30
    23a2:	2f cf       	rjmp	.-418    	; 0x2202 <playSnake+0x180>
    23a4:	88 e0       	ldi	r24, 0x08	; 8
    23a6:	90 e0       	ldi	r25, 0x00	; 0
    23a8:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    23ac:	fc 01       	movw	r30, r24
    23ae:	d8 01       	movw	r26, r16
    23b0:	14 96       	adiw	r26, 0x04	; 4
    23b2:	2d 91       	ld	r18, X+
    23b4:	3c 91       	ld	r19, X
    23b6:	15 97       	sbiw	r26, 0x05	; 5
    23b8:	35 83       	std	Z+5, r19	; 0x05
    23ba:	24 83       	std	Z+4, r18	; 0x04
    23bc:	16 96       	adiw	r26, 0x06	; 6
    23be:	2d 91       	ld	r18, X+
    23c0:	3c 91       	ld	r19, X
    23c2:	17 97       	sbiw	r26, 0x07	; 7
    23c4:	37 83       	std	Z+7, r19	; 0x07
    23c6:	26 83       	std	Z+6, r18	; 0x06
    23c8:	11 83       	std	Z+1, r17	; 0x01
    23ca:	00 83       	st	Z, r16
    23cc:	13 82       	std	Z+3, r1	; 0x03
    23ce:	12 82       	std	Z+2, r1	; 0x02
    23d0:	13 96       	adiw	r26, 0x03	; 3
    23d2:	9c 93       	st	X, r25
    23d4:	8e 93       	st	-X, r24
    23d6:	12 97       	sbiw	r26, 0x02	; 2
    23d8:	0a cf       	rjmp	.-492    	; 0x21ee <playSnake+0x16c>
    23da:	88 e0       	ldi	r24, 0x08	; 8
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    23e2:	fc 01       	movw	r30, r24
    23e4:	d8 01       	movw	r26, r16
    23e6:	14 96       	adiw	r26, 0x04	; 4
    23e8:	8d 91       	ld	r24, X+
    23ea:	9c 91       	ld	r25, X
    23ec:	15 97       	sbiw	r26, 0x05	; 5
    23ee:	95 83       	std	Z+5, r25	; 0x05
    23f0:	84 83       	std	Z+4, r24	; 0x04
    23f2:	16 96       	adiw	r26, 0x06	; 6
    23f4:	8d 91       	ld	r24, X+
    23f6:	9c 91       	ld	r25, X
    23f8:	17 97       	sbiw	r26, 0x07	; 7
    23fa:	97 83       	std	Z+7, r25	; 0x07
    23fc:	86 83       	std	Z+6, r24	; 0x06
    23fe:	11 83       	std	Z+1, r17	; 0x01
    2400:	00 83       	st	Z, r16
    2402:	13 82       	std	Z+3, r1	; 0x03
    2404:	12 82       	std	Z+2, r1	; 0x02
    2406:	13 96       	adiw	r26, 0x03	; 3
    2408:	fc 93       	st	X, r31
    240a:	ee 93       	st	-X, r30
    240c:	12 97       	sbiw	r26, 0x02	; 2
    240e:	8f 01       	movw	r16, r30
    2410:	dc 2c       	mov	r13, r12
    2412:	f7 ce       	rjmp	.-530    	; 0x2202 <playSnake+0x180>
    2414:	0f 90       	pop	r0
    2416:	0f 90       	pop	r0
    2418:	0f 90       	pop	r0
    241a:	0f 90       	pop	r0
    241c:	df 91       	pop	r29
    241e:	cf 91       	pop	r28
    2420:	1f 91       	pop	r17
    2422:	0f 91       	pop	r16
    2424:	ff 90       	pop	r15
    2426:	ef 90       	pop	r14
    2428:	df 90       	pop	r13
    242a:	cf 90       	pop	r12
    242c:	bf 90       	pop	r11
    242e:	af 90       	pop	r10
    2430:	08 95       	ret

00002432 <make_screen>:
	
	
	
}

void make_screen(menu* m){
    2432:	2f 92       	push	r2
    2434:	3f 92       	push	r3
    2436:	4f 92       	push	r4
    2438:	5f 92       	push	r5
    243a:	6f 92       	push	r6
    243c:	7f 92       	push	r7
    243e:	8f 92       	push	r8
    2440:	9f 92       	push	r9
    2442:	af 92       	push	r10
    2444:	bf 92       	push	r11
    2446:	cf 92       	push	r12
    2448:	df 92       	push	r13
    244a:	ef 92       	push	r14
    244c:	ff 92       	push	r15
    244e:	0f 93       	push	r16
    2450:	1f 93       	push	r17
    2452:	cf 93       	push	r28
    2454:	df 93       	push	r29
    2456:	00 d0       	rcall	.+0      	; 0x2458 <make_screen+0x26>
    2458:	1f 92       	push	r1
    245a:	cd b7       	in	r28, 0x3d	; 61
    245c:	de b7       	in	r29, 0x3e	; 62
    245e:	7c 01       	movw	r14, r24
	int startAddress = 0;
	
	oled_sram_clear_screen(startAddress);
    2460:	80 e0       	ldi	r24, 0x00	; 0
    2462:	90 e0       	ldi	r25, 0x00	; 0
    2464:	0e 94 06 0c 	call	0x180c	; 0x180c <oled_sram_clear_screen>
	oled_sram_write_string(startAddress, m->name, 0); //Print menu name
    2468:	d7 01       	movw	r26, r14
    246a:	6d 91       	ld	r22, X+
    246c:	7c 91       	ld	r23, X
    246e:	40 e0       	ldi	r20, 0x00	; 0
    2470:	50 e0       	ldi	r21, 0x00	; 0
    2472:	80 e0       	ldi	r24, 0x00	; 0
    2474:	90 e0       	ldi	r25, 0x00	; 0
    2476:	0e 94 66 0b 	call	0x16cc	; 0x16cc <oled_sram_write_string>
	for (int i = 0; i < m->num_submenues; i++){
    247a:	f7 01       	movw	r30, r14
    247c:	84 89       	ldd	r24, Z+20	; 0x14
    247e:	95 89       	ldd	r25, Z+21	; 0x15
    2480:	18 16       	cp	r1, r24
    2482:	19 06       	cpc	r1, r25
    2484:	0c f0       	brlt	.+2      	; 0x2488 <make_screen+0x56>
    2486:	6d c0       	rjmp	.+218    	; 0x2562 <make_screen+0x130>
    2488:	c7 01       	movw	r24, r14
    248a:	04 96       	adiw	r24, 0x04	; 4
    248c:	9b 83       	std	Y+3, r25	; 0x03
    248e:	8a 83       	std	Y+2, r24	; 0x02
    2490:	cc 24       	eor	r12, r12
    2492:	c3 94       	inc	r12
    2494:	d1 2c       	mov	r13, r1
		else{
			oled_sram_write_char(startAddress, " ", i+1, 0);
		}
		while(c != '\0'){
			for(int line = 0; line < 8; line++){
				oled_sram_write_char(startAddress, &c, i+1, index*8);
    2496:	68 94       	set
    2498:	22 24       	eor	r2, r2
    249a:	23 f8       	bld	r2, 3
    249c:	31 2c       	mov	r3, r1
	int startAddress = 0;
	
	oled_sram_clear_screen(startAddress);
	oled_sram_write_string(startAddress, m->name, 0); //Print menu name
	for (int i = 0; i < m->num_submenues; i++){
		menu *sm = m->submenues[i];
    249e:	aa 81       	ldd	r26, Y+2	; 0x02
    24a0:	bb 81       	ldd	r27, Y+3	; 0x03
    24a2:	6d 90       	ld	r6, X+
    24a4:	7d 90       	ld	r7, X+
    24a6:	bb 83       	std	Y+3, r27	; 0x03
    24a8:	aa 83       	std	Y+2, r26	; 0x02
		
		int index = 1;
		char c = sm->name[0];
    24aa:	d3 01       	movw	r26, r6
    24ac:	ed 91       	ld	r30, X+
    24ae:	fc 91       	ld	r31, X
    24b0:	80 81       	ld	r24, Z
    24b2:	89 83       	std	Y+1, r24	; 0x01
		if(m->arrow == i){
    24b4:	f7 01       	movw	r30, r14
    24b6:	40 ad       	ldd	r20, Z+56	; 0x38
    24b8:	51 ad       	ldd	r21, Z+57	; 0x39
    24ba:	c6 01       	movw	r24, r12
    24bc:	01 97       	sbiw	r24, 0x01	; 1
    24be:	48 17       	cp	r20, r24
    24c0:	59 07       	cpc	r21, r25
    24c2:	59 f4       	brne	.+22     	; 0x24da <make_screen+0xa8>
			oled_sram_write_char(startAddress, ">", i+1, 0);
    24c4:	4f 5f       	subi	r20, 0xFF	; 255
    24c6:	5f 4f       	sbci	r21, 0xFF	; 255
    24c8:	20 e0       	ldi	r18, 0x00	; 0
    24ca:	30 e0       	ldi	r19, 0x00	; 0
    24cc:	6f e3       	ldi	r22, 0x3F	; 63
    24ce:	72 e0       	ldi	r23, 0x02	; 2
    24d0:	80 e0       	ldi	r24, 0x00	; 0
    24d2:	90 e0       	ldi	r25, 0x00	; 0
    24d4:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
    24d8:	09 c0       	rjmp	.+18     	; 0x24ec <make_screen+0xba>
		}
		else{
			oled_sram_write_char(startAddress, " ", i+1, 0);
    24da:	20 e0       	ldi	r18, 0x00	; 0
    24dc:	30 e0       	ldi	r19, 0x00	; 0
    24de:	a6 01       	movw	r20, r12
    24e0:	67 e9       	ldi	r22, 0x97	; 151
    24e2:	71 e0       	ldi	r23, 0x01	; 1
    24e4:	80 e0       	ldi	r24, 0x00	; 0
    24e6:	90 e0       	ldi	r25, 0x00	; 0
    24e8:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
		}
		while(c != '\0'){
    24ec:	89 81       	ldd	r24, Y+1	; 0x01
    24ee:	88 23       	and	r24, r24
    24f0:	59 f1       	breq	.+86     	; 0x2548 <make_screen+0x116>
    24f2:	68 94       	set
    24f4:	aa 24       	eor	r10, r10
    24f6:	a3 f8       	bld	r10, 3
    24f8:	b1 2c       	mov	r11, r1
    24fa:	88 24       	eor	r8, r8
    24fc:	83 94       	inc	r8
    24fe:	91 2c       	mov	r9, r1
    2500:	1e c0       	rjmp	.+60     	; 0x253e <make_screen+0x10c>
			for(int line = 0; line < 8; line++){
				oled_sram_write_char(startAddress, &c, i+1, index*8);
    2502:	24 2d       	mov	r18, r4
    2504:	35 2d       	mov	r19, r5
    2506:	a6 01       	movw	r20, r12
    2508:	be 01       	movw	r22, r28
    250a:	6f 5f       	subi	r22, 0xFF	; 255
    250c:	7f 4f       	sbci	r23, 0xFF	; 255
    250e:	80 e0       	ldi	r24, 0x00	; 0
    2510:	90 e0       	ldi	r25, 0x00	; 0
    2512:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
    2516:	01 50       	subi	r16, 0x01	; 1
    2518:	11 09       	sbc	r17, r1
		}
		else{
			oled_sram_write_char(startAddress, " ", i+1, 0);
		}
		while(c != '\0'){
			for(int line = 0; line < 8; line++){
    251a:	01 15       	cp	r16, r1
    251c:	11 05       	cpc	r17, r1
    251e:	89 f7       	brne	.-30     	; 0x2502 <make_screen+0xd0>
				oled_sram_write_char(startAddress, &c, i+1, index*8);
			}
			c = sm->name[index++];
    2520:	d3 01       	movw	r26, r6
    2522:	ed 91       	ld	r30, X+
    2524:	fc 91       	ld	r31, X
    2526:	e8 0d       	add	r30, r8
    2528:	f9 1d       	adc	r31, r9
    252a:	80 81       	ld	r24, Z
    252c:	89 83       	std	Y+1, r24	; 0x01
    252e:	bf ef       	ldi	r27, 0xFF	; 255
    2530:	8b 1a       	sub	r8, r27
    2532:	9b 0a       	sbc	r9, r27
    2534:	e8 e0       	ldi	r30, 0x08	; 8
    2536:	ae 0e       	add	r10, r30
    2538:	b1 1c       	adc	r11, r1
			oled_sram_write_char(startAddress, ">", i+1, 0);
		}
		else{
			oled_sram_write_char(startAddress, " ", i+1, 0);
		}
		while(c != '\0'){
    253a:	88 23       	and	r24, r24
    253c:	29 f0       	breq	.+10     	; 0x2548 <make_screen+0x116>
			for(int line = 0; line < 8; line++){
				oled_sram_write_char(startAddress, &c, i+1, index*8);
    253e:	4a 2c       	mov	r4, r10
    2540:	5b 2c       	mov	r5, r11
    2542:	02 2d       	mov	r16, r2
    2544:	13 2d       	mov	r17, r3
    2546:	dd cf       	rjmp	.-70     	; 0x2502 <make_screen+0xd0>
void make_screen(menu* m){
	int startAddress = 0;
	
	oled_sram_clear_screen(startAddress);
	oled_sram_write_string(startAddress, m->name, 0); //Print menu name
	for (int i = 0; i < m->num_submenues; i++){
    2548:	c6 01       	movw	r24, r12
    254a:	ff ef       	ldi	r31, 0xFF	; 255
    254c:	cf 1a       	sub	r12, r31
    254e:	df 0a       	sbc	r13, r31
    2550:	d7 01       	movw	r26, r14
    2552:	54 96       	adiw	r26, 0x14	; 20
    2554:	2d 91       	ld	r18, X+
    2556:	3c 91       	ld	r19, X
    2558:	55 97       	sbiw	r26, 0x15	; 21
    255a:	82 17       	cp	r24, r18
    255c:	93 07       	cpc	r25, r19
    255e:	0c f4       	brge	.+2      	; 0x2562 <make_screen+0x130>
    2560:	9e cf       	rjmp	.-196    	; 0x249e <make_screen+0x6c>
				oled_sram_write_char(startAddress, &c, i+1, index*8);
			}
			c = sm->name[index++];
		}
	}
	for (int i = 0; i < m->num_functions; i++){
    2562:	f7 01       	movw	r30, r14
    2564:	86 a9       	ldd	r24, Z+54	; 0x36
    2566:	97 a9       	ldd	r25, Z+55	; 0x37
    2568:	18 16       	cp	r1, r24
    256a:	19 06       	cpc	r1, r25
    256c:	0c f0       	brlt	.+2      	; 0x2570 <make_screen+0x13e>
    256e:	6f c0       	rjmp	.+222    	; 0x264e <make_screen+0x21c>
    2570:	37 01       	movw	r6, r14
    2572:	f6 e1       	ldi	r31, 0x16	; 22
    2574:	6f 0e       	add	r6, r31
    2576:	71 1c       	adc	r7, r1
    2578:	c1 2c       	mov	r12, r1
    257a:	d1 2c       	mov	r13, r1
		else{
			oled_sram_write_char(startAddress, " ", i + m->num_submenues + 1, 0);
		}
		while(c != '\0'){
			for(int line = 0; line < 8; line++){
				oled_sram_write_char(startAddress, &c, i + m->num_submenues + 1, index*8);
    257c:	68 94       	set
    257e:	44 24       	eor	r4, r4
    2580:	43 f8       	bld	r4, 3
    2582:	51 2c       	mov	r5, r1
			}
			c = sm->name[index++];
		}
	}
	for (int i = 0; i < m->num_functions; i++){
		char *funcnames = m->name_functions[i];
    2584:	d3 01       	movw	r26, r6
    2586:	8d 90       	ld	r8, X+
    2588:	9d 90       	ld	r9, X+
    258a:	3d 01       	movw	r6, r26
		
		int index = 1;
		char c = funcnames[0];
    258c:	f4 01       	movw	r30, r8
    258e:	80 81       	ld	r24, Z
    2590:	89 83       	std	Y+1, r24	; 0x01
		if(m->arrow == i + m->num_submenues){
    2592:	d7 01       	movw	r26, r14
    2594:	d8 96       	adiw	r26, 0x38	; 56
    2596:	8d 91       	ld	r24, X+
    2598:	9c 91       	ld	r25, X
    259a:	d9 97       	sbiw	r26, 0x39	; 57
    259c:	54 96       	adiw	r26, 0x14	; 20
    259e:	4d 91       	ld	r20, X+
    25a0:	5c 91       	ld	r21, X
    25a2:	55 97       	sbiw	r26, 0x15	; 21
    25a4:	4c 0d       	add	r20, r12
    25a6:	5d 1d       	adc	r21, r13
    25a8:	84 17       	cp	r24, r20
    25aa:	95 07       	cpc	r25, r21
    25ac:	61 f4       	brne	.+24     	; 0x25c6 <make_screen+0x194>
			oled_sram_write_char(startAddress, ">", i + m->num_submenues + 1, 0);
    25ae:	ac 01       	movw	r20, r24
    25b0:	4f 5f       	subi	r20, 0xFF	; 255
    25b2:	5f 4f       	sbci	r21, 0xFF	; 255
    25b4:	20 e0       	ldi	r18, 0x00	; 0
    25b6:	30 e0       	ldi	r19, 0x00	; 0
    25b8:	6f e3       	ldi	r22, 0x3F	; 63
    25ba:	72 e0       	ldi	r23, 0x02	; 2
    25bc:	80 e0       	ldi	r24, 0x00	; 0
    25be:	90 e0       	ldi	r25, 0x00	; 0
    25c0:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
    25c4:	0a c0       	rjmp	.+20     	; 0x25da <make_screen+0x1a8>
		}
		else{
			oled_sram_write_char(startAddress, " ", i + m->num_submenues + 1, 0);
    25c6:	4f 5f       	subi	r20, 0xFF	; 255
    25c8:	5f 4f       	sbci	r21, 0xFF	; 255
    25ca:	20 e0       	ldi	r18, 0x00	; 0
    25cc:	30 e0       	ldi	r19, 0x00	; 0
    25ce:	67 e9       	ldi	r22, 0x97	; 151
    25d0:	71 e0       	ldi	r23, 0x01	; 1
    25d2:	80 e0       	ldi	r24, 0x00	; 0
    25d4:	90 e0       	ldi	r25, 0x00	; 0
    25d6:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
		}
		while(c != '\0'){
    25da:	89 81       	ldd	r24, Y+1	; 0x01
    25dc:	88 23       	and	r24, r24
    25de:	59 f1       	breq	.+86     	; 0x2636 <make_screen+0x204>
    25e0:	bf ef       	ldi	r27, 0xFF	; 255
    25e2:	8b 1a       	sub	r8, r27
    25e4:	9b 0a       	sbc	r9, r27
    25e6:	68 94       	set
    25e8:	aa 24       	eor	r10, r10
    25ea:	a3 f8       	bld	r10, 3
    25ec:	b1 2c       	mov	r11, r1
    25ee:	1e c0       	rjmp	.+60     	; 0x262c <make_screen+0x1fa>
			for(int line = 0; line < 8; line++){
				oled_sram_write_char(startAddress, &c, i + m->num_submenues + 1, index*8);
    25f0:	f7 01       	movw	r30, r14
    25f2:	44 89       	ldd	r20, Z+20	; 0x14
    25f4:	55 89       	ldd	r21, Z+21	; 0x15
    25f6:	4c 0d       	add	r20, r12
    25f8:	5d 1d       	adc	r21, r13
    25fa:	4f 5f       	subi	r20, 0xFF	; 255
    25fc:	5f 4f       	sbci	r21, 0xFF	; 255
    25fe:	22 2d       	mov	r18, r2
    2600:	33 2d       	mov	r19, r3
    2602:	be 01       	movw	r22, r28
    2604:	6f 5f       	subi	r22, 0xFF	; 255
    2606:	7f 4f       	sbci	r23, 0xFF	; 255
    2608:	80 e0       	ldi	r24, 0x00	; 0
    260a:	90 e0       	ldi	r25, 0x00	; 0
    260c:	0e 94 b4 0b 	call	0x1768	; 0x1768 <oled_sram_write_char>
    2610:	01 50       	subi	r16, 0x01	; 1
    2612:	11 09       	sbc	r17, r1
		}
		else{
			oled_sram_write_char(startAddress, " ", i + m->num_submenues + 1, 0);
		}
		while(c != '\0'){
			for(int line = 0; line < 8; line++){
    2614:	01 15       	cp	r16, r1
    2616:	11 05       	cpc	r17, r1
    2618:	59 f7       	brne	.-42     	; 0x25f0 <make_screen+0x1be>
				oled_sram_write_char(startAddress, &c, i + m->num_submenues + 1, index*8);
			}
			c = funcnames[index++];
    261a:	d4 01       	movw	r26, r8
    261c:	8d 91       	ld	r24, X+
    261e:	4d 01       	movw	r8, r26
    2620:	89 83       	std	Y+1, r24	; 0x01
    2622:	b8 e0       	ldi	r27, 0x08	; 8
    2624:	ab 0e       	add	r10, r27
    2626:	b1 1c       	adc	r11, r1
			oled_sram_write_char(startAddress, ">", i + m->num_submenues + 1, 0);
		}
		else{
			oled_sram_write_char(startAddress, " ", i + m->num_submenues + 1, 0);
		}
		while(c != '\0'){
    2628:	88 23       	and	r24, r24
    262a:	29 f0       	breq	.+10     	; 0x2636 <make_screen+0x204>
			for(int line = 0; line < 8; line++){
				oled_sram_write_char(startAddress, &c, i + m->num_submenues + 1, index*8);
    262c:	2a 2c       	mov	r2, r10
    262e:	3b 2c       	mov	r3, r11
    2630:	04 2d       	mov	r16, r4
    2632:	15 2d       	mov	r17, r5
    2634:	dd cf       	rjmp	.-70     	; 0x25f0 <make_screen+0x1be>
				oled_sram_write_char(startAddress, &c, i+1, index*8);
			}
			c = sm->name[index++];
		}
	}
	for (int i = 0; i < m->num_functions; i++){
    2636:	ef ef       	ldi	r30, 0xFF	; 255
    2638:	ce 1a       	sub	r12, r30
    263a:	de 0a       	sbc	r13, r30
    263c:	d7 01       	movw	r26, r14
    263e:	d6 96       	adiw	r26, 0x36	; 54
    2640:	8d 91       	ld	r24, X+
    2642:	9c 91       	ld	r25, X
    2644:	d7 97       	sbiw	r26, 0x37	; 55
    2646:	c8 16       	cp	r12, r24
    2648:	d9 06       	cpc	r13, r25
    264a:	0c f4       	brge	.+2      	; 0x264e <make_screen+0x21c>
    264c:	9b cf       	rjmp	.-202    	; 0x2584 <make_screen+0x152>
				oled_sram_write_char(startAddress, &c, i + m->num_submenues + 1, index*8);
			}
			c = funcnames[index++];
		}
	}
	oled_sram_flush(startAddress);
    264e:	80 e0       	ldi	r24, 0x00	; 0
    2650:	90 e0       	ldi	r25, 0x00	; 0
    2652:	0e 94 06 0b 	call	0x160c	; 0x160c <oled_sram_flush>
} 
    2656:	0f 90       	pop	r0
    2658:	0f 90       	pop	r0
    265a:	0f 90       	pop	r0
    265c:	df 91       	pop	r29
    265e:	cf 91       	pop	r28
    2660:	1f 91       	pop	r17
    2662:	0f 91       	pop	r16
    2664:	ff 90       	pop	r15
    2666:	ef 90       	pop	r14
    2668:	df 90       	pop	r13
    266a:	cf 90       	pop	r12
    266c:	bf 90       	pop	r11
    266e:	af 90       	pop	r10
    2670:	9f 90       	pop	r9
    2672:	8f 90       	pop	r8
    2674:	7f 90       	pop	r7
    2676:	6f 90       	pop	r6
    2678:	5f 90       	pop	r5
    267a:	4f 90       	pop	r4
    267c:	3f 90       	pop	r3
    267e:	2f 90       	pop	r2
    2680:	08 95       	ret

00002682 <menuSystem>:
#include "../Game_files/pong.h"
#include "../Game_files/pingpong.h"
#include "../Game_files/highscore.h"


void menuSystem(){
    2682:	cf 93       	push	r28
    2684:	df 93       	push	r29
    2686:	cd b7       	in	r28, 0x3d	; 61
    2688:	de b7       	in	r29, 0x3e	; 62
    268a:	cc 55       	subi	r28, 0x5C	; 92
    268c:	d1 40       	sbci	r29, 0x01	; 1
    268e:	0f b6       	in	r0, 0x3f	; 63
    2690:	f8 94       	cli
    2692:	de bf       	out	0x3e, r29	; 62
    2694:	0f be       	out	0x3f, r0	; 63
    2696:	cd bf       	out	0x3d, r28	; 61
	menu mainMenu = {.name = "Main menu", .num_submenues = 4};
    2698:	0f 2e       	mov	r0, r31
    269a:	fa e3       	ldi	r31, 0x3A	; 58
    269c:	ff 2e       	mov	r15, r31
    269e:	f0 2d       	mov	r31, r0
    26a0:	8e 01       	movw	r16, r28
    26a2:	0f 5f       	subi	r16, 0xFF	; 255
    26a4:	1f 4f       	sbci	r17, 0xFF	; 255
    26a6:	d8 01       	movw	r26, r16
    26a8:	ef 2d       	mov	r30, r15
    26aa:	1d 92       	st	X+, r1
    26ac:	ea 95       	dec	r30
    26ae:	e9 f7       	brne	.-6      	; 0x26aa <menuSystem+0x28>
    26b0:	81 e4       	ldi	r24, 0x41	; 65
    26b2:	92 e0       	ldi	r25, 0x02	; 2
    26b4:	9a 83       	std	Y+2, r25	; 0x02
    26b6:	89 83       	std	Y+1, r24	; 0x01
    26b8:	84 e0       	ldi	r24, 0x04	; 4
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	9e 8b       	std	Y+22, r25	; 0x16
    26be:	8d 8b       	std	Y+21, r24	; 0x15
		
	menu highscore = {.name = "Highscore", .parent = &mainMenu, .num_functions = 3, .num_submenues = 0};
    26c0:	fe 01       	movw	r30, r28
    26c2:	fb 96       	adiw	r30, 0x3b	; 59
    26c4:	df 01       	movw	r26, r30
    26c6:	ef 2c       	mov	r14, r15
    26c8:	1d 92       	st	X+, r1
    26ca:	ea 94       	dec	r14
    26cc:	e9 f7       	brne	.-6      	; 0x26c8 <menuSystem+0x46>
    26ce:	8b e4       	ldi	r24, 0x4B	; 75
    26d0:	92 e0       	ldi	r25, 0x02	; 2
    26d2:	9c af       	std	Y+60, r25	; 0x3c
    26d4:	8b af       	std	Y+59, r24	; 0x3b
    26d6:	1e af       	std	Y+62, r17	; 0x3e
    26d8:	0d af       	std	Y+61, r16	; 0x3d
    26da:	83 e0       	ldi	r24, 0x03	; 3
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	e3 96       	adiw	r28, 0x33	; 51
    26e0:	9f af       	std	Y+63, r25	; 0x3f
    26e2:	8e af       	std	Y+62, r24	; 0x3e
    26e4:	e3 97       	sbiw	r28, 0x33	; 51
	mainMenu.submenues[2] = &highscore;
    26e6:	fa 87       	std	Y+10, r31	; 0x0a
    26e8:	e9 87       	std	Y+9, r30	; 0x09
	highscore.functions[0] = &highscore_print_snake;
    26ea:	25 e8       	ldi	r18, 0x85	; 133
    26ec:	36 e0       	ldi	r19, 0x06	; 6
    26ee:	a3 96       	adiw	r28, 0x23	; 35
    26f0:	3f af       	std	Y+63, r19	; 0x3f
    26f2:	2e af       	std	Y+62, r18	; 0x3e
    26f4:	a3 97       	sbiw	r28, 0x23	; 35
	highscore.functions[1] = &highscore_print_pong;
    26f6:	29 e8       	ldi	r18, 0x89	; 137
    26f8:	36 e0       	ldi	r19, 0x06	; 6
    26fa:	a5 96       	adiw	r28, 0x25	; 37
    26fc:	3f af       	std	Y+63, r19	; 0x3f
    26fe:	2e af       	std	Y+62, r18	; 0x3e
    2700:	a5 97       	sbiw	r28, 0x25	; 37
	highscore.functions[2] = &highscore_print_pingpong;
    2702:	21 e8       	ldi	r18, 0x81	; 129
    2704:	36 e0       	ldi	r19, 0x06	; 6
    2706:	a7 96       	adiw	r28, 0x27	; 39
    2708:	3f af       	std	Y+63, r19	; 0x3f
    270a:	2e af       	std	Y+62, r18	; 0x3e
    270c:	a7 97       	sbiw	r28, 0x27	; 39
	highscore.name_functions[0] = "Snake";
    270e:	65 e5       	ldi	r22, 0x55	; 85
    2710:	72 e0       	ldi	r23, 0x02	; 2
    2712:	63 96       	adiw	r28, 0x13	; 19
    2714:	7f af       	std	Y+63, r23	; 0x3f
    2716:	6e af       	std	Y+62, r22	; 0x3e
    2718:	63 97       	sbiw	r28, 0x13	; 19
	highscore.name_functions[1] = "Pong";
    271a:	40 e6       	ldi	r20, 0x60	; 96
    271c:	52 e0       	ldi	r21, 0x02	; 2
    271e:	65 96       	adiw	r28, 0x15	; 21
    2720:	5f af       	std	Y+63, r21	; 0x3f
    2722:	4e af       	std	Y+62, r20	; 0x3e
    2724:	65 97       	sbiw	r28, 0x15	; 21
	highscore.name_functions[2] = "Ping Pong";
    2726:	2b e5       	ldi	r18, 0x5B	; 91
    2728:	32 e0       	ldi	r19, 0x02	; 2
    272a:	67 96       	adiw	r28, 0x17	; 23
    272c:	3f af       	std	Y+63, r19	; 0x3f
    272e:	2e af       	std	Y+62, r18	; 0x3e
    2730:	67 97       	sbiw	r28, 0x17	; 23
	
	menu playGame = {.name = "Play Game", .parent = &mainMenu, .num_functions = 3, .num_submenues = 1};
    2732:	fa 96       	adiw	r30, 0x3a	; 58
    2734:	df 01       	movw	r26, r30
    2736:	ef 2c       	mov	r14, r15
    2738:	1d 92       	st	X+, r1
    273a:	ea 94       	dec	r14
    273c:	e9 f7       	brne	.-6      	; 0x2738 <menuSystem+0xb6>
    273e:	a5 e6       	ldi	r26, 0x65	; 101
    2740:	b2 e0       	ldi	r27, 0x02	; 2
    2742:	b1 83       	std	Z+1, r27	; 0x01
    2744:	a0 83       	st	Z, r26
    2746:	13 83       	std	Z+3, r17	; 0x03
    2748:	02 83       	std	Z+2, r16	; 0x02
    274a:	a1 e0       	ldi	r26, 0x01	; 1
    274c:	b0 e0       	ldi	r27, 0x00	; 0
    274e:	b5 8b       	std	Z+21, r27	; 0x15
    2750:	a4 8b       	std	Z+20, r26	; 0x14
    2752:	97 ab       	std	Z+55, r25	; 0x37
    2754:	86 ab       	std	Z+54, r24	; 0x36
	playGame.functions[0] = &play_draw;
    2756:	a1 e8       	ldi	r26, 0x81	; 129
    2758:	bc e0       	ldi	r27, 0x0C	; 12
    275a:	b7 a3       	std	Z+39, r27	; 0x27
    275c:	a6 a3       	std	Z+38, r26	; 0x26
	playGame.functions[1] = &playSnake;
    275e:	a1 e4       	ldi	r26, 0x41	; 65
    2760:	b0 e1       	ldi	r27, 0x10	; 16
    2762:	b1 a7       	std	Z+41, r27	; 0x29
    2764:	a0 a7       	std	Z+40, r26	; 0x28
	playGame.functions[2] = &playPong;
    2766:	a4 e5       	ldi	r26, 0x54	; 84
    2768:	bf e0       	ldi	r27, 0x0F	; 15
    276a:	b3 a7       	std	Z+43, r27	; 0x2b
    276c:	a2 a7       	std	Z+42, r26	; 0x2a
	playGame.name_functions[0] = "Draw";
    276e:	af e6       	ldi	r26, 0x6F	; 111
    2770:	b2 e0       	ldi	r27, 0x02	; 2
    2772:	b7 8b       	std	Z+23, r27	; 0x17
    2774:	a6 8b       	std	Z+22, r26	; 0x16
	playGame.name_functions[1] = "Snake";
    2776:	71 8f       	std	Z+25, r23	; 0x19
    2778:	60 8f       	std	Z+24, r22	; 0x18
	playGame.name_functions[2] = "Pong";
    277a:	53 8f       	std	Z+27, r21	; 0x1b
    277c:	42 8f       	std	Z+26, r20	; 0x1a
	mainMenu.submenues[0] = &playGame;
    277e:	fe 83       	std	Y+6, r31	; 0x06
    2780:	ed 83       	std	Y+5, r30	; 0x05
	
	
	menu ping_pong = {.name = "Ping Pong", .parent = &playGame, .num_functions = 3};
    2782:	be 01       	movw	r22, r28
    2784:	61 55       	subi	r22, 0x51	; 81
    2786:	7f 4f       	sbci	r23, 0xFF	; 255
    2788:	db 01       	movw	r26, r22
    278a:	ef 2c       	mov	r14, r15
    278c:	1d 92       	st	X+, r1
    278e:	ea 94       	dec	r14
    2790:	e9 f7       	brne	.-6      	; 0x278c <menuSystem+0x10a>
    2792:	db 01       	movw	r26, r22
    2794:	11 96       	adiw	r26, 0x01	; 1
    2796:	3c 93       	st	X, r19
    2798:	2e 93       	st	-X, r18
    279a:	13 96       	adiw	r26, 0x03	; 3
    279c:	fc 93       	st	X, r31
    279e:	ee 93       	st	-X, r30
    27a0:	12 97       	sbiw	r26, 0x02	; 2
    27a2:	d7 96       	adiw	r26, 0x37	; 55
    27a4:	9c 93       	st	X, r25
    27a6:	8e 93       	st	-X, r24
    27a8:	d6 97       	sbiw	r26, 0x36	; 54
	ping_pong.functions[0] = &play_pingpong_joy;
    27aa:	8f ee       	ldi	r24, 0xEF	; 239
    27ac:	97 e0       	ldi	r25, 0x07	; 7
    27ae:	97 96       	adiw	r26, 0x27	; 39
    27b0:	9c 93       	st	X, r25
    27b2:	8e 93       	st	-X, r24
    27b4:	96 97       	sbiw	r26, 0x26	; 38
	ping_pong.functions[1] = &play_pingpong_web;
    27b6:	8b ee       	ldi	r24, 0xEB	; 235
    27b8:	97 e0       	ldi	r25, 0x07	; 7
    27ba:	99 96       	adiw	r26, 0x29	; 41
    27bc:	9c 93       	st	X, r25
    27be:	8e 93       	st	-X, r24
    27c0:	98 97       	sbiw	r26, 0x28	; 40
	ping_pong.functions[2] = &play_pingpong_self;
    27c2:	83 ef       	ldi	r24, 0xF3	; 243
    27c4:	97 e0       	ldi	r25, 0x07	; 7
    27c6:	9b 96       	adiw	r26, 0x2b	; 43
    27c8:	9c 93       	st	X, r25
    27ca:	8e 93       	st	-X, r24
    27cc:	9a 97       	sbiw	r26, 0x2a	; 42
	ping_pong.name_functions[0] = "Normal Control";
    27ce:	84 e7       	ldi	r24, 0x74	; 116
    27d0:	92 e0       	ldi	r25, 0x02	; 2
    27d2:	57 96       	adiw	r26, 0x17	; 23
    27d4:	9c 93       	st	X, r25
    27d6:	8e 93       	st	-X, r24
    27d8:	56 97       	sbiw	r26, 0x16	; 22
	ping_pong.name_functions[1] = "Web Control";
    27da:	83 e8       	ldi	r24, 0x83	; 131
    27dc:	92 e0       	ldi	r25, 0x02	; 2
    27de:	59 96       	adiw	r26, 0x19	; 25
    27e0:	9c 93       	st	X, r25
    27e2:	8e 93       	st	-X, r24
    27e4:	58 97       	sbiw	r26, 0x18	; 24
	ping_pong.name_functions[2] = "Self Control";
    27e6:	8f e8       	ldi	r24, 0x8F	; 143
    27e8:	92 e0       	ldi	r25, 0x02	; 2
    27ea:	5b 96       	adiw	r26, 0x1b	; 27
    27ec:	9c 93       	st	X, r25
    27ee:	8e 93       	st	-X, r24
    27f0:	5a 97       	sbiw	r26, 0x1a	; 26
	playGame.submenues[0] = &ping_pong;
    27f2:	75 83       	std	Z+5, r23	; 0x05
    27f4:	64 83       	std	Z+4, r22	; 0x04
	
		
	menu settings = {.name = "Settings", .parent = &mainMenu, .num_functions = 2};
    27f6:	ec 58       	subi	r30, 0x8C	; 140
    27f8:	ff 4f       	sbci	r31, 0xFF	; 255
    27fa:	df 01       	movw	r26, r30
    27fc:	ef 2c       	mov	r14, r15
    27fe:	1d 92       	st	X+, r1
    2800:	ea 94       	dec	r14
    2802:	e9 f7       	brne	.-6      	; 0x27fe <menuSystem+0x17c>
    2804:	8c e9       	ldi	r24, 0x9C	; 156
    2806:	92 e0       	ldi	r25, 0x02	; 2
    2808:	91 83       	std	Z+1, r25	; 0x01
    280a:	80 83       	st	Z, r24
    280c:	13 83       	std	Z+3, r17	; 0x03
    280e:	02 83       	std	Z+2, r16	; 0x02
    2810:	82 e0       	ldi	r24, 0x02	; 2
    2812:	90 e0       	ldi	r25, 0x00	; 0
    2814:	97 ab       	std	Z+55, r25	; 0x37
    2816:	86 ab       	std	Z+54, r24	; 0x36
	settings.functions[0] = &calibrate_joystick;
    2818:	23 ec       	ldi	r18, 0xC3	; 195
    281a:	39 e0       	ldi	r19, 0x09	; 9
    281c:	37 a3       	std	Z+39, r19	; 0x27
    281e:	26 a3       	std	Z+38, r18	; 0x26
	settings.functions[1] = &highscore_clear_all;
    2820:	27 ef       	ldi	r18, 0xF7	; 247
    2822:	35 e0       	ldi	r19, 0x05	; 5
    2824:	31 a7       	std	Z+41, r19	; 0x29
    2826:	20 a7       	std	Z+40, r18	; 0x28
	settings.name_functions[0] = "Calibrate Joy";
    2828:	25 ea       	ldi	r18, 0xA5	; 165
    282a:	32 e0       	ldi	r19, 0x02	; 2
    282c:	37 8b       	std	Z+23, r19	; 0x17
    282e:	26 8b       	std	Z+22, r18	; 0x16
	settings.name_functions[1] = "Clear highscore";
    2830:	23 eb       	ldi	r18, 0xB3	; 179
    2832:	32 e0       	ldi	r19, 0x02	; 2
    2834:	31 8f       	std	Z+25, r19	; 0x19
    2836:	20 8f       	std	Z+24, r18	; 0x18
	mainMenu.submenues[3] = &settings;
    2838:	fc 87       	std	Y+12, r31	; 0x0c
    283a:	eb 87       	std	Y+11, r30	; 0x0b
	
	menu spotify = {.name = "Spotify", .parent = &mainMenu, .num_functions = 2};
    283c:	fa 96       	adiw	r30, 0x3a	; 58
    283e:	df 01       	movw	r26, r30
    2840:	1d 92       	st	X+, r1
    2842:	fa 94       	dec	r15
    2844:	e9 f7       	brne	.-6      	; 0x2840 <menuSystem+0x1be>
    2846:	23 ec       	ldi	r18, 0xC3	; 195
    2848:	32 e0       	ldi	r19, 0x02	; 2
    284a:	31 83       	std	Z+1, r19	; 0x01
    284c:	20 83       	st	Z, r18
    284e:	13 83       	std	Z+3, r17	; 0x03
    2850:	02 83       	std	Z+2, r16	; 0x02
    2852:	97 ab       	std	Z+55, r25	; 0x37
    2854:	86 ab       	std	Z+54, r24	; 0x36
	spotify.functions[0] = &play_lisa;
    2856:	85 e2       	ldi	r24, 0x25	; 37
    2858:	94 e0       	ldi	r25, 0x04	; 4
    285a:	97 a3       	std	Z+39, r25	; 0x27
    285c:	86 a3       	std	Z+38, r24	; 0x26
	spotify.functions[1] = &play_mario;
    285e:	86 e5       	ldi	r24, 0x56	; 86
    2860:	94 e0       	ldi	r25, 0x04	; 4
    2862:	91 a7       	std	Z+41, r25	; 0x29
    2864:	80 a7       	std	Z+40, r24	; 0x28
	spotify.name_functions[0] = "Lisa";
    2866:	8b ec       	ldi	r24, 0xCB	; 203
    2868:	92 e0       	ldi	r25, 0x02	; 2
    286a:	97 8b       	std	Z+23, r25	; 0x17
    286c:	86 8b       	std	Z+22, r24	; 0x16
	spotify.name_functions[1] = "play_mario";
    286e:	80 ed       	ldi	r24, 0xD0	; 208
    2870:	92 e0       	ldi	r25, 0x02	; 2
    2872:	91 8f       	std	Z+25, r25	; 0x19
    2874:	80 8f       	std	Z+24, r24	; 0x18
	mainMenu.submenues[1] = &spotify;
    2876:	f8 87       	std	Y+8, r31	; 0x08
    2878:	ef 83       	std	Y+7, r30	; 0x07
	
	
	

	
	direction previousDirection = NEUTRAL;
    287a:	68 94       	set
    287c:	aa 24       	eor	r10, r10
    287e:	a2 f8       	bld	r10, 2
	Joystick joy;
	menu* currentMenu = &mainMenu;
	int num_elements;
	while(1){
		num_elements = (currentMenu->num_functions+currentMenu->num_submenues);
    2880:	f8 01       	movw	r30, r16
    2882:	c6 a8       	ldd	r12, Z+54	; 0x36
    2884:	d7 a8       	ldd	r13, Z+55	; 0x37
    2886:	e4 88       	ldd	r14, Z+20	; 0x14
    2888:	f5 88       	ldd	r15, Z+21	; 0x15
		joy = get_joystick_position();
    288a:	0e 94 2b 09 	call	0x1256	; 0x1256 <get_joystick_position>
    288e:	b8 2e       	mov	r11, r24
		if (joy.D != previousDirection){
    2890:	a8 16       	cp	r10, r24
    2892:	09 f4       	brne	.+2      	; 0x2896 <menuSystem+0x214>
    2894:	53 c0       	rjmp	.+166    	; 0x293c <menuSystem+0x2ba>
	direction previousDirection = NEUTRAL;
	Joystick joy;
	menu* currentMenu = &mainMenu;
	int num_elements;
	while(1){
		num_elements = (currentMenu->num_functions+currentMenu->num_submenues);
    2896:	b6 01       	movw	r22, r12
    2898:	6e 0d       	add	r22, r14
    289a:	7f 1d       	adc	r23, r15
		joy = get_joystick_position();
		if (joy.D != previousDirection){
			switch(joy.D){
    289c:	f1 e0       	ldi	r31, 0x01	; 1
    289e:	8f 17       	cp	r24, r31
    28a0:	79 f1       	breq	.+94     	; 0x2900 <menuSystem+0x27e>
    28a2:	8f 17       	cp	r24, r31
    28a4:	18 f1       	brcs	.+70     	; 0x28ec <menuSystem+0x26a>
    28a6:	68 94       	set
    28a8:	ee 24       	eor	r14, r14
    28aa:	e1 f8       	bld	r14, 1
    28ac:	8e 15       	cp	r24, r14
    28ae:	21 f0       	breq	.+8      	; 0x28b8 <menuSystem+0x236>
    28b0:	23 e0       	ldi	r18, 0x03	; 3
    28b2:	82 17       	cp	r24, r18
    28b4:	79 f0       	breq	.+30     	; 0x28d4 <menuSystem+0x252>
    28b6:	42 c0       	rjmp	.+132    	; 0x293c <menuSystem+0x2ba>
				case NEUTRAL:
					break;
				case UP:
					currentMenu->arrow = (currentMenu->arrow - 1 + num_elements)%num_elements;
    28b8:	d8 01       	movw	r26, r16
    28ba:	d8 96       	adiw	r26, 0x38	; 56
    28bc:	8d 91       	ld	r24, X+
    28be:	9c 91       	ld	r25, X
    28c0:	d9 97       	sbiw	r26, 0x39	; 57
    28c2:	01 97       	sbiw	r24, 0x01	; 1
    28c4:	86 0f       	add	r24, r22
    28c6:	97 1f       	adc	r25, r23
    28c8:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
    28cc:	f8 01       	movw	r30, r16
    28ce:	91 af       	std	Z+57, r25	; 0x39
    28d0:	80 af       	std	Z+56, r24	; 0x38
					break;
    28d2:	34 c0       	rjmp	.+104    	; 0x293c <menuSystem+0x2ba>
				case DOWN:
					currentMenu->arrow = (currentMenu->arrow + 1)%num_elements;
    28d4:	d8 01       	movw	r26, r16
    28d6:	d8 96       	adiw	r26, 0x38	; 56
    28d8:	8d 91       	ld	r24, X+
    28da:	9c 91       	ld	r25, X
    28dc:	d9 97       	sbiw	r26, 0x39	; 57
    28de:	01 96       	adiw	r24, 0x01	; 1
    28e0:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <__divmodhi4>
    28e4:	f8 01       	movw	r30, r16
    28e6:	91 af       	std	Z+57, r25	; 0x39
    28e8:	80 af       	std	Z+56, r24	; 0x38
					break;
    28ea:	28 c0       	rjmp	.+80     	; 0x293c <menuSystem+0x2ba>
				case LEFT:
						currentMenu = (currentMenu->parent) ? currentMenu->parent : currentMenu;
    28ec:	d8 01       	movw	r26, r16
    28ee:	12 96       	adiw	r26, 0x02	; 2
    28f0:	2d 91       	ld	r18, X+
    28f2:	3c 91       	ld	r19, X
    28f4:	13 97       	sbiw	r26, 0x03	; 3
    28f6:	21 15       	cp	r18, r1
    28f8:	31 05       	cpc	r19, r1
    28fa:	01 f1       	breq	.+64     	; 0x293c <menuSystem+0x2ba>
    28fc:	89 01       	movw	r16, r18
    28fe:	1e c0       	rjmp	.+60     	; 0x293c <menuSystem+0x2ba>
					break;
				case RIGHT:
					if(currentMenu->arrow < currentMenu->num_submenues){
    2900:	f8 01       	movw	r30, r16
    2902:	20 ad       	ldd	r18, Z+56	; 0x38
    2904:	31 ad       	ldd	r19, Z+57	; 0x39
    2906:	44 89       	ldd	r20, Z+20	; 0x14
    2908:	55 89       	ldd	r21, Z+21	; 0x15
    290a:	24 17       	cp	r18, r20
    290c:	35 07       	cpc	r19, r21
    290e:	4c f4       	brge	.+18     	; 0x2922 <menuSystem+0x2a0>
						currentMenu = currentMenu->submenues[currentMenu->arrow];
    2910:	2e 5f       	subi	r18, 0xFE	; 254
    2912:	3f 4f       	sbci	r19, 0xFF	; 255
    2914:	22 0f       	add	r18, r18
    2916:	33 1f       	adc	r19, r19
    2918:	e2 0f       	add	r30, r18
    291a:	f3 1f       	adc	r31, r19
    291c:	00 81       	ld	r16, Z
    291e:	11 81       	ldd	r17, Z+1	; 0x01
    2920:	0d c0       	rjmp	.+26     	; 0x293c <menuSystem+0x2ba>
					}
					else{
						currentMenu->functions[(currentMenu->arrow - currentMenu->num_submenues)]();
    2922:	24 1b       	sub	r18, r20
    2924:	35 0b       	sbc	r19, r21
    2926:	2d 5e       	subi	r18, 0xED	; 237
    2928:	3f 4f       	sbci	r19, 0xFF	; 255
    292a:	f9 01       	movw	r30, r18
    292c:	ee 0f       	add	r30, r30
    292e:	ff 1f       	adc	r31, r31
    2930:	e0 0f       	add	r30, r16
    2932:	f1 1f       	adc	r31, r17
    2934:	01 90       	ld	r0, Z+
    2936:	f0 81       	ld	r31, Z
    2938:	e0 2d       	mov	r30, r0
    293a:	09 95       	icall
					break;
			}
		}
		previousDirection = joy.D;
		
		make_screen(currentMenu);
    293c:	c8 01       	movw	r24, r16
    293e:	0e 94 19 12 	call	0x2432	; 0x2432 <make_screen>
    2942:	ff ef       	ldi	r31, 0xFF	; 255
    2944:	2f e7       	ldi	r18, 0x7F	; 127
    2946:	41 e0       	ldi	r20, 0x01	; 1
    2948:	f1 50       	subi	r31, 0x01	; 1
    294a:	20 40       	sbci	r18, 0x00	; 0
    294c:	40 40       	sbci	r20, 0x00	; 0
    294e:	e1 f7       	brne	.-8      	; 0x2948 <menuSystem+0x2c6>
    2950:	00 c0       	rjmp	.+0      	; 0x2952 <menuSystem+0x2d0>
    2952:	00 c0       	rjmp	.+0      	; 0x2954 <menuSystem+0x2d2>
					break;
					default:
					break;
			}
		}
		previousDirection = joy.D;
    2954:	ab 2c       	mov	r10, r11
    2956:	94 cf       	rjmp	.-216    	; 0x2880 <menuSystem+0x1fe>

00002958 <__subsf3>:
    2958:	50 58       	subi	r21, 0x80	; 128

0000295a <__addsf3>:
    295a:	bb 27       	eor	r27, r27
    295c:	aa 27       	eor	r26, r26
    295e:	0e d0       	rcall	.+28     	; 0x297c <__addsf3x>
    2960:	75 c1       	rjmp	.+746    	; 0x2c4c <__fp_round>
    2962:	66 d1       	rcall	.+716    	; 0x2c30 <__fp_pscA>
    2964:	30 f0       	brcs	.+12     	; 0x2972 <__addsf3+0x18>
    2966:	6b d1       	rcall	.+726    	; 0x2c3e <__fp_pscB>
    2968:	20 f0       	brcs	.+8      	; 0x2972 <__addsf3+0x18>
    296a:	31 f4       	brne	.+12     	; 0x2978 <__addsf3+0x1e>
    296c:	9f 3f       	cpi	r25, 0xFF	; 255
    296e:	11 f4       	brne	.+4      	; 0x2974 <__addsf3+0x1a>
    2970:	1e f4       	brtc	.+6      	; 0x2978 <__addsf3+0x1e>
    2972:	5b c1       	rjmp	.+694    	; 0x2c2a <__fp_nan>
    2974:	0e f4       	brtc	.+2      	; 0x2978 <__addsf3+0x1e>
    2976:	e0 95       	com	r30
    2978:	e7 fb       	bst	r30, 7
    297a:	51 c1       	rjmp	.+674    	; 0x2c1e <__fp_inf>

0000297c <__addsf3x>:
    297c:	e9 2f       	mov	r30, r25
    297e:	77 d1       	rcall	.+750    	; 0x2c6e <__fp_split3>
    2980:	80 f3       	brcs	.-32     	; 0x2962 <__addsf3+0x8>
    2982:	ba 17       	cp	r27, r26
    2984:	62 07       	cpc	r22, r18
    2986:	73 07       	cpc	r23, r19
    2988:	84 07       	cpc	r24, r20
    298a:	95 07       	cpc	r25, r21
    298c:	18 f0       	brcs	.+6      	; 0x2994 <__addsf3x+0x18>
    298e:	71 f4       	brne	.+28     	; 0x29ac <__addsf3x+0x30>
    2990:	9e f5       	brtc	.+102    	; 0x29f8 <__addsf3x+0x7c>
    2992:	8f c1       	rjmp	.+798    	; 0x2cb2 <__fp_zero>
    2994:	0e f4       	brtc	.+2      	; 0x2998 <__addsf3x+0x1c>
    2996:	e0 95       	com	r30
    2998:	0b 2e       	mov	r0, r27
    299a:	ba 2f       	mov	r27, r26
    299c:	a0 2d       	mov	r26, r0
    299e:	0b 01       	movw	r0, r22
    29a0:	b9 01       	movw	r22, r18
    29a2:	90 01       	movw	r18, r0
    29a4:	0c 01       	movw	r0, r24
    29a6:	ca 01       	movw	r24, r20
    29a8:	a0 01       	movw	r20, r0
    29aa:	11 24       	eor	r1, r1
    29ac:	ff 27       	eor	r31, r31
    29ae:	59 1b       	sub	r21, r25
    29b0:	99 f0       	breq	.+38     	; 0x29d8 <__addsf3x+0x5c>
    29b2:	59 3f       	cpi	r21, 0xF9	; 249
    29b4:	50 f4       	brcc	.+20     	; 0x29ca <__addsf3x+0x4e>
    29b6:	50 3e       	cpi	r21, 0xE0	; 224
    29b8:	68 f1       	brcs	.+90     	; 0x2a14 <__addsf3x+0x98>
    29ba:	1a 16       	cp	r1, r26
    29bc:	f0 40       	sbci	r31, 0x00	; 0
    29be:	a2 2f       	mov	r26, r18
    29c0:	23 2f       	mov	r18, r19
    29c2:	34 2f       	mov	r19, r20
    29c4:	44 27       	eor	r20, r20
    29c6:	58 5f       	subi	r21, 0xF8	; 248
    29c8:	f3 cf       	rjmp	.-26     	; 0x29b0 <__addsf3x+0x34>
    29ca:	46 95       	lsr	r20
    29cc:	37 95       	ror	r19
    29ce:	27 95       	ror	r18
    29d0:	a7 95       	ror	r26
    29d2:	f0 40       	sbci	r31, 0x00	; 0
    29d4:	53 95       	inc	r21
    29d6:	c9 f7       	brne	.-14     	; 0x29ca <__addsf3x+0x4e>
    29d8:	7e f4       	brtc	.+30     	; 0x29f8 <__addsf3x+0x7c>
    29da:	1f 16       	cp	r1, r31
    29dc:	ba 0b       	sbc	r27, r26
    29de:	62 0b       	sbc	r22, r18
    29e0:	73 0b       	sbc	r23, r19
    29e2:	84 0b       	sbc	r24, r20
    29e4:	ba f0       	brmi	.+46     	; 0x2a14 <__addsf3x+0x98>
    29e6:	91 50       	subi	r25, 0x01	; 1
    29e8:	a1 f0       	breq	.+40     	; 0x2a12 <__addsf3x+0x96>
    29ea:	ff 0f       	add	r31, r31
    29ec:	bb 1f       	adc	r27, r27
    29ee:	66 1f       	adc	r22, r22
    29f0:	77 1f       	adc	r23, r23
    29f2:	88 1f       	adc	r24, r24
    29f4:	c2 f7       	brpl	.-16     	; 0x29e6 <__addsf3x+0x6a>
    29f6:	0e c0       	rjmp	.+28     	; 0x2a14 <__addsf3x+0x98>
    29f8:	ba 0f       	add	r27, r26
    29fa:	62 1f       	adc	r22, r18
    29fc:	73 1f       	adc	r23, r19
    29fe:	84 1f       	adc	r24, r20
    2a00:	48 f4       	brcc	.+18     	; 0x2a14 <__addsf3x+0x98>
    2a02:	87 95       	ror	r24
    2a04:	77 95       	ror	r23
    2a06:	67 95       	ror	r22
    2a08:	b7 95       	ror	r27
    2a0a:	f7 95       	ror	r31
    2a0c:	9e 3f       	cpi	r25, 0xFE	; 254
    2a0e:	08 f0       	brcs	.+2      	; 0x2a12 <__addsf3x+0x96>
    2a10:	b3 cf       	rjmp	.-154    	; 0x2978 <__addsf3+0x1e>
    2a12:	93 95       	inc	r25
    2a14:	88 0f       	add	r24, r24
    2a16:	08 f0       	brcs	.+2      	; 0x2a1a <__addsf3x+0x9e>
    2a18:	99 27       	eor	r25, r25
    2a1a:	ee 0f       	add	r30, r30
    2a1c:	97 95       	ror	r25
    2a1e:	87 95       	ror	r24
    2a20:	08 95       	ret

00002a22 <__cmpsf2>:
    2a22:	d9 d0       	rcall	.+434    	; 0x2bd6 <__fp_cmp>
    2a24:	08 f4       	brcc	.+2      	; 0x2a28 <__cmpsf2+0x6>
    2a26:	81 e0       	ldi	r24, 0x01	; 1
    2a28:	08 95       	ret

00002a2a <__divsf3>:
    2a2a:	0c d0       	rcall	.+24     	; 0x2a44 <__divsf3x>
    2a2c:	0f c1       	rjmp	.+542    	; 0x2c4c <__fp_round>
    2a2e:	07 d1       	rcall	.+526    	; 0x2c3e <__fp_pscB>
    2a30:	40 f0       	brcs	.+16     	; 0x2a42 <__divsf3+0x18>
    2a32:	fe d0       	rcall	.+508    	; 0x2c30 <__fp_pscA>
    2a34:	30 f0       	brcs	.+12     	; 0x2a42 <__divsf3+0x18>
    2a36:	21 f4       	brne	.+8      	; 0x2a40 <__divsf3+0x16>
    2a38:	5f 3f       	cpi	r21, 0xFF	; 255
    2a3a:	19 f0       	breq	.+6      	; 0x2a42 <__divsf3+0x18>
    2a3c:	f0 c0       	rjmp	.+480    	; 0x2c1e <__fp_inf>
    2a3e:	51 11       	cpse	r21, r1
    2a40:	39 c1       	rjmp	.+626    	; 0x2cb4 <__fp_szero>
    2a42:	f3 c0       	rjmp	.+486    	; 0x2c2a <__fp_nan>

00002a44 <__divsf3x>:
    2a44:	14 d1       	rcall	.+552    	; 0x2c6e <__fp_split3>
    2a46:	98 f3       	brcs	.-26     	; 0x2a2e <__divsf3+0x4>

00002a48 <__divsf3_pse>:
    2a48:	99 23       	and	r25, r25
    2a4a:	c9 f3       	breq	.-14     	; 0x2a3e <__divsf3+0x14>
    2a4c:	55 23       	and	r21, r21
    2a4e:	b1 f3       	breq	.-20     	; 0x2a3c <__divsf3+0x12>
    2a50:	95 1b       	sub	r25, r21
    2a52:	55 0b       	sbc	r21, r21
    2a54:	bb 27       	eor	r27, r27
    2a56:	aa 27       	eor	r26, r26
    2a58:	62 17       	cp	r22, r18
    2a5a:	73 07       	cpc	r23, r19
    2a5c:	84 07       	cpc	r24, r20
    2a5e:	38 f0       	brcs	.+14     	; 0x2a6e <__divsf3_pse+0x26>
    2a60:	9f 5f       	subi	r25, 0xFF	; 255
    2a62:	5f 4f       	sbci	r21, 0xFF	; 255
    2a64:	22 0f       	add	r18, r18
    2a66:	33 1f       	adc	r19, r19
    2a68:	44 1f       	adc	r20, r20
    2a6a:	aa 1f       	adc	r26, r26
    2a6c:	a9 f3       	breq	.-22     	; 0x2a58 <__divsf3_pse+0x10>
    2a6e:	33 d0       	rcall	.+102    	; 0x2ad6 <__divsf3_pse+0x8e>
    2a70:	0e 2e       	mov	r0, r30
    2a72:	3a f0       	brmi	.+14     	; 0x2a82 <__divsf3_pse+0x3a>
    2a74:	e0 e8       	ldi	r30, 0x80	; 128
    2a76:	30 d0       	rcall	.+96     	; 0x2ad8 <__divsf3_pse+0x90>
    2a78:	91 50       	subi	r25, 0x01	; 1
    2a7a:	50 40       	sbci	r21, 0x00	; 0
    2a7c:	e6 95       	lsr	r30
    2a7e:	00 1c       	adc	r0, r0
    2a80:	ca f7       	brpl	.-14     	; 0x2a74 <__divsf3_pse+0x2c>
    2a82:	29 d0       	rcall	.+82     	; 0x2ad6 <__divsf3_pse+0x8e>
    2a84:	fe 2f       	mov	r31, r30
    2a86:	27 d0       	rcall	.+78     	; 0x2ad6 <__divsf3_pse+0x8e>
    2a88:	66 0f       	add	r22, r22
    2a8a:	77 1f       	adc	r23, r23
    2a8c:	88 1f       	adc	r24, r24
    2a8e:	bb 1f       	adc	r27, r27
    2a90:	26 17       	cp	r18, r22
    2a92:	37 07       	cpc	r19, r23
    2a94:	48 07       	cpc	r20, r24
    2a96:	ab 07       	cpc	r26, r27
    2a98:	b0 e8       	ldi	r27, 0x80	; 128
    2a9a:	09 f0       	breq	.+2      	; 0x2a9e <__divsf3_pse+0x56>
    2a9c:	bb 0b       	sbc	r27, r27
    2a9e:	80 2d       	mov	r24, r0
    2aa0:	bf 01       	movw	r22, r30
    2aa2:	ff 27       	eor	r31, r31
    2aa4:	93 58       	subi	r25, 0x83	; 131
    2aa6:	5f 4f       	sbci	r21, 0xFF	; 255
    2aa8:	2a f0       	brmi	.+10     	; 0x2ab4 <__divsf3_pse+0x6c>
    2aaa:	9e 3f       	cpi	r25, 0xFE	; 254
    2aac:	51 05       	cpc	r21, r1
    2aae:	68 f0       	brcs	.+26     	; 0x2aca <__divsf3_pse+0x82>
    2ab0:	b6 c0       	rjmp	.+364    	; 0x2c1e <__fp_inf>
    2ab2:	00 c1       	rjmp	.+512    	; 0x2cb4 <__fp_szero>
    2ab4:	5f 3f       	cpi	r21, 0xFF	; 255
    2ab6:	ec f3       	brlt	.-6      	; 0x2ab2 <__divsf3_pse+0x6a>
    2ab8:	98 3e       	cpi	r25, 0xE8	; 232
    2aba:	dc f3       	brlt	.-10     	; 0x2ab2 <__divsf3_pse+0x6a>
    2abc:	86 95       	lsr	r24
    2abe:	77 95       	ror	r23
    2ac0:	67 95       	ror	r22
    2ac2:	b7 95       	ror	r27
    2ac4:	f7 95       	ror	r31
    2ac6:	9f 5f       	subi	r25, 0xFF	; 255
    2ac8:	c9 f7       	brne	.-14     	; 0x2abc <__divsf3_pse+0x74>
    2aca:	88 0f       	add	r24, r24
    2acc:	91 1d       	adc	r25, r1
    2ace:	96 95       	lsr	r25
    2ad0:	87 95       	ror	r24
    2ad2:	97 f9       	bld	r25, 7
    2ad4:	08 95       	ret
    2ad6:	e1 e0       	ldi	r30, 0x01	; 1
    2ad8:	66 0f       	add	r22, r22
    2ada:	77 1f       	adc	r23, r23
    2adc:	88 1f       	adc	r24, r24
    2ade:	bb 1f       	adc	r27, r27
    2ae0:	62 17       	cp	r22, r18
    2ae2:	73 07       	cpc	r23, r19
    2ae4:	84 07       	cpc	r24, r20
    2ae6:	ba 07       	cpc	r27, r26
    2ae8:	20 f0       	brcs	.+8      	; 0x2af2 <__divsf3_pse+0xaa>
    2aea:	62 1b       	sub	r22, r18
    2aec:	73 0b       	sbc	r23, r19
    2aee:	84 0b       	sbc	r24, r20
    2af0:	ba 0b       	sbc	r27, r26
    2af2:	ee 1f       	adc	r30, r30
    2af4:	88 f7       	brcc	.-30     	; 0x2ad8 <__divsf3_pse+0x90>
    2af6:	e0 95       	com	r30
    2af8:	08 95       	ret

00002afa <__fixsfsi>:
    2afa:	04 d0       	rcall	.+8      	; 0x2b04 <__fixunssfsi>
    2afc:	68 94       	set
    2afe:	b1 11       	cpse	r27, r1
    2b00:	d9 c0       	rjmp	.+434    	; 0x2cb4 <__fp_szero>
    2b02:	08 95       	ret

00002b04 <__fixunssfsi>:
    2b04:	bc d0       	rcall	.+376    	; 0x2c7e <__fp_splitA>
    2b06:	88 f0       	brcs	.+34     	; 0x2b2a <__fixunssfsi+0x26>
    2b08:	9f 57       	subi	r25, 0x7F	; 127
    2b0a:	90 f0       	brcs	.+36     	; 0x2b30 <__fixunssfsi+0x2c>
    2b0c:	b9 2f       	mov	r27, r25
    2b0e:	99 27       	eor	r25, r25
    2b10:	b7 51       	subi	r27, 0x17	; 23
    2b12:	a0 f0       	brcs	.+40     	; 0x2b3c <__fixunssfsi+0x38>
    2b14:	d1 f0       	breq	.+52     	; 0x2b4a <__fixunssfsi+0x46>
    2b16:	66 0f       	add	r22, r22
    2b18:	77 1f       	adc	r23, r23
    2b1a:	88 1f       	adc	r24, r24
    2b1c:	99 1f       	adc	r25, r25
    2b1e:	1a f0       	brmi	.+6      	; 0x2b26 <__fixunssfsi+0x22>
    2b20:	ba 95       	dec	r27
    2b22:	c9 f7       	brne	.-14     	; 0x2b16 <__fixunssfsi+0x12>
    2b24:	12 c0       	rjmp	.+36     	; 0x2b4a <__fixunssfsi+0x46>
    2b26:	b1 30       	cpi	r27, 0x01	; 1
    2b28:	81 f0       	breq	.+32     	; 0x2b4a <__fixunssfsi+0x46>
    2b2a:	c3 d0       	rcall	.+390    	; 0x2cb2 <__fp_zero>
    2b2c:	b1 e0       	ldi	r27, 0x01	; 1
    2b2e:	08 95       	ret
    2b30:	c0 c0       	rjmp	.+384    	; 0x2cb2 <__fp_zero>
    2b32:	67 2f       	mov	r22, r23
    2b34:	78 2f       	mov	r23, r24
    2b36:	88 27       	eor	r24, r24
    2b38:	b8 5f       	subi	r27, 0xF8	; 248
    2b3a:	39 f0       	breq	.+14     	; 0x2b4a <__fixunssfsi+0x46>
    2b3c:	b9 3f       	cpi	r27, 0xF9	; 249
    2b3e:	cc f3       	brlt	.-14     	; 0x2b32 <__fixunssfsi+0x2e>
    2b40:	86 95       	lsr	r24
    2b42:	77 95       	ror	r23
    2b44:	67 95       	ror	r22
    2b46:	b3 95       	inc	r27
    2b48:	d9 f7       	brne	.-10     	; 0x2b40 <__fixunssfsi+0x3c>
    2b4a:	3e f4       	brtc	.+14     	; 0x2b5a <__fixunssfsi+0x56>
    2b4c:	90 95       	com	r25
    2b4e:	80 95       	com	r24
    2b50:	70 95       	com	r23
    2b52:	61 95       	neg	r22
    2b54:	7f 4f       	sbci	r23, 0xFF	; 255
    2b56:	8f 4f       	sbci	r24, 0xFF	; 255
    2b58:	9f 4f       	sbci	r25, 0xFF	; 255
    2b5a:	08 95       	ret

00002b5c <__floatunsisf>:
    2b5c:	e8 94       	clt
    2b5e:	09 c0       	rjmp	.+18     	; 0x2b72 <__floatsisf+0x12>

00002b60 <__floatsisf>:
    2b60:	97 fb       	bst	r25, 7
    2b62:	3e f4       	brtc	.+14     	; 0x2b72 <__floatsisf+0x12>
    2b64:	90 95       	com	r25
    2b66:	80 95       	com	r24
    2b68:	70 95       	com	r23
    2b6a:	61 95       	neg	r22
    2b6c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b6e:	8f 4f       	sbci	r24, 0xFF	; 255
    2b70:	9f 4f       	sbci	r25, 0xFF	; 255
    2b72:	99 23       	and	r25, r25
    2b74:	a9 f0       	breq	.+42     	; 0x2ba0 <__floatsisf+0x40>
    2b76:	f9 2f       	mov	r31, r25
    2b78:	96 e9       	ldi	r25, 0x96	; 150
    2b7a:	bb 27       	eor	r27, r27
    2b7c:	93 95       	inc	r25
    2b7e:	f6 95       	lsr	r31
    2b80:	87 95       	ror	r24
    2b82:	77 95       	ror	r23
    2b84:	67 95       	ror	r22
    2b86:	b7 95       	ror	r27
    2b88:	f1 11       	cpse	r31, r1
    2b8a:	f8 cf       	rjmp	.-16     	; 0x2b7c <__floatsisf+0x1c>
    2b8c:	fa f4       	brpl	.+62     	; 0x2bcc <__floatsisf+0x6c>
    2b8e:	bb 0f       	add	r27, r27
    2b90:	11 f4       	brne	.+4      	; 0x2b96 <__floatsisf+0x36>
    2b92:	60 ff       	sbrs	r22, 0
    2b94:	1b c0       	rjmp	.+54     	; 0x2bcc <__floatsisf+0x6c>
    2b96:	6f 5f       	subi	r22, 0xFF	; 255
    2b98:	7f 4f       	sbci	r23, 0xFF	; 255
    2b9a:	8f 4f       	sbci	r24, 0xFF	; 255
    2b9c:	9f 4f       	sbci	r25, 0xFF	; 255
    2b9e:	16 c0       	rjmp	.+44     	; 0x2bcc <__floatsisf+0x6c>
    2ba0:	88 23       	and	r24, r24
    2ba2:	11 f0       	breq	.+4      	; 0x2ba8 <__floatsisf+0x48>
    2ba4:	96 e9       	ldi	r25, 0x96	; 150
    2ba6:	11 c0       	rjmp	.+34     	; 0x2bca <__floatsisf+0x6a>
    2ba8:	77 23       	and	r23, r23
    2baa:	21 f0       	breq	.+8      	; 0x2bb4 <__floatsisf+0x54>
    2bac:	9e e8       	ldi	r25, 0x8E	; 142
    2bae:	87 2f       	mov	r24, r23
    2bb0:	76 2f       	mov	r23, r22
    2bb2:	05 c0       	rjmp	.+10     	; 0x2bbe <__floatsisf+0x5e>
    2bb4:	66 23       	and	r22, r22
    2bb6:	71 f0       	breq	.+28     	; 0x2bd4 <__floatsisf+0x74>
    2bb8:	96 e8       	ldi	r25, 0x86	; 134
    2bba:	86 2f       	mov	r24, r22
    2bbc:	70 e0       	ldi	r23, 0x00	; 0
    2bbe:	60 e0       	ldi	r22, 0x00	; 0
    2bc0:	2a f0       	brmi	.+10     	; 0x2bcc <__floatsisf+0x6c>
    2bc2:	9a 95       	dec	r25
    2bc4:	66 0f       	add	r22, r22
    2bc6:	77 1f       	adc	r23, r23
    2bc8:	88 1f       	adc	r24, r24
    2bca:	da f7       	brpl	.-10     	; 0x2bc2 <__floatsisf+0x62>
    2bcc:	88 0f       	add	r24, r24
    2bce:	96 95       	lsr	r25
    2bd0:	87 95       	ror	r24
    2bd2:	97 f9       	bld	r25, 7
    2bd4:	08 95       	ret

00002bd6 <__fp_cmp>:
    2bd6:	99 0f       	add	r25, r25
    2bd8:	00 08       	sbc	r0, r0
    2bda:	55 0f       	add	r21, r21
    2bdc:	aa 0b       	sbc	r26, r26
    2bde:	e0 e8       	ldi	r30, 0x80	; 128
    2be0:	fe ef       	ldi	r31, 0xFE	; 254
    2be2:	16 16       	cp	r1, r22
    2be4:	17 06       	cpc	r1, r23
    2be6:	e8 07       	cpc	r30, r24
    2be8:	f9 07       	cpc	r31, r25
    2bea:	c0 f0       	brcs	.+48     	; 0x2c1c <__fp_cmp+0x46>
    2bec:	12 16       	cp	r1, r18
    2bee:	13 06       	cpc	r1, r19
    2bf0:	e4 07       	cpc	r30, r20
    2bf2:	f5 07       	cpc	r31, r21
    2bf4:	98 f0       	brcs	.+38     	; 0x2c1c <__fp_cmp+0x46>
    2bf6:	62 1b       	sub	r22, r18
    2bf8:	73 0b       	sbc	r23, r19
    2bfa:	84 0b       	sbc	r24, r20
    2bfc:	95 0b       	sbc	r25, r21
    2bfe:	39 f4       	brne	.+14     	; 0x2c0e <__fp_cmp+0x38>
    2c00:	0a 26       	eor	r0, r26
    2c02:	61 f0       	breq	.+24     	; 0x2c1c <__fp_cmp+0x46>
    2c04:	23 2b       	or	r18, r19
    2c06:	24 2b       	or	r18, r20
    2c08:	25 2b       	or	r18, r21
    2c0a:	21 f4       	brne	.+8      	; 0x2c14 <__fp_cmp+0x3e>
    2c0c:	08 95       	ret
    2c0e:	0a 26       	eor	r0, r26
    2c10:	09 f4       	brne	.+2      	; 0x2c14 <__fp_cmp+0x3e>
    2c12:	a1 40       	sbci	r26, 0x01	; 1
    2c14:	a6 95       	lsr	r26
    2c16:	8f ef       	ldi	r24, 0xFF	; 255
    2c18:	81 1d       	adc	r24, r1
    2c1a:	81 1d       	adc	r24, r1
    2c1c:	08 95       	ret

00002c1e <__fp_inf>:
    2c1e:	97 f9       	bld	r25, 7
    2c20:	9f 67       	ori	r25, 0x7F	; 127
    2c22:	80 e8       	ldi	r24, 0x80	; 128
    2c24:	70 e0       	ldi	r23, 0x00	; 0
    2c26:	60 e0       	ldi	r22, 0x00	; 0
    2c28:	08 95       	ret

00002c2a <__fp_nan>:
    2c2a:	9f ef       	ldi	r25, 0xFF	; 255
    2c2c:	80 ec       	ldi	r24, 0xC0	; 192
    2c2e:	08 95       	ret

00002c30 <__fp_pscA>:
    2c30:	00 24       	eor	r0, r0
    2c32:	0a 94       	dec	r0
    2c34:	16 16       	cp	r1, r22
    2c36:	17 06       	cpc	r1, r23
    2c38:	18 06       	cpc	r1, r24
    2c3a:	09 06       	cpc	r0, r25
    2c3c:	08 95       	ret

00002c3e <__fp_pscB>:
    2c3e:	00 24       	eor	r0, r0
    2c40:	0a 94       	dec	r0
    2c42:	12 16       	cp	r1, r18
    2c44:	13 06       	cpc	r1, r19
    2c46:	14 06       	cpc	r1, r20
    2c48:	05 06       	cpc	r0, r21
    2c4a:	08 95       	ret

00002c4c <__fp_round>:
    2c4c:	09 2e       	mov	r0, r25
    2c4e:	03 94       	inc	r0
    2c50:	00 0c       	add	r0, r0
    2c52:	11 f4       	brne	.+4      	; 0x2c58 <__fp_round+0xc>
    2c54:	88 23       	and	r24, r24
    2c56:	52 f0       	brmi	.+20     	; 0x2c6c <__fp_round+0x20>
    2c58:	bb 0f       	add	r27, r27
    2c5a:	40 f4       	brcc	.+16     	; 0x2c6c <__fp_round+0x20>
    2c5c:	bf 2b       	or	r27, r31
    2c5e:	11 f4       	brne	.+4      	; 0x2c64 <__fp_round+0x18>
    2c60:	60 ff       	sbrs	r22, 0
    2c62:	04 c0       	rjmp	.+8      	; 0x2c6c <__fp_round+0x20>
    2c64:	6f 5f       	subi	r22, 0xFF	; 255
    2c66:	7f 4f       	sbci	r23, 0xFF	; 255
    2c68:	8f 4f       	sbci	r24, 0xFF	; 255
    2c6a:	9f 4f       	sbci	r25, 0xFF	; 255
    2c6c:	08 95       	ret

00002c6e <__fp_split3>:
    2c6e:	57 fd       	sbrc	r21, 7
    2c70:	90 58       	subi	r25, 0x80	; 128
    2c72:	44 0f       	add	r20, r20
    2c74:	55 1f       	adc	r21, r21
    2c76:	59 f0       	breq	.+22     	; 0x2c8e <__fp_splitA+0x10>
    2c78:	5f 3f       	cpi	r21, 0xFF	; 255
    2c7a:	71 f0       	breq	.+28     	; 0x2c98 <__fp_splitA+0x1a>
    2c7c:	47 95       	ror	r20

00002c7e <__fp_splitA>:
    2c7e:	88 0f       	add	r24, r24
    2c80:	97 fb       	bst	r25, 7
    2c82:	99 1f       	adc	r25, r25
    2c84:	61 f0       	breq	.+24     	; 0x2c9e <__fp_splitA+0x20>
    2c86:	9f 3f       	cpi	r25, 0xFF	; 255
    2c88:	79 f0       	breq	.+30     	; 0x2ca8 <__fp_splitA+0x2a>
    2c8a:	87 95       	ror	r24
    2c8c:	08 95       	ret
    2c8e:	12 16       	cp	r1, r18
    2c90:	13 06       	cpc	r1, r19
    2c92:	14 06       	cpc	r1, r20
    2c94:	55 1f       	adc	r21, r21
    2c96:	f2 cf       	rjmp	.-28     	; 0x2c7c <__fp_split3+0xe>
    2c98:	46 95       	lsr	r20
    2c9a:	f1 df       	rcall	.-30     	; 0x2c7e <__fp_splitA>
    2c9c:	08 c0       	rjmp	.+16     	; 0x2cae <__fp_splitA+0x30>
    2c9e:	16 16       	cp	r1, r22
    2ca0:	17 06       	cpc	r1, r23
    2ca2:	18 06       	cpc	r1, r24
    2ca4:	99 1f       	adc	r25, r25
    2ca6:	f1 cf       	rjmp	.-30     	; 0x2c8a <__fp_splitA+0xc>
    2ca8:	86 95       	lsr	r24
    2caa:	71 05       	cpc	r23, r1
    2cac:	61 05       	cpc	r22, r1
    2cae:	08 94       	sec
    2cb0:	08 95       	ret

00002cb2 <__fp_zero>:
    2cb2:	e8 94       	clt

00002cb4 <__fp_szero>:
    2cb4:	bb 27       	eor	r27, r27
    2cb6:	66 27       	eor	r22, r22
    2cb8:	77 27       	eor	r23, r23
    2cba:	cb 01       	movw	r24, r22
    2cbc:	97 f9       	bld	r25, 7
    2cbe:	08 95       	ret

00002cc0 <__gesf2>:
    2cc0:	8a df       	rcall	.-236    	; 0x2bd6 <__fp_cmp>
    2cc2:	08 f4       	brcc	.+2      	; 0x2cc6 <__gesf2+0x6>
    2cc4:	8f ef       	ldi	r24, 0xFF	; 255
    2cc6:	08 95       	ret

00002cc8 <__mulsf3>:
    2cc8:	0b d0       	rcall	.+22     	; 0x2ce0 <__mulsf3x>
    2cca:	c0 cf       	rjmp	.-128    	; 0x2c4c <__fp_round>
    2ccc:	b1 df       	rcall	.-158    	; 0x2c30 <__fp_pscA>
    2cce:	28 f0       	brcs	.+10     	; 0x2cda <__mulsf3+0x12>
    2cd0:	b6 df       	rcall	.-148    	; 0x2c3e <__fp_pscB>
    2cd2:	18 f0       	brcs	.+6      	; 0x2cda <__mulsf3+0x12>
    2cd4:	95 23       	and	r25, r21
    2cd6:	09 f0       	breq	.+2      	; 0x2cda <__mulsf3+0x12>
    2cd8:	a2 cf       	rjmp	.-188    	; 0x2c1e <__fp_inf>
    2cda:	a7 cf       	rjmp	.-178    	; 0x2c2a <__fp_nan>
    2cdc:	11 24       	eor	r1, r1
    2cde:	ea cf       	rjmp	.-44     	; 0x2cb4 <__fp_szero>

00002ce0 <__mulsf3x>:
    2ce0:	c6 df       	rcall	.-116    	; 0x2c6e <__fp_split3>
    2ce2:	a0 f3       	brcs	.-24     	; 0x2ccc <__mulsf3+0x4>

00002ce4 <__mulsf3_pse>:
    2ce4:	95 9f       	mul	r25, r21
    2ce6:	d1 f3       	breq	.-12     	; 0x2cdc <__mulsf3+0x14>
    2ce8:	95 0f       	add	r25, r21
    2cea:	50 e0       	ldi	r21, 0x00	; 0
    2cec:	55 1f       	adc	r21, r21
    2cee:	62 9f       	mul	r22, r18
    2cf0:	f0 01       	movw	r30, r0
    2cf2:	72 9f       	mul	r23, r18
    2cf4:	bb 27       	eor	r27, r27
    2cf6:	f0 0d       	add	r31, r0
    2cf8:	b1 1d       	adc	r27, r1
    2cfa:	63 9f       	mul	r22, r19
    2cfc:	aa 27       	eor	r26, r26
    2cfe:	f0 0d       	add	r31, r0
    2d00:	b1 1d       	adc	r27, r1
    2d02:	aa 1f       	adc	r26, r26
    2d04:	64 9f       	mul	r22, r20
    2d06:	66 27       	eor	r22, r22
    2d08:	b0 0d       	add	r27, r0
    2d0a:	a1 1d       	adc	r26, r1
    2d0c:	66 1f       	adc	r22, r22
    2d0e:	82 9f       	mul	r24, r18
    2d10:	22 27       	eor	r18, r18
    2d12:	b0 0d       	add	r27, r0
    2d14:	a1 1d       	adc	r26, r1
    2d16:	62 1f       	adc	r22, r18
    2d18:	73 9f       	mul	r23, r19
    2d1a:	b0 0d       	add	r27, r0
    2d1c:	a1 1d       	adc	r26, r1
    2d1e:	62 1f       	adc	r22, r18
    2d20:	83 9f       	mul	r24, r19
    2d22:	a0 0d       	add	r26, r0
    2d24:	61 1d       	adc	r22, r1
    2d26:	22 1f       	adc	r18, r18
    2d28:	74 9f       	mul	r23, r20
    2d2a:	33 27       	eor	r19, r19
    2d2c:	a0 0d       	add	r26, r0
    2d2e:	61 1d       	adc	r22, r1
    2d30:	23 1f       	adc	r18, r19
    2d32:	84 9f       	mul	r24, r20
    2d34:	60 0d       	add	r22, r0
    2d36:	21 1d       	adc	r18, r1
    2d38:	82 2f       	mov	r24, r18
    2d3a:	76 2f       	mov	r23, r22
    2d3c:	6a 2f       	mov	r22, r26
    2d3e:	11 24       	eor	r1, r1
    2d40:	9f 57       	subi	r25, 0x7F	; 127
    2d42:	50 40       	sbci	r21, 0x00	; 0
    2d44:	8a f0       	brmi	.+34     	; 0x2d68 <__mulsf3_pse+0x84>
    2d46:	e1 f0       	breq	.+56     	; 0x2d80 <__mulsf3_pse+0x9c>
    2d48:	88 23       	and	r24, r24
    2d4a:	4a f0       	brmi	.+18     	; 0x2d5e <__mulsf3_pse+0x7a>
    2d4c:	ee 0f       	add	r30, r30
    2d4e:	ff 1f       	adc	r31, r31
    2d50:	bb 1f       	adc	r27, r27
    2d52:	66 1f       	adc	r22, r22
    2d54:	77 1f       	adc	r23, r23
    2d56:	88 1f       	adc	r24, r24
    2d58:	91 50       	subi	r25, 0x01	; 1
    2d5a:	50 40       	sbci	r21, 0x00	; 0
    2d5c:	a9 f7       	brne	.-22     	; 0x2d48 <__mulsf3_pse+0x64>
    2d5e:	9e 3f       	cpi	r25, 0xFE	; 254
    2d60:	51 05       	cpc	r21, r1
    2d62:	70 f0       	brcs	.+28     	; 0x2d80 <__mulsf3_pse+0x9c>
    2d64:	5c cf       	rjmp	.-328    	; 0x2c1e <__fp_inf>
    2d66:	a6 cf       	rjmp	.-180    	; 0x2cb4 <__fp_szero>
    2d68:	5f 3f       	cpi	r21, 0xFF	; 255
    2d6a:	ec f3       	brlt	.-6      	; 0x2d66 <__mulsf3_pse+0x82>
    2d6c:	98 3e       	cpi	r25, 0xE8	; 232
    2d6e:	dc f3       	brlt	.-10     	; 0x2d66 <__mulsf3_pse+0x82>
    2d70:	86 95       	lsr	r24
    2d72:	77 95       	ror	r23
    2d74:	67 95       	ror	r22
    2d76:	b7 95       	ror	r27
    2d78:	f7 95       	ror	r31
    2d7a:	e7 95       	ror	r30
    2d7c:	9f 5f       	subi	r25, 0xFF	; 255
    2d7e:	c1 f7       	brne	.-16     	; 0x2d70 <__mulsf3_pse+0x8c>
    2d80:	fe 2b       	or	r31, r30
    2d82:	88 0f       	add	r24, r24
    2d84:	91 1d       	adc	r25, r1
    2d86:	96 95       	lsr	r25
    2d88:	87 95       	ror	r24
    2d8a:	97 f9       	bld	r25, 7
    2d8c:	08 95       	ret

00002d8e <__divmodhi4>:
    2d8e:	97 fb       	bst	r25, 7
    2d90:	07 2e       	mov	r0, r23
    2d92:	16 f4       	brtc	.+4      	; 0x2d98 <__divmodhi4+0xa>
    2d94:	00 94       	com	r0
    2d96:	07 d0       	rcall	.+14     	; 0x2da6 <__divmodhi4_neg1>
    2d98:	77 fd       	sbrc	r23, 7
    2d9a:	09 d0       	rcall	.+18     	; 0x2dae <__divmodhi4_neg2>
    2d9c:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <__udivmodhi4>
    2da0:	07 fc       	sbrc	r0, 7
    2da2:	05 d0       	rcall	.+10     	; 0x2dae <__divmodhi4_neg2>
    2da4:	3e f4       	brtc	.+14     	; 0x2db4 <__divmodhi4_exit>

00002da6 <__divmodhi4_neg1>:
    2da6:	90 95       	com	r25
    2da8:	81 95       	neg	r24
    2daa:	9f 4f       	sbci	r25, 0xFF	; 255
    2dac:	08 95       	ret

00002dae <__divmodhi4_neg2>:
    2dae:	70 95       	com	r23
    2db0:	61 95       	neg	r22
    2db2:	7f 4f       	sbci	r23, 0xFF	; 255

00002db4 <__divmodhi4_exit>:
    2db4:	08 95       	ret

00002db6 <__divmodsi4>:
    2db6:	05 2e       	mov	r0, r21
    2db8:	97 fb       	bst	r25, 7
    2dba:	1e f4       	brtc	.+6      	; 0x2dc2 <__divmodsi4+0xc>
    2dbc:	00 94       	com	r0
    2dbe:	0e 94 f2 16 	call	0x2de4	; 0x2de4 <__negsi2>
    2dc2:	57 fd       	sbrc	r21, 7
    2dc4:	07 d0       	rcall	.+14     	; 0x2dd4 <__divmodsi4_neg2>
    2dc6:	0e 94 0e 17 	call	0x2e1c	; 0x2e1c <__udivmodsi4>
    2dca:	07 fc       	sbrc	r0, 7
    2dcc:	03 d0       	rcall	.+6      	; 0x2dd4 <__divmodsi4_neg2>
    2dce:	4e f4       	brtc	.+18     	; 0x2de2 <__divmodsi4_exit>
    2dd0:	0c 94 f2 16 	jmp	0x2de4	; 0x2de4 <__negsi2>

00002dd4 <__divmodsi4_neg2>:
    2dd4:	50 95       	com	r21
    2dd6:	40 95       	com	r20
    2dd8:	30 95       	com	r19
    2dda:	21 95       	neg	r18
    2ddc:	3f 4f       	sbci	r19, 0xFF	; 255
    2dde:	4f 4f       	sbci	r20, 0xFF	; 255
    2de0:	5f 4f       	sbci	r21, 0xFF	; 255

00002de2 <__divmodsi4_exit>:
    2de2:	08 95       	ret

00002de4 <__negsi2>:
    2de4:	90 95       	com	r25
    2de6:	80 95       	com	r24
    2de8:	70 95       	com	r23
    2dea:	61 95       	neg	r22
    2dec:	7f 4f       	sbci	r23, 0xFF	; 255
    2dee:	8f 4f       	sbci	r24, 0xFF	; 255
    2df0:	9f 4f       	sbci	r25, 0xFF	; 255
    2df2:	08 95       	ret

00002df4 <__udivmodhi4>:
    2df4:	aa 1b       	sub	r26, r26
    2df6:	bb 1b       	sub	r27, r27
    2df8:	51 e1       	ldi	r21, 0x11	; 17
    2dfa:	07 c0       	rjmp	.+14     	; 0x2e0a <__udivmodhi4_ep>

00002dfc <__udivmodhi4_loop>:
    2dfc:	aa 1f       	adc	r26, r26
    2dfe:	bb 1f       	adc	r27, r27
    2e00:	a6 17       	cp	r26, r22
    2e02:	b7 07       	cpc	r27, r23
    2e04:	10 f0       	brcs	.+4      	; 0x2e0a <__udivmodhi4_ep>
    2e06:	a6 1b       	sub	r26, r22
    2e08:	b7 0b       	sbc	r27, r23

00002e0a <__udivmodhi4_ep>:
    2e0a:	88 1f       	adc	r24, r24
    2e0c:	99 1f       	adc	r25, r25
    2e0e:	5a 95       	dec	r21
    2e10:	a9 f7       	brne	.-22     	; 0x2dfc <__udivmodhi4_loop>
    2e12:	80 95       	com	r24
    2e14:	90 95       	com	r25
    2e16:	bc 01       	movw	r22, r24
    2e18:	cd 01       	movw	r24, r26
    2e1a:	08 95       	ret

00002e1c <__udivmodsi4>:
    2e1c:	a1 e2       	ldi	r26, 0x21	; 33
    2e1e:	1a 2e       	mov	r1, r26
    2e20:	aa 1b       	sub	r26, r26
    2e22:	bb 1b       	sub	r27, r27
    2e24:	fd 01       	movw	r30, r26
    2e26:	0d c0       	rjmp	.+26     	; 0x2e42 <__udivmodsi4_ep>

00002e28 <__udivmodsi4_loop>:
    2e28:	aa 1f       	adc	r26, r26
    2e2a:	bb 1f       	adc	r27, r27
    2e2c:	ee 1f       	adc	r30, r30
    2e2e:	ff 1f       	adc	r31, r31
    2e30:	a2 17       	cp	r26, r18
    2e32:	b3 07       	cpc	r27, r19
    2e34:	e4 07       	cpc	r30, r20
    2e36:	f5 07       	cpc	r31, r21
    2e38:	20 f0       	brcs	.+8      	; 0x2e42 <__udivmodsi4_ep>
    2e3a:	a2 1b       	sub	r26, r18
    2e3c:	b3 0b       	sbc	r27, r19
    2e3e:	e4 0b       	sbc	r30, r20
    2e40:	f5 0b       	sbc	r31, r21

00002e42 <__udivmodsi4_ep>:
    2e42:	66 1f       	adc	r22, r22
    2e44:	77 1f       	adc	r23, r23
    2e46:	88 1f       	adc	r24, r24
    2e48:	99 1f       	adc	r25, r25
    2e4a:	1a 94       	dec	r1
    2e4c:	69 f7       	brne	.-38     	; 0x2e28 <__udivmodsi4_loop>
    2e4e:	60 95       	com	r22
    2e50:	70 95       	com	r23
    2e52:	80 95       	com	r24
    2e54:	90 95       	com	r25
    2e56:	9b 01       	movw	r18, r22
    2e58:	ac 01       	movw	r20, r24
    2e5a:	bd 01       	movw	r22, r26
    2e5c:	cf 01       	movw	r24, r30
    2e5e:	08 95       	ret

00002e60 <malloc>:
    2e60:	cf 93       	push	r28
    2e62:	df 93       	push	r29
    2e64:	82 30       	cpi	r24, 0x02	; 2
    2e66:	91 05       	cpc	r25, r1
    2e68:	10 f4       	brcc	.+4      	; 0x2e6e <malloc+0xe>
    2e6a:	82 e0       	ldi	r24, 0x02	; 2
    2e6c:	90 e0       	ldi	r25, 0x00	; 0
    2e6e:	e0 91 e0 02 	lds	r30, 0x02E0
    2e72:	f0 91 e1 02 	lds	r31, 0x02E1
    2e76:	20 e0       	ldi	r18, 0x00	; 0
    2e78:	30 e0       	ldi	r19, 0x00	; 0
    2e7a:	a0 e0       	ldi	r26, 0x00	; 0
    2e7c:	b0 e0       	ldi	r27, 0x00	; 0
    2e7e:	30 97       	sbiw	r30, 0x00	; 0
    2e80:	39 f1       	breq	.+78     	; 0x2ed0 <malloc+0x70>
    2e82:	40 81       	ld	r20, Z
    2e84:	51 81       	ldd	r21, Z+1	; 0x01
    2e86:	48 17       	cp	r20, r24
    2e88:	59 07       	cpc	r21, r25
    2e8a:	b8 f0       	brcs	.+46     	; 0x2eba <malloc+0x5a>
    2e8c:	48 17       	cp	r20, r24
    2e8e:	59 07       	cpc	r21, r25
    2e90:	71 f4       	brne	.+28     	; 0x2eae <malloc+0x4e>
    2e92:	82 81       	ldd	r24, Z+2	; 0x02
    2e94:	93 81       	ldd	r25, Z+3	; 0x03
    2e96:	10 97       	sbiw	r26, 0x00	; 0
    2e98:	29 f0       	breq	.+10     	; 0x2ea4 <malloc+0x44>
    2e9a:	13 96       	adiw	r26, 0x03	; 3
    2e9c:	9c 93       	st	X, r25
    2e9e:	8e 93       	st	-X, r24
    2ea0:	12 97       	sbiw	r26, 0x02	; 2
    2ea2:	2c c0       	rjmp	.+88     	; 0x2efc <malloc+0x9c>
    2ea4:	90 93 e1 02 	sts	0x02E1, r25
    2ea8:	80 93 e0 02 	sts	0x02E0, r24
    2eac:	27 c0       	rjmp	.+78     	; 0x2efc <malloc+0x9c>
    2eae:	21 15       	cp	r18, r1
    2eb0:	31 05       	cpc	r19, r1
    2eb2:	31 f0       	breq	.+12     	; 0x2ec0 <malloc+0x60>
    2eb4:	42 17       	cp	r20, r18
    2eb6:	53 07       	cpc	r21, r19
    2eb8:	18 f0       	brcs	.+6      	; 0x2ec0 <malloc+0x60>
    2eba:	a9 01       	movw	r20, r18
    2ebc:	db 01       	movw	r26, r22
    2ebe:	01 c0       	rjmp	.+2      	; 0x2ec2 <malloc+0x62>
    2ec0:	ef 01       	movw	r28, r30
    2ec2:	9a 01       	movw	r18, r20
    2ec4:	bd 01       	movw	r22, r26
    2ec6:	df 01       	movw	r26, r30
    2ec8:	02 80       	ldd	r0, Z+2	; 0x02
    2eca:	f3 81       	ldd	r31, Z+3	; 0x03
    2ecc:	e0 2d       	mov	r30, r0
    2ece:	d7 cf       	rjmp	.-82     	; 0x2e7e <malloc+0x1e>
    2ed0:	21 15       	cp	r18, r1
    2ed2:	31 05       	cpc	r19, r1
    2ed4:	f9 f0       	breq	.+62     	; 0x2f14 <malloc+0xb4>
    2ed6:	28 1b       	sub	r18, r24
    2ed8:	39 0b       	sbc	r19, r25
    2eda:	24 30       	cpi	r18, 0x04	; 4
    2edc:	31 05       	cpc	r19, r1
    2ede:	80 f4       	brcc	.+32     	; 0x2f00 <malloc+0xa0>
    2ee0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ee2:	9b 81       	ldd	r25, Y+3	; 0x03
    2ee4:	61 15       	cp	r22, r1
    2ee6:	71 05       	cpc	r23, r1
    2ee8:	21 f0       	breq	.+8      	; 0x2ef2 <malloc+0x92>
    2eea:	fb 01       	movw	r30, r22
    2eec:	93 83       	std	Z+3, r25	; 0x03
    2eee:	82 83       	std	Z+2, r24	; 0x02
    2ef0:	04 c0       	rjmp	.+8      	; 0x2efa <malloc+0x9a>
    2ef2:	90 93 e1 02 	sts	0x02E1, r25
    2ef6:	80 93 e0 02 	sts	0x02E0, r24
    2efa:	fe 01       	movw	r30, r28
    2efc:	32 96       	adiw	r30, 0x02	; 2
    2efe:	44 c0       	rjmp	.+136    	; 0x2f88 <malloc+0x128>
    2f00:	fe 01       	movw	r30, r28
    2f02:	e2 0f       	add	r30, r18
    2f04:	f3 1f       	adc	r31, r19
    2f06:	81 93       	st	Z+, r24
    2f08:	91 93       	st	Z+, r25
    2f0a:	22 50       	subi	r18, 0x02	; 2
    2f0c:	31 09       	sbc	r19, r1
    2f0e:	39 83       	std	Y+1, r19	; 0x01
    2f10:	28 83       	st	Y, r18
    2f12:	3a c0       	rjmp	.+116    	; 0x2f88 <malloc+0x128>
    2f14:	20 91 de 02 	lds	r18, 0x02DE
    2f18:	30 91 df 02 	lds	r19, 0x02DF
    2f1c:	23 2b       	or	r18, r19
    2f1e:	41 f4       	brne	.+16     	; 0x2f30 <malloc+0xd0>
    2f20:	20 91 02 01 	lds	r18, 0x0102
    2f24:	30 91 03 01 	lds	r19, 0x0103
    2f28:	30 93 df 02 	sts	0x02DF, r19
    2f2c:	20 93 de 02 	sts	0x02DE, r18
    2f30:	20 91 00 01 	lds	r18, 0x0100
    2f34:	30 91 01 01 	lds	r19, 0x0101
    2f38:	21 15       	cp	r18, r1
    2f3a:	31 05       	cpc	r19, r1
    2f3c:	41 f4       	brne	.+16     	; 0x2f4e <malloc+0xee>
    2f3e:	2d b7       	in	r18, 0x3d	; 61
    2f40:	3e b7       	in	r19, 0x3e	; 62
    2f42:	40 91 04 01 	lds	r20, 0x0104
    2f46:	50 91 05 01 	lds	r21, 0x0105
    2f4a:	24 1b       	sub	r18, r20
    2f4c:	35 0b       	sbc	r19, r21
    2f4e:	e0 91 de 02 	lds	r30, 0x02DE
    2f52:	f0 91 df 02 	lds	r31, 0x02DF
    2f56:	e2 17       	cp	r30, r18
    2f58:	f3 07       	cpc	r31, r19
    2f5a:	a0 f4       	brcc	.+40     	; 0x2f84 <malloc+0x124>
    2f5c:	2e 1b       	sub	r18, r30
    2f5e:	3f 0b       	sbc	r19, r31
    2f60:	28 17       	cp	r18, r24
    2f62:	39 07       	cpc	r19, r25
    2f64:	78 f0       	brcs	.+30     	; 0x2f84 <malloc+0x124>
    2f66:	ac 01       	movw	r20, r24
    2f68:	4e 5f       	subi	r20, 0xFE	; 254
    2f6a:	5f 4f       	sbci	r21, 0xFF	; 255
    2f6c:	24 17       	cp	r18, r20
    2f6e:	35 07       	cpc	r19, r21
    2f70:	48 f0       	brcs	.+18     	; 0x2f84 <malloc+0x124>
    2f72:	4e 0f       	add	r20, r30
    2f74:	5f 1f       	adc	r21, r31
    2f76:	50 93 df 02 	sts	0x02DF, r21
    2f7a:	40 93 de 02 	sts	0x02DE, r20
    2f7e:	81 93       	st	Z+, r24
    2f80:	91 93       	st	Z+, r25
    2f82:	02 c0       	rjmp	.+4      	; 0x2f88 <malloc+0x128>
    2f84:	e0 e0       	ldi	r30, 0x00	; 0
    2f86:	f0 e0       	ldi	r31, 0x00	; 0
    2f88:	cf 01       	movw	r24, r30
    2f8a:	df 91       	pop	r29
    2f8c:	cf 91       	pop	r28
    2f8e:	08 95       	ret

00002f90 <free>:
    2f90:	cf 93       	push	r28
    2f92:	df 93       	push	r29
    2f94:	00 97       	sbiw	r24, 0x00	; 0
    2f96:	09 f4       	brne	.+2      	; 0x2f9a <free+0xa>
    2f98:	87 c0       	rjmp	.+270    	; 0x30a8 <free+0x118>
    2f9a:	fc 01       	movw	r30, r24
    2f9c:	32 97       	sbiw	r30, 0x02	; 2
    2f9e:	13 82       	std	Z+3, r1	; 0x03
    2fa0:	12 82       	std	Z+2, r1	; 0x02
    2fa2:	c0 91 e0 02 	lds	r28, 0x02E0
    2fa6:	d0 91 e1 02 	lds	r29, 0x02E1
    2faa:	20 97       	sbiw	r28, 0x00	; 0
    2fac:	81 f4       	brne	.+32     	; 0x2fce <free+0x3e>
    2fae:	20 81       	ld	r18, Z
    2fb0:	31 81       	ldd	r19, Z+1	; 0x01
    2fb2:	28 0f       	add	r18, r24
    2fb4:	39 1f       	adc	r19, r25
    2fb6:	80 91 de 02 	lds	r24, 0x02DE
    2fba:	90 91 df 02 	lds	r25, 0x02DF
    2fbe:	82 17       	cp	r24, r18
    2fc0:	93 07       	cpc	r25, r19
    2fc2:	79 f5       	brne	.+94     	; 0x3022 <free+0x92>
    2fc4:	f0 93 df 02 	sts	0x02DF, r31
    2fc8:	e0 93 de 02 	sts	0x02DE, r30
    2fcc:	6d c0       	rjmp	.+218    	; 0x30a8 <free+0x118>
    2fce:	de 01       	movw	r26, r28
    2fd0:	20 e0       	ldi	r18, 0x00	; 0
    2fd2:	30 e0       	ldi	r19, 0x00	; 0
    2fd4:	ae 17       	cp	r26, r30
    2fd6:	bf 07       	cpc	r27, r31
    2fd8:	50 f4       	brcc	.+20     	; 0x2fee <free+0x5e>
    2fda:	12 96       	adiw	r26, 0x02	; 2
    2fdc:	4d 91       	ld	r20, X+
    2fde:	5c 91       	ld	r21, X
    2fe0:	13 97       	sbiw	r26, 0x03	; 3
    2fe2:	9d 01       	movw	r18, r26
    2fe4:	41 15       	cp	r20, r1
    2fe6:	51 05       	cpc	r21, r1
    2fe8:	09 f1       	breq	.+66     	; 0x302c <free+0x9c>
    2fea:	da 01       	movw	r26, r20
    2fec:	f3 cf       	rjmp	.-26     	; 0x2fd4 <free+0x44>
    2fee:	b3 83       	std	Z+3, r27	; 0x03
    2ff0:	a2 83       	std	Z+2, r26	; 0x02
    2ff2:	40 81       	ld	r20, Z
    2ff4:	51 81       	ldd	r21, Z+1	; 0x01
    2ff6:	84 0f       	add	r24, r20
    2ff8:	95 1f       	adc	r25, r21
    2ffa:	8a 17       	cp	r24, r26
    2ffc:	9b 07       	cpc	r25, r27
    2ffe:	71 f4       	brne	.+28     	; 0x301c <free+0x8c>
    3000:	8d 91       	ld	r24, X+
    3002:	9c 91       	ld	r25, X
    3004:	11 97       	sbiw	r26, 0x01	; 1
    3006:	84 0f       	add	r24, r20
    3008:	95 1f       	adc	r25, r21
    300a:	02 96       	adiw	r24, 0x02	; 2
    300c:	91 83       	std	Z+1, r25	; 0x01
    300e:	80 83       	st	Z, r24
    3010:	12 96       	adiw	r26, 0x02	; 2
    3012:	8d 91       	ld	r24, X+
    3014:	9c 91       	ld	r25, X
    3016:	13 97       	sbiw	r26, 0x03	; 3
    3018:	93 83       	std	Z+3, r25	; 0x03
    301a:	82 83       	std	Z+2, r24	; 0x02
    301c:	21 15       	cp	r18, r1
    301e:	31 05       	cpc	r19, r1
    3020:	29 f4       	brne	.+10     	; 0x302c <free+0x9c>
    3022:	f0 93 e1 02 	sts	0x02E1, r31
    3026:	e0 93 e0 02 	sts	0x02E0, r30
    302a:	3e c0       	rjmp	.+124    	; 0x30a8 <free+0x118>
    302c:	d9 01       	movw	r26, r18
    302e:	13 96       	adiw	r26, 0x03	; 3
    3030:	fc 93       	st	X, r31
    3032:	ee 93       	st	-X, r30
    3034:	12 97       	sbiw	r26, 0x02	; 2
    3036:	4d 91       	ld	r20, X+
    3038:	5d 91       	ld	r21, X+
    303a:	a4 0f       	add	r26, r20
    303c:	b5 1f       	adc	r27, r21
    303e:	ea 17       	cp	r30, r26
    3040:	fb 07       	cpc	r31, r27
    3042:	79 f4       	brne	.+30     	; 0x3062 <free+0xd2>
    3044:	80 81       	ld	r24, Z
    3046:	91 81       	ldd	r25, Z+1	; 0x01
    3048:	84 0f       	add	r24, r20
    304a:	95 1f       	adc	r25, r21
    304c:	02 96       	adiw	r24, 0x02	; 2
    304e:	d9 01       	movw	r26, r18
    3050:	11 96       	adiw	r26, 0x01	; 1
    3052:	9c 93       	st	X, r25
    3054:	8e 93       	st	-X, r24
    3056:	82 81       	ldd	r24, Z+2	; 0x02
    3058:	93 81       	ldd	r25, Z+3	; 0x03
    305a:	13 96       	adiw	r26, 0x03	; 3
    305c:	9c 93       	st	X, r25
    305e:	8e 93       	st	-X, r24
    3060:	12 97       	sbiw	r26, 0x02	; 2
    3062:	e0 e0       	ldi	r30, 0x00	; 0
    3064:	f0 e0       	ldi	r31, 0x00	; 0
    3066:	8a 81       	ldd	r24, Y+2	; 0x02
    3068:	9b 81       	ldd	r25, Y+3	; 0x03
    306a:	00 97       	sbiw	r24, 0x00	; 0
    306c:	19 f0       	breq	.+6      	; 0x3074 <free+0xe4>
    306e:	fe 01       	movw	r30, r28
    3070:	ec 01       	movw	r28, r24
    3072:	f9 cf       	rjmp	.-14     	; 0x3066 <free+0xd6>
    3074:	ce 01       	movw	r24, r28
    3076:	02 96       	adiw	r24, 0x02	; 2
    3078:	28 81       	ld	r18, Y
    307a:	39 81       	ldd	r19, Y+1	; 0x01
    307c:	82 0f       	add	r24, r18
    307e:	93 1f       	adc	r25, r19
    3080:	20 91 de 02 	lds	r18, 0x02DE
    3084:	30 91 df 02 	lds	r19, 0x02DF
    3088:	28 17       	cp	r18, r24
    308a:	39 07       	cpc	r19, r25
    308c:	69 f4       	brne	.+26     	; 0x30a8 <free+0x118>
    308e:	30 97       	sbiw	r30, 0x00	; 0
    3090:	29 f4       	brne	.+10     	; 0x309c <free+0x10c>
    3092:	10 92 e1 02 	sts	0x02E1, r1
    3096:	10 92 e0 02 	sts	0x02E0, r1
    309a:	02 c0       	rjmp	.+4      	; 0x30a0 <free+0x110>
    309c:	13 82       	std	Z+3, r1	; 0x03
    309e:	12 82       	std	Z+2, r1	; 0x02
    30a0:	d0 93 df 02 	sts	0x02DF, r29
    30a4:	c0 93 de 02 	sts	0x02DE, r28
    30a8:	df 91       	pop	r29
    30aa:	cf 91       	pop	r28
    30ac:	08 95       	ret

000030ae <do_rand>:
    30ae:	8f 92       	push	r8
    30b0:	9f 92       	push	r9
    30b2:	af 92       	push	r10
    30b4:	bf 92       	push	r11
    30b6:	cf 92       	push	r12
    30b8:	df 92       	push	r13
    30ba:	ef 92       	push	r14
    30bc:	ff 92       	push	r15
    30be:	cf 93       	push	r28
    30c0:	df 93       	push	r29
    30c2:	ec 01       	movw	r28, r24
    30c4:	68 81       	ld	r22, Y
    30c6:	79 81       	ldd	r23, Y+1	; 0x01
    30c8:	8a 81       	ldd	r24, Y+2	; 0x02
    30ca:	9b 81       	ldd	r25, Y+3	; 0x03
    30cc:	61 15       	cp	r22, r1
    30ce:	71 05       	cpc	r23, r1
    30d0:	81 05       	cpc	r24, r1
    30d2:	91 05       	cpc	r25, r1
    30d4:	21 f4       	brne	.+8      	; 0x30de <do_rand+0x30>
    30d6:	64 e2       	ldi	r22, 0x24	; 36
    30d8:	79 ed       	ldi	r23, 0xD9	; 217
    30da:	8b e5       	ldi	r24, 0x5B	; 91
    30dc:	97 e0       	ldi	r25, 0x07	; 7
    30de:	2d e1       	ldi	r18, 0x1D	; 29
    30e0:	33 ef       	ldi	r19, 0xF3	; 243
    30e2:	41 e0       	ldi	r20, 0x01	; 1
    30e4:	50 e0       	ldi	r21, 0x00	; 0
    30e6:	0e 94 db 16 	call	0x2db6	; 0x2db6 <__divmodsi4>
    30ea:	49 01       	movw	r8, r18
    30ec:	5a 01       	movw	r10, r20
    30ee:	9b 01       	movw	r18, r22
    30f0:	ac 01       	movw	r20, r24
    30f2:	a7 ea       	ldi	r26, 0xA7	; 167
    30f4:	b1 e4       	ldi	r27, 0x41	; 65
    30f6:	0e 94 d1 1b 	call	0x37a2	; 0x37a2 <__muluhisi3>
    30fa:	6b 01       	movw	r12, r22
    30fc:	7c 01       	movw	r14, r24
    30fe:	ac ee       	ldi	r26, 0xEC	; 236
    3100:	b4 ef       	ldi	r27, 0xF4	; 244
    3102:	a5 01       	movw	r20, r10
    3104:	94 01       	movw	r18, r8
    3106:	0e 94 df 1b 	call	0x37be	; 0x37be <__mulohisi3>
    310a:	c6 0e       	add	r12, r22
    310c:	d7 1e       	adc	r13, r23
    310e:	e8 1e       	adc	r14, r24
    3110:	f9 1e       	adc	r15, r25
    3112:	f7 fe       	sbrs	r15, 7
    3114:	06 c0       	rjmp	.+12     	; 0x3122 <do_rand+0x74>
    3116:	81 e0       	ldi	r24, 0x01	; 1
    3118:	c8 1a       	sub	r12, r24
    311a:	d1 08       	sbc	r13, r1
    311c:	e1 08       	sbc	r14, r1
    311e:	80 e8       	ldi	r24, 0x80	; 128
    3120:	f8 0a       	sbc	r15, r24
    3122:	c8 82       	st	Y, r12
    3124:	d9 82       	std	Y+1, r13	; 0x01
    3126:	ea 82       	std	Y+2, r14	; 0x02
    3128:	fb 82       	std	Y+3, r15	; 0x03
    312a:	c6 01       	movw	r24, r12
    312c:	9f 77       	andi	r25, 0x7F	; 127
    312e:	df 91       	pop	r29
    3130:	cf 91       	pop	r28
    3132:	ff 90       	pop	r15
    3134:	ef 90       	pop	r14
    3136:	df 90       	pop	r13
    3138:	cf 90       	pop	r12
    313a:	bf 90       	pop	r11
    313c:	af 90       	pop	r10
    313e:	9f 90       	pop	r9
    3140:	8f 90       	pop	r8
    3142:	08 95       	ret

00003144 <rand_r>:
    3144:	0e 94 57 18 	call	0x30ae	; 0x30ae <do_rand>
    3148:	08 95       	ret

0000314a <rand>:
    314a:	86 e0       	ldi	r24, 0x06	; 6
    314c:	91 e0       	ldi	r25, 0x01	; 1
    314e:	0e 94 57 18 	call	0x30ae	; 0x30ae <do_rand>
    3152:	08 95       	ret

00003154 <srand>:
    3154:	a0 e0       	ldi	r26, 0x00	; 0
    3156:	b0 e0       	ldi	r27, 0x00	; 0
    3158:	80 93 06 01 	sts	0x0106, r24
    315c:	90 93 07 01 	sts	0x0107, r25
    3160:	a0 93 08 01 	sts	0x0108, r26
    3164:	b0 93 09 01 	sts	0x0109, r27
    3168:	08 95       	ret

0000316a <fdevopen>:
    316a:	0f 93       	push	r16
    316c:	1f 93       	push	r17
    316e:	cf 93       	push	r28
    3170:	df 93       	push	r29
    3172:	ec 01       	movw	r28, r24
    3174:	8b 01       	movw	r16, r22
    3176:	00 97       	sbiw	r24, 0x00	; 0
    3178:	31 f4       	brne	.+12     	; 0x3186 <fdevopen+0x1c>
    317a:	61 15       	cp	r22, r1
    317c:	71 05       	cpc	r23, r1
    317e:	19 f4       	brne	.+6      	; 0x3186 <fdevopen+0x1c>
    3180:	80 e0       	ldi	r24, 0x00	; 0
    3182:	90 e0       	ldi	r25, 0x00	; 0
    3184:	38 c0       	rjmp	.+112    	; 0x31f6 <fdevopen+0x8c>
    3186:	6e e0       	ldi	r22, 0x0E	; 14
    3188:	70 e0       	ldi	r23, 0x00	; 0
    318a:	81 e0       	ldi	r24, 0x01	; 1
    318c:	90 e0       	ldi	r25, 0x00	; 0
    318e:	0e 94 08 1b 	call	0x3610	; 0x3610 <calloc>
    3192:	fc 01       	movw	r30, r24
    3194:	00 97       	sbiw	r24, 0x00	; 0
    3196:	a1 f3       	breq	.-24     	; 0x3180 <fdevopen+0x16>
    3198:	80 e8       	ldi	r24, 0x80	; 128
    319a:	83 83       	std	Z+3, r24	; 0x03
    319c:	01 15       	cp	r16, r1
    319e:	11 05       	cpc	r17, r1
    31a0:	71 f0       	breq	.+28     	; 0x31be <fdevopen+0x54>
    31a2:	13 87       	std	Z+11, r17	; 0x0b
    31a4:	02 87       	std	Z+10, r16	; 0x0a
    31a6:	81 e8       	ldi	r24, 0x81	; 129
    31a8:	83 83       	std	Z+3, r24	; 0x03
    31aa:	80 91 e2 02 	lds	r24, 0x02E2
    31ae:	90 91 e3 02 	lds	r25, 0x02E3
    31b2:	89 2b       	or	r24, r25
    31b4:	21 f4       	brne	.+8      	; 0x31be <fdevopen+0x54>
    31b6:	f0 93 e3 02 	sts	0x02E3, r31
    31ba:	e0 93 e2 02 	sts	0x02E2, r30
    31be:	20 97       	sbiw	r28, 0x00	; 0
    31c0:	c9 f0       	breq	.+50     	; 0x31f4 <fdevopen+0x8a>
    31c2:	d1 87       	std	Z+9, r29	; 0x09
    31c4:	c0 87       	std	Z+8, r28	; 0x08
    31c6:	83 81       	ldd	r24, Z+3	; 0x03
    31c8:	82 60       	ori	r24, 0x02	; 2
    31ca:	83 83       	std	Z+3, r24	; 0x03
    31cc:	80 91 e4 02 	lds	r24, 0x02E4
    31d0:	90 91 e5 02 	lds	r25, 0x02E5
    31d4:	89 2b       	or	r24, r25
    31d6:	71 f4       	brne	.+28     	; 0x31f4 <fdevopen+0x8a>
    31d8:	f0 93 e5 02 	sts	0x02E5, r31
    31dc:	e0 93 e4 02 	sts	0x02E4, r30
    31e0:	80 91 e6 02 	lds	r24, 0x02E6
    31e4:	90 91 e7 02 	lds	r25, 0x02E7
    31e8:	89 2b       	or	r24, r25
    31ea:	21 f4       	brne	.+8      	; 0x31f4 <fdevopen+0x8a>
    31ec:	f0 93 e7 02 	sts	0x02E7, r31
    31f0:	e0 93 e6 02 	sts	0x02E6, r30
    31f4:	cf 01       	movw	r24, r30
    31f6:	df 91       	pop	r29
    31f8:	cf 91       	pop	r28
    31fa:	1f 91       	pop	r17
    31fc:	0f 91       	pop	r16
    31fe:	08 95       	ret

00003200 <printf>:
    3200:	a0 e0       	ldi	r26, 0x00	; 0
    3202:	b0 e0       	ldi	r27, 0x00	; 0
    3204:	e6 e0       	ldi	r30, 0x06	; 6
    3206:	f9 e1       	ldi	r31, 0x19	; 25
    3208:	0c 94 f4 1b 	jmp	0x37e8	; 0x37e8 <__prologue_saves__+0x20>
    320c:	fe 01       	movw	r30, r28
    320e:	35 96       	adiw	r30, 0x05	; 5
    3210:	61 91       	ld	r22, Z+
    3212:	71 91       	ld	r23, Z+
    3214:	af 01       	movw	r20, r30
    3216:	80 91 e4 02 	lds	r24, 0x02E4
    321a:	90 91 e5 02 	lds	r25, 0x02E5
    321e:	0e 94 36 19 	call	0x326c	; 0x326c <vfprintf>
    3222:	e2 e0       	ldi	r30, 0x02	; 2
    3224:	0c 94 10 1c 	jmp	0x3820	; 0x3820 <__epilogue_restores__+0x20>

00003228 <sprintf>:
    3228:	ae e0       	ldi	r26, 0x0E	; 14
    322a:	b0 e0       	ldi	r27, 0x00	; 0
    322c:	ea e1       	ldi	r30, 0x1A	; 26
    322e:	f9 e1       	ldi	r31, 0x19	; 25
    3230:	0c 94 f2 1b 	jmp	0x37e4	; 0x37e4 <__prologue_saves__+0x1c>
    3234:	0d 89       	ldd	r16, Y+21	; 0x15
    3236:	1e 89       	ldd	r17, Y+22	; 0x16
    3238:	86 e0       	ldi	r24, 0x06	; 6
    323a:	8c 83       	std	Y+4, r24	; 0x04
    323c:	1a 83       	std	Y+2, r17	; 0x02
    323e:	09 83       	std	Y+1, r16	; 0x01
    3240:	8f ef       	ldi	r24, 0xFF	; 255
    3242:	9f e7       	ldi	r25, 0x7F	; 127
    3244:	9e 83       	std	Y+6, r25	; 0x06
    3246:	8d 83       	std	Y+5, r24	; 0x05
    3248:	ae 01       	movw	r20, r28
    324a:	47 5e       	subi	r20, 0xE7	; 231
    324c:	5f 4f       	sbci	r21, 0xFF	; 255
    324e:	6f 89       	ldd	r22, Y+23	; 0x17
    3250:	78 8d       	ldd	r23, Y+24	; 0x18
    3252:	ce 01       	movw	r24, r28
    3254:	01 96       	adiw	r24, 0x01	; 1
    3256:	0e 94 36 19 	call	0x326c	; 0x326c <vfprintf>
    325a:	ef 81       	ldd	r30, Y+7	; 0x07
    325c:	f8 85       	ldd	r31, Y+8	; 0x08
    325e:	e0 0f       	add	r30, r16
    3260:	f1 1f       	adc	r31, r17
    3262:	10 82       	st	Z, r1
    3264:	2e 96       	adiw	r28, 0x0e	; 14
    3266:	e4 e0       	ldi	r30, 0x04	; 4
    3268:	0c 94 0e 1c 	jmp	0x381c	; 0x381c <__epilogue_restores__+0x1c>

0000326c <vfprintf>:
    326c:	ac e0       	ldi	r26, 0x0C	; 12
    326e:	b0 e0       	ldi	r27, 0x00	; 0
    3270:	ec e3       	ldi	r30, 0x3C	; 60
    3272:	f9 e1       	ldi	r31, 0x19	; 25
    3274:	0c 94 e4 1b 	jmp	0x37c8	; 0x37c8 <__prologue_saves__>
    3278:	7c 01       	movw	r14, r24
    327a:	6b 01       	movw	r12, r22
    327c:	8a 01       	movw	r16, r20
    327e:	fc 01       	movw	r30, r24
    3280:	17 82       	std	Z+7, r1	; 0x07
    3282:	16 82       	std	Z+6, r1	; 0x06
    3284:	83 81       	ldd	r24, Z+3	; 0x03
    3286:	81 ff       	sbrs	r24, 1
    3288:	bd c1       	rjmp	.+890    	; 0x3604 <vfprintf+0x398>
    328a:	ce 01       	movw	r24, r28
    328c:	01 96       	adiw	r24, 0x01	; 1
    328e:	4c 01       	movw	r8, r24
    3290:	f7 01       	movw	r30, r14
    3292:	93 81       	ldd	r25, Z+3	; 0x03
    3294:	f6 01       	movw	r30, r12
    3296:	93 fd       	sbrc	r25, 3
    3298:	85 91       	lpm	r24, Z+
    329a:	93 ff       	sbrs	r25, 3
    329c:	81 91       	ld	r24, Z+
    329e:	6f 01       	movw	r12, r30
    32a0:	88 23       	and	r24, r24
    32a2:	09 f4       	brne	.+2      	; 0x32a6 <vfprintf+0x3a>
    32a4:	ab c1       	rjmp	.+854    	; 0x35fc <vfprintf+0x390>
    32a6:	85 32       	cpi	r24, 0x25	; 37
    32a8:	39 f4       	brne	.+14     	; 0x32b8 <vfprintf+0x4c>
    32aa:	93 fd       	sbrc	r25, 3
    32ac:	85 91       	lpm	r24, Z+
    32ae:	93 ff       	sbrs	r25, 3
    32b0:	81 91       	ld	r24, Z+
    32b2:	6f 01       	movw	r12, r30
    32b4:	85 32       	cpi	r24, 0x25	; 37
    32b6:	29 f4       	brne	.+10     	; 0x32c2 <vfprintf+0x56>
    32b8:	b7 01       	movw	r22, r14
    32ba:	90 e0       	ldi	r25, 0x00	; 0
    32bc:	0e 94 41 1b 	call	0x3682	; 0x3682 <fputc>
    32c0:	e7 cf       	rjmp	.-50     	; 0x3290 <vfprintf+0x24>
    32c2:	51 2c       	mov	r5, r1
    32c4:	31 2c       	mov	r3, r1
    32c6:	20 e0       	ldi	r18, 0x00	; 0
    32c8:	20 32       	cpi	r18, 0x20	; 32
    32ca:	a0 f4       	brcc	.+40     	; 0x32f4 <vfprintf+0x88>
    32cc:	8b 32       	cpi	r24, 0x2B	; 43
    32ce:	69 f0       	breq	.+26     	; 0x32ea <vfprintf+0x7e>
    32d0:	30 f4       	brcc	.+12     	; 0x32de <vfprintf+0x72>
    32d2:	80 32       	cpi	r24, 0x20	; 32
    32d4:	59 f0       	breq	.+22     	; 0x32ec <vfprintf+0x80>
    32d6:	83 32       	cpi	r24, 0x23	; 35
    32d8:	69 f4       	brne	.+26     	; 0x32f4 <vfprintf+0x88>
    32da:	20 61       	ori	r18, 0x10	; 16
    32dc:	2c c0       	rjmp	.+88     	; 0x3336 <vfprintf+0xca>
    32de:	8d 32       	cpi	r24, 0x2D	; 45
    32e0:	39 f0       	breq	.+14     	; 0x32f0 <vfprintf+0x84>
    32e2:	80 33       	cpi	r24, 0x30	; 48
    32e4:	39 f4       	brne	.+14     	; 0x32f4 <vfprintf+0x88>
    32e6:	21 60       	ori	r18, 0x01	; 1
    32e8:	26 c0       	rjmp	.+76     	; 0x3336 <vfprintf+0xca>
    32ea:	22 60       	ori	r18, 0x02	; 2
    32ec:	24 60       	ori	r18, 0x04	; 4
    32ee:	23 c0       	rjmp	.+70     	; 0x3336 <vfprintf+0xca>
    32f0:	28 60       	ori	r18, 0x08	; 8
    32f2:	21 c0       	rjmp	.+66     	; 0x3336 <vfprintf+0xca>
    32f4:	27 fd       	sbrc	r18, 7
    32f6:	27 c0       	rjmp	.+78     	; 0x3346 <vfprintf+0xda>
    32f8:	30 ed       	ldi	r19, 0xD0	; 208
    32fa:	38 0f       	add	r19, r24
    32fc:	3a 30       	cpi	r19, 0x0A	; 10
    32fe:	78 f4       	brcc	.+30     	; 0x331e <vfprintf+0xb2>
    3300:	26 ff       	sbrs	r18, 6
    3302:	06 c0       	rjmp	.+12     	; 0x3310 <vfprintf+0xa4>
    3304:	fa e0       	ldi	r31, 0x0A	; 10
    3306:	5f 9e       	mul	r5, r31
    3308:	30 0d       	add	r19, r0
    330a:	11 24       	eor	r1, r1
    330c:	53 2e       	mov	r5, r19
    330e:	13 c0       	rjmp	.+38     	; 0x3336 <vfprintf+0xca>
    3310:	8a e0       	ldi	r24, 0x0A	; 10
    3312:	38 9e       	mul	r3, r24
    3314:	30 0d       	add	r19, r0
    3316:	11 24       	eor	r1, r1
    3318:	33 2e       	mov	r3, r19
    331a:	20 62       	ori	r18, 0x20	; 32
    331c:	0c c0       	rjmp	.+24     	; 0x3336 <vfprintf+0xca>
    331e:	8e 32       	cpi	r24, 0x2E	; 46
    3320:	21 f4       	brne	.+8      	; 0x332a <vfprintf+0xbe>
    3322:	26 fd       	sbrc	r18, 6
    3324:	6b c1       	rjmp	.+726    	; 0x35fc <vfprintf+0x390>
    3326:	20 64       	ori	r18, 0x40	; 64
    3328:	06 c0       	rjmp	.+12     	; 0x3336 <vfprintf+0xca>
    332a:	8c 36       	cpi	r24, 0x6C	; 108
    332c:	11 f4       	brne	.+4      	; 0x3332 <vfprintf+0xc6>
    332e:	20 68       	ori	r18, 0x80	; 128
    3330:	02 c0       	rjmp	.+4      	; 0x3336 <vfprintf+0xca>
    3332:	88 36       	cpi	r24, 0x68	; 104
    3334:	41 f4       	brne	.+16     	; 0x3346 <vfprintf+0xda>
    3336:	f6 01       	movw	r30, r12
    3338:	93 fd       	sbrc	r25, 3
    333a:	85 91       	lpm	r24, Z+
    333c:	93 ff       	sbrs	r25, 3
    333e:	81 91       	ld	r24, Z+
    3340:	6f 01       	movw	r12, r30
    3342:	81 11       	cpse	r24, r1
    3344:	c1 cf       	rjmp	.-126    	; 0x32c8 <vfprintf+0x5c>
    3346:	98 2f       	mov	r25, r24
    3348:	9f 7d       	andi	r25, 0xDF	; 223
    334a:	95 54       	subi	r25, 0x45	; 69
    334c:	93 30       	cpi	r25, 0x03	; 3
    334e:	28 f4       	brcc	.+10     	; 0x335a <vfprintf+0xee>
    3350:	0c 5f       	subi	r16, 0xFC	; 252
    3352:	1f 4f       	sbci	r17, 0xFF	; 255
    3354:	ff e3       	ldi	r31, 0x3F	; 63
    3356:	f9 83       	std	Y+1, r31	; 0x01
    3358:	0d c0       	rjmp	.+26     	; 0x3374 <vfprintf+0x108>
    335a:	83 36       	cpi	r24, 0x63	; 99
    335c:	31 f0       	breq	.+12     	; 0x336a <vfprintf+0xfe>
    335e:	83 37       	cpi	r24, 0x73	; 115
    3360:	71 f0       	breq	.+28     	; 0x337e <vfprintf+0x112>
    3362:	83 35       	cpi	r24, 0x53	; 83
    3364:	09 f0       	breq	.+2      	; 0x3368 <vfprintf+0xfc>
    3366:	5b c0       	rjmp	.+182    	; 0x341e <vfprintf+0x1b2>
    3368:	22 c0       	rjmp	.+68     	; 0x33ae <vfprintf+0x142>
    336a:	f8 01       	movw	r30, r16
    336c:	80 81       	ld	r24, Z
    336e:	89 83       	std	Y+1, r24	; 0x01
    3370:	0e 5f       	subi	r16, 0xFE	; 254
    3372:	1f 4f       	sbci	r17, 0xFF	; 255
    3374:	44 24       	eor	r4, r4
    3376:	43 94       	inc	r4
    3378:	51 2c       	mov	r5, r1
    337a:	54 01       	movw	r10, r8
    337c:	15 c0       	rjmp	.+42     	; 0x33a8 <vfprintf+0x13c>
    337e:	38 01       	movw	r6, r16
    3380:	f2 e0       	ldi	r31, 0x02	; 2
    3382:	6f 0e       	add	r6, r31
    3384:	71 1c       	adc	r7, r1
    3386:	f8 01       	movw	r30, r16
    3388:	a0 80       	ld	r10, Z
    338a:	b1 80       	ldd	r11, Z+1	; 0x01
    338c:	26 ff       	sbrs	r18, 6
    338e:	03 c0       	rjmp	.+6      	; 0x3396 <vfprintf+0x12a>
    3390:	65 2d       	mov	r22, r5
    3392:	70 e0       	ldi	r23, 0x00	; 0
    3394:	02 c0       	rjmp	.+4      	; 0x339a <vfprintf+0x12e>
    3396:	6f ef       	ldi	r22, 0xFF	; 255
    3398:	7f ef       	ldi	r23, 0xFF	; 255
    339a:	c5 01       	movw	r24, r10
    339c:	2c 87       	std	Y+12, r18	; 0x0c
    339e:	0e 94 36 1b 	call	0x366c	; 0x366c <strnlen>
    33a2:	2c 01       	movw	r4, r24
    33a4:	83 01       	movw	r16, r6
    33a6:	2c 85       	ldd	r18, Y+12	; 0x0c
    33a8:	2f 77       	andi	r18, 0x7F	; 127
    33aa:	22 2e       	mov	r2, r18
    33ac:	17 c0       	rjmp	.+46     	; 0x33dc <vfprintf+0x170>
    33ae:	38 01       	movw	r6, r16
    33b0:	f2 e0       	ldi	r31, 0x02	; 2
    33b2:	6f 0e       	add	r6, r31
    33b4:	71 1c       	adc	r7, r1
    33b6:	f8 01       	movw	r30, r16
    33b8:	a0 80       	ld	r10, Z
    33ba:	b1 80       	ldd	r11, Z+1	; 0x01
    33bc:	26 ff       	sbrs	r18, 6
    33be:	03 c0       	rjmp	.+6      	; 0x33c6 <vfprintf+0x15a>
    33c0:	65 2d       	mov	r22, r5
    33c2:	70 e0       	ldi	r23, 0x00	; 0
    33c4:	02 c0       	rjmp	.+4      	; 0x33ca <vfprintf+0x15e>
    33c6:	6f ef       	ldi	r22, 0xFF	; 255
    33c8:	7f ef       	ldi	r23, 0xFF	; 255
    33ca:	c5 01       	movw	r24, r10
    33cc:	2c 87       	std	Y+12, r18	; 0x0c
    33ce:	0e 94 24 1b 	call	0x3648	; 0x3648 <strnlen_P>
    33d2:	2c 01       	movw	r4, r24
    33d4:	2c 85       	ldd	r18, Y+12	; 0x0c
    33d6:	20 68       	ori	r18, 0x80	; 128
    33d8:	22 2e       	mov	r2, r18
    33da:	83 01       	movw	r16, r6
    33dc:	23 fc       	sbrc	r2, 3
    33de:	1b c0       	rjmp	.+54     	; 0x3416 <vfprintf+0x1aa>
    33e0:	83 2d       	mov	r24, r3
    33e2:	90 e0       	ldi	r25, 0x00	; 0
    33e4:	48 16       	cp	r4, r24
    33e6:	59 06       	cpc	r5, r25
    33e8:	b0 f4       	brcc	.+44     	; 0x3416 <vfprintf+0x1aa>
    33ea:	b7 01       	movw	r22, r14
    33ec:	80 e2       	ldi	r24, 0x20	; 32
    33ee:	90 e0       	ldi	r25, 0x00	; 0
    33f0:	0e 94 41 1b 	call	0x3682	; 0x3682 <fputc>
    33f4:	3a 94       	dec	r3
    33f6:	f4 cf       	rjmp	.-24     	; 0x33e0 <vfprintf+0x174>
    33f8:	f5 01       	movw	r30, r10
    33fa:	27 fc       	sbrc	r2, 7
    33fc:	85 91       	lpm	r24, Z+
    33fe:	27 fe       	sbrs	r2, 7
    3400:	81 91       	ld	r24, Z+
    3402:	5f 01       	movw	r10, r30
    3404:	b7 01       	movw	r22, r14
    3406:	90 e0       	ldi	r25, 0x00	; 0
    3408:	0e 94 41 1b 	call	0x3682	; 0x3682 <fputc>
    340c:	31 10       	cpse	r3, r1
    340e:	3a 94       	dec	r3
    3410:	f1 e0       	ldi	r31, 0x01	; 1
    3412:	4f 1a       	sub	r4, r31
    3414:	51 08       	sbc	r5, r1
    3416:	41 14       	cp	r4, r1
    3418:	51 04       	cpc	r5, r1
    341a:	71 f7       	brne	.-36     	; 0x33f8 <vfprintf+0x18c>
    341c:	e5 c0       	rjmp	.+458    	; 0x35e8 <vfprintf+0x37c>
    341e:	84 36       	cpi	r24, 0x64	; 100
    3420:	11 f0       	breq	.+4      	; 0x3426 <vfprintf+0x1ba>
    3422:	89 36       	cpi	r24, 0x69	; 105
    3424:	39 f5       	brne	.+78     	; 0x3474 <vfprintf+0x208>
    3426:	f8 01       	movw	r30, r16
    3428:	27 ff       	sbrs	r18, 7
    342a:	07 c0       	rjmp	.+14     	; 0x343a <vfprintf+0x1ce>
    342c:	60 81       	ld	r22, Z
    342e:	71 81       	ldd	r23, Z+1	; 0x01
    3430:	82 81       	ldd	r24, Z+2	; 0x02
    3432:	93 81       	ldd	r25, Z+3	; 0x03
    3434:	0c 5f       	subi	r16, 0xFC	; 252
    3436:	1f 4f       	sbci	r17, 0xFF	; 255
    3438:	08 c0       	rjmp	.+16     	; 0x344a <vfprintf+0x1de>
    343a:	60 81       	ld	r22, Z
    343c:	71 81       	ldd	r23, Z+1	; 0x01
    343e:	88 27       	eor	r24, r24
    3440:	77 fd       	sbrc	r23, 7
    3442:	80 95       	com	r24
    3444:	98 2f       	mov	r25, r24
    3446:	0e 5f       	subi	r16, 0xFE	; 254
    3448:	1f 4f       	sbci	r17, 0xFF	; 255
    344a:	2f 76       	andi	r18, 0x6F	; 111
    344c:	b2 2e       	mov	r11, r18
    344e:	97 ff       	sbrs	r25, 7
    3450:	09 c0       	rjmp	.+18     	; 0x3464 <vfprintf+0x1f8>
    3452:	90 95       	com	r25
    3454:	80 95       	com	r24
    3456:	70 95       	com	r23
    3458:	61 95       	neg	r22
    345a:	7f 4f       	sbci	r23, 0xFF	; 255
    345c:	8f 4f       	sbci	r24, 0xFF	; 255
    345e:	9f 4f       	sbci	r25, 0xFF	; 255
    3460:	20 68       	ori	r18, 0x80	; 128
    3462:	b2 2e       	mov	r11, r18
    3464:	2a e0       	ldi	r18, 0x0A	; 10
    3466:	30 e0       	ldi	r19, 0x00	; 0
    3468:	a4 01       	movw	r20, r8
    346a:	0e 94 73 1b 	call	0x36e6	; 0x36e6 <__ultoa_invert>
    346e:	a8 2e       	mov	r10, r24
    3470:	a8 18       	sub	r10, r8
    3472:	44 c0       	rjmp	.+136    	; 0x34fc <vfprintf+0x290>
    3474:	85 37       	cpi	r24, 0x75	; 117
    3476:	29 f4       	brne	.+10     	; 0x3482 <vfprintf+0x216>
    3478:	2f 7e       	andi	r18, 0xEF	; 239
    347a:	b2 2e       	mov	r11, r18
    347c:	2a e0       	ldi	r18, 0x0A	; 10
    347e:	30 e0       	ldi	r19, 0x00	; 0
    3480:	25 c0       	rjmp	.+74     	; 0x34cc <vfprintf+0x260>
    3482:	f2 2f       	mov	r31, r18
    3484:	f9 7f       	andi	r31, 0xF9	; 249
    3486:	bf 2e       	mov	r11, r31
    3488:	8f 36       	cpi	r24, 0x6F	; 111
    348a:	c1 f0       	breq	.+48     	; 0x34bc <vfprintf+0x250>
    348c:	18 f4       	brcc	.+6      	; 0x3494 <vfprintf+0x228>
    348e:	88 35       	cpi	r24, 0x58	; 88
    3490:	79 f0       	breq	.+30     	; 0x34b0 <vfprintf+0x244>
    3492:	b4 c0       	rjmp	.+360    	; 0x35fc <vfprintf+0x390>
    3494:	80 37       	cpi	r24, 0x70	; 112
    3496:	19 f0       	breq	.+6      	; 0x349e <vfprintf+0x232>
    3498:	88 37       	cpi	r24, 0x78	; 120
    349a:	21 f0       	breq	.+8      	; 0x34a4 <vfprintf+0x238>
    349c:	af c0       	rjmp	.+350    	; 0x35fc <vfprintf+0x390>
    349e:	2f 2f       	mov	r18, r31
    34a0:	20 61       	ori	r18, 0x10	; 16
    34a2:	b2 2e       	mov	r11, r18
    34a4:	b4 fe       	sbrs	r11, 4
    34a6:	0d c0       	rjmp	.+26     	; 0x34c2 <vfprintf+0x256>
    34a8:	8b 2d       	mov	r24, r11
    34aa:	84 60       	ori	r24, 0x04	; 4
    34ac:	b8 2e       	mov	r11, r24
    34ae:	09 c0       	rjmp	.+18     	; 0x34c2 <vfprintf+0x256>
    34b0:	24 ff       	sbrs	r18, 4
    34b2:	0a c0       	rjmp	.+20     	; 0x34c8 <vfprintf+0x25c>
    34b4:	9f 2f       	mov	r25, r31
    34b6:	96 60       	ori	r25, 0x06	; 6
    34b8:	b9 2e       	mov	r11, r25
    34ba:	06 c0       	rjmp	.+12     	; 0x34c8 <vfprintf+0x25c>
    34bc:	28 e0       	ldi	r18, 0x08	; 8
    34be:	30 e0       	ldi	r19, 0x00	; 0
    34c0:	05 c0       	rjmp	.+10     	; 0x34cc <vfprintf+0x260>
    34c2:	20 e1       	ldi	r18, 0x10	; 16
    34c4:	30 e0       	ldi	r19, 0x00	; 0
    34c6:	02 c0       	rjmp	.+4      	; 0x34cc <vfprintf+0x260>
    34c8:	20 e1       	ldi	r18, 0x10	; 16
    34ca:	32 e0       	ldi	r19, 0x02	; 2
    34cc:	f8 01       	movw	r30, r16
    34ce:	b7 fe       	sbrs	r11, 7
    34d0:	07 c0       	rjmp	.+14     	; 0x34e0 <vfprintf+0x274>
    34d2:	60 81       	ld	r22, Z
    34d4:	71 81       	ldd	r23, Z+1	; 0x01
    34d6:	82 81       	ldd	r24, Z+2	; 0x02
    34d8:	93 81       	ldd	r25, Z+3	; 0x03
    34da:	0c 5f       	subi	r16, 0xFC	; 252
    34dc:	1f 4f       	sbci	r17, 0xFF	; 255
    34de:	06 c0       	rjmp	.+12     	; 0x34ec <vfprintf+0x280>
    34e0:	60 81       	ld	r22, Z
    34e2:	71 81       	ldd	r23, Z+1	; 0x01
    34e4:	80 e0       	ldi	r24, 0x00	; 0
    34e6:	90 e0       	ldi	r25, 0x00	; 0
    34e8:	0e 5f       	subi	r16, 0xFE	; 254
    34ea:	1f 4f       	sbci	r17, 0xFF	; 255
    34ec:	a4 01       	movw	r20, r8
    34ee:	0e 94 73 1b 	call	0x36e6	; 0x36e6 <__ultoa_invert>
    34f2:	a8 2e       	mov	r10, r24
    34f4:	a8 18       	sub	r10, r8
    34f6:	fb 2d       	mov	r31, r11
    34f8:	ff 77       	andi	r31, 0x7F	; 127
    34fa:	bf 2e       	mov	r11, r31
    34fc:	b6 fe       	sbrs	r11, 6
    34fe:	0b c0       	rjmp	.+22     	; 0x3516 <vfprintf+0x2aa>
    3500:	2b 2d       	mov	r18, r11
    3502:	2e 7f       	andi	r18, 0xFE	; 254
    3504:	a5 14       	cp	r10, r5
    3506:	50 f4       	brcc	.+20     	; 0x351c <vfprintf+0x2b0>
    3508:	b4 fe       	sbrs	r11, 4
    350a:	0a c0       	rjmp	.+20     	; 0x3520 <vfprintf+0x2b4>
    350c:	b2 fc       	sbrc	r11, 2
    350e:	08 c0       	rjmp	.+16     	; 0x3520 <vfprintf+0x2b4>
    3510:	2b 2d       	mov	r18, r11
    3512:	2e 7e       	andi	r18, 0xEE	; 238
    3514:	05 c0       	rjmp	.+10     	; 0x3520 <vfprintf+0x2b4>
    3516:	7a 2c       	mov	r7, r10
    3518:	2b 2d       	mov	r18, r11
    351a:	03 c0       	rjmp	.+6      	; 0x3522 <vfprintf+0x2b6>
    351c:	7a 2c       	mov	r7, r10
    351e:	01 c0       	rjmp	.+2      	; 0x3522 <vfprintf+0x2b6>
    3520:	75 2c       	mov	r7, r5
    3522:	24 ff       	sbrs	r18, 4
    3524:	0d c0       	rjmp	.+26     	; 0x3540 <vfprintf+0x2d4>
    3526:	fe 01       	movw	r30, r28
    3528:	ea 0d       	add	r30, r10
    352a:	f1 1d       	adc	r31, r1
    352c:	80 81       	ld	r24, Z
    352e:	80 33       	cpi	r24, 0x30	; 48
    3530:	11 f4       	brne	.+4      	; 0x3536 <vfprintf+0x2ca>
    3532:	29 7e       	andi	r18, 0xE9	; 233
    3534:	09 c0       	rjmp	.+18     	; 0x3548 <vfprintf+0x2dc>
    3536:	22 ff       	sbrs	r18, 2
    3538:	06 c0       	rjmp	.+12     	; 0x3546 <vfprintf+0x2da>
    353a:	73 94       	inc	r7
    353c:	73 94       	inc	r7
    353e:	04 c0       	rjmp	.+8      	; 0x3548 <vfprintf+0x2dc>
    3540:	82 2f       	mov	r24, r18
    3542:	86 78       	andi	r24, 0x86	; 134
    3544:	09 f0       	breq	.+2      	; 0x3548 <vfprintf+0x2dc>
    3546:	73 94       	inc	r7
    3548:	23 fd       	sbrc	r18, 3
    354a:	13 c0       	rjmp	.+38     	; 0x3572 <vfprintf+0x306>
    354c:	20 ff       	sbrs	r18, 0
    354e:	06 c0       	rjmp	.+12     	; 0x355c <vfprintf+0x2f0>
    3550:	5a 2c       	mov	r5, r10
    3552:	73 14       	cp	r7, r3
    3554:	18 f4       	brcc	.+6      	; 0x355c <vfprintf+0x2f0>
    3556:	53 0c       	add	r5, r3
    3558:	57 18       	sub	r5, r7
    355a:	73 2c       	mov	r7, r3
    355c:	73 14       	cp	r7, r3
    355e:	68 f4       	brcc	.+26     	; 0x357a <vfprintf+0x30e>
    3560:	b7 01       	movw	r22, r14
    3562:	80 e2       	ldi	r24, 0x20	; 32
    3564:	90 e0       	ldi	r25, 0x00	; 0
    3566:	2c 87       	std	Y+12, r18	; 0x0c
    3568:	0e 94 41 1b 	call	0x3682	; 0x3682 <fputc>
    356c:	73 94       	inc	r7
    356e:	2c 85       	ldd	r18, Y+12	; 0x0c
    3570:	f5 cf       	rjmp	.-22     	; 0x355c <vfprintf+0x2f0>
    3572:	73 14       	cp	r7, r3
    3574:	10 f4       	brcc	.+4      	; 0x357a <vfprintf+0x30e>
    3576:	37 18       	sub	r3, r7
    3578:	01 c0       	rjmp	.+2      	; 0x357c <vfprintf+0x310>
    357a:	31 2c       	mov	r3, r1
    357c:	24 ff       	sbrs	r18, 4
    357e:	12 c0       	rjmp	.+36     	; 0x35a4 <vfprintf+0x338>
    3580:	b7 01       	movw	r22, r14
    3582:	80 e3       	ldi	r24, 0x30	; 48
    3584:	90 e0       	ldi	r25, 0x00	; 0
    3586:	2c 87       	std	Y+12, r18	; 0x0c
    3588:	0e 94 41 1b 	call	0x3682	; 0x3682 <fputc>
    358c:	2c 85       	ldd	r18, Y+12	; 0x0c
    358e:	22 ff       	sbrs	r18, 2
    3590:	17 c0       	rjmp	.+46     	; 0x35c0 <vfprintf+0x354>
    3592:	21 ff       	sbrs	r18, 1
    3594:	03 c0       	rjmp	.+6      	; 0x359c <vfprintf+0x330>
    3596:	88 e5       	ldi	r24, 0x58	; 88
    3598:	90 e0       	ldi	r25, 0x00	; 0
    359a:	02 c0       	rjmp	.+4      	; 0x35a0 <vfprintf+0x334>
    359c:	88 e7       	ldi	r24, 0x78	; 120
    359e:	90 e0       	ldi	r25, 0x00	; 0
    35a0:	b7 01       	movw	r22, r14
    35a2:	0c c0       	rjmp	.+24     	; 0x35bc <vfprintf+0x350>
    35a4:	82 2f       	mov	r24, r18
    35a6:	86 78       	andi	r24, 0x86	; 134
    35a8:	59 f0       	breq	.+22     	; 0x35c0 <vfprintf+0x354>
    35aa:	21 fd       	sbrc	r18, 1
    35ac:	02 c0       	rjmp	.+4      	; 0x35b2 <vfprintf+0x346>
    35ae:	80 e2       	ldi	r24, 0x20	; 32
    35b0:	01 c0       	rjmp	.+2      	; 0x35b4 <vfprintf+0x348>
    35b2:	8b e2       	ldi	r24, 0x2B	; 43
    35b4:	27 fd       	sbrc	r18, 7
    35b6:	8d e2       	ldi	r24, 0x2D	; 45
    35b8:	b7 01       	movw	r22, r14
    35ba:	90 e0       	ldi	r25, 0x00	; 0
    35bc:	0e 94 41 1b 	call	0x3682	; 0x3682 <fputc>
    35c0:	a5 14       	cp	r10, r5
    35c2:	38 f4       	brcc	.+14     	; 0x35d2 <vfprintf+0x366>
    35c4:	b7 01       	movw	r22, r14
    35c6:	80 e3       	ldi	r24, 0x30	; 48
    35c8:	90 e0       	ldi	r25, 0x00	; 0
    35ca:	0e 94 41 1b 	call	0x3682	; 0x3682 <fputc>
    35ce:	5a 94       	dec	r5
    35d0:	f7 cf       	rjmp	.-18     	; 0x35c0 <vfprintf+0x354>
    35d2:	aa 94       	dec	r10
    35d4:	f4 01       	movw	r30, r8
    35d6:	ea 0d       	add	r30, r10
    35d8:	f1 1d       	adc	r31, r1
    35da:	80 81       	ld	r24, Z
    35dc:	b7 01       	movw	r22, r14
    35de:	90 e0       	ldi	r25, 0x00	; 0
    35e0:	0e 94 41 1b 	call	0x3682	; 0x3682 <fputc>
    35e4:	a1 10       	cpse	r10, r1
    35e6:	f5 cf       	rjmp	.-22     	; 0x35d2 <vfprintf+0x366>
    35e8:	33 20       	and	r3, r3
    35ea:	09 f4       	brne	.+2      	; 0x35ee <vfprintf+0x382>
    35ec:	51 ce       	rjmp	.-862    	; 0x3290 <vfprintf+0x24>
    35ee:	b7 01       	movw	r22, r14
    35f0:	80 e2       	ldi	r24, 0x20	; 32
    35f2:	90 e0       	ldi	r25, 0x00	; 0
    35f4:	0e 94 41 1b 	call	0x3682	; 0x3682 <fputc>
    35f8:	3a 94       	dec	r3
    35fa:	f6 cf       	rjmp	.-20     	; 0x35e8 <vfprintf+0x37c>
    35fc:	f7 01       	movw	r30, r14
    35fe:	86 81       	ldd	r24, Z+6	; 0x06
    3600:	97 81       	ldd	r25, Z+7	; 0x07
    3602:	02 c0       	rjmp	.+4      	; 0x3608 <vfprintf+0x39c>
    3604:	8f ef       	ldi	r24, 0xFF	; 255
    3606:	9f ef       	ldi	r25, 0xFF	; 255
    3608:	2c 96       	adiw	r28, 0x0c	; 12
    360a:	e2 e1       	ldi	r30, 0x12	; 18
    360c:	0c 94 00 1c 	jmp	0x3800	; 0x3800 <__epilogue_restores__>

00003610 <calloc>:
    3610:	0f 93       	push	r16
    3612:	1f 93       	push	r17
    3614:	cf 93       	push	r28
    3616:	df 93       	push	r29
    3618:	86 9f       	mul	r24, r22
    361a:	80 01       	movw	r16, r0
    361c:	87 9f       	mul	r24, r23
    361e:	10 0d       	add	r17, r0
    3620:	96 9f       	mul	r25, r22
    3622:	10 0d       	add	r17, r0
    3624:	11 24       	eor	r1, r1
    3626:	c8 01       	movw	r24, r16
    3628:	0e 94 30 17 	call	0x2e60	; 0x2e60 <malloc>
    362c:	ec 01       	movw	r28, r24
    362e:	00 97       	sbiw	r24, 0x00	; 0
    3630:	29 f0       	breq	.+10     	; 0x363c <calloc+0x2c>
    3632:	a8 01       	movw	r20, r16
    3634:	60 e0       	ldi	r22, 0x00	; 0
    3636:	70 e0       	ldi	r23, 0x00	; 0
    3638:	0e 94 2f 1b 	call	0x365e	; 0x365e <memset>
    363c:	ce 01       	movw	r24, r28
    363e:	df 91       	pop	r29
    3640:	cf 91       	pop	r28
    3642:	1f 91       	pop	r17
    3644:	0f 91       	pop	r16
    3646:	08 95       	ret

00003648 <strnlen_P>:
    3648:	fc 01       	movw	r30, r24
    364a:	05 90       	lpm	r0, Z+
    364c:	61 50       	subi	r22, 0x01	; 1
    364e:	70 40       	sbci	r23, 0x00	; 0
    3650:	01 10       	cpse	r0, r1
    3652:	d8 f7       	brcc	.-10     	; 0x364a <strnlen_P+0x2>
    3654:	80 95       	com	r24
    3656:	90 95       	com	r25
    3658:	8e 0f       	add	r24, r30
    365a:	9f 1f       	adc	r25, r31
    365c:	08 95       	ret

0000365e <memset>:
    365e:	dc 01       	movw	r26, r24
    3660:	01 c0       	rjmp	.+2      	; 0x3664 <memset+0x6>
    3662:	6d 93       	st	X+, r22
    3664:	41 50       	subi	r20, 0x01	; 1
    3666:	50 40       	sbci	r21, 0x00	; 0
    3668:	e0 f7       	brcc	.-8      	; 0x3662 <memset+0x4>
    366a:	08 95       	ret

0000366c <strnlen>:
    366c:	fc 01       	movw	r30, r24
    366e:	61 50       	subi	r22, 0x01	; 1
    3670:	70 40       	sbci	r23, 0x00	; 0
    3672:	01 90       	ld	r0, Z+
    3674:	01 10       	cpse	r0, r1
    3676:	d8 f7       	brcc	.-10     	; 0x366e <strnlen+0x2>
    3678:	80 95       	com	r24
    367a:	90 95       	com	r25
    367c:	8e 0f       	add	r24, r30
    367e:	9f 1f       	adc	r25, r31
    3680:	08 95       	ret

00003682 <fputc>:
    3682:	0f 93       	push	r16
    3684:	1f 93       	push	r17
    3686:	cf 93       	push	r28
    3688:	df 93       	push	r29
    368a:	18 2f       	mov	r17, r24
    368c:	09 2f       	mov	r16, r25
    368e:	eb 01       	movw	r28, r22
    3690:	8b 81       	ldd	r24, Y+3	; 0x03
    3692:	81 fd       	sbrc	r24, 1
    3694:	03 c0       	rjmp	.+6      	; 0x369c <fputc+0x1a>
    3696:	8f ef       	ldi	r24, 0xFF	; 255
    3698:	9f ef       	ldi	r25, 0xFF	; 255
    369a:	20 c0       	rjmp	.+64     	; 0x36dc <fputc+0x5a>
    369c:	82 ff       	sbrs	r24, 2
    369e:	10 c0       	rjmp	.+32     	; 0x36c0 <fputc+0x3e>
    36a0:	4e 81       	ldd	r20, Y+6	; 0x06
    36a2:	5f 81       	ldd	r21, Y+7	; 0x07
    36a4:	2c 81       	ldd	r18, Y+4	; 0x04
    36a6:	3d 81       	ldd	r19, Y+5	; 0x05
    36a8:	42 17       	cp	r20, r18
    36aa:	53 07       	cpc	r21, r19
    36ac:	7c f4       	brge	.+30     	; 0x36cc <fputc+0x4a>
    36ae:	e8 81       	ld	r30, Y
    36b0:	f9 81       	ldd	r31, Y+1	; 0x01
    36b2:	9f 01       	movw	r18, r30
    36b4:	2f 5f       	subi	r18, 0xFF	; 255
    36b6:	3f 4f       	sbci	r19, 0xFF	; 255
    36b8:	39 83       	std	Y+1, r19	; 0x01
    36ba:	28 83       	st	Y, r18
    36bc:	10 83       	st	Z, r17
    36be:	06 c0       	rjmp	.+12     	; 0x36cc <fputc+0x4a>
    36c0:	e8 85       	ldd	r30, Y+8	; 0x08
    36c2:	f9 85       	ldd	r31, Y+9	; 0x09
    36c4:	81 2f       	mov	r24, r17
    36c6:	09 95       	icall
    36c8:	89 2b       	or	r24, r25
    36ca:	29 f7       	brne	.-54     	; 0x3696 <fputc+0x14>
    36cc:	2e 81       	ldd	r18, Y+6	; 0x06
    36ce:	3f 81       	ldd	r19, Y+7	; 0x07
    36d0:	2f 5f       	subi	r18, 0xFF	; 255
    36d2:	3f 4f       	sbci	r19, 0xFF	; 255
    36d4:	3f 83       	std	Y+7, r19	; 0x07
    36d6:	2e 83       	std	Y+6, r18	; 0x06
    36d8:	81 2f       	mov	r24, r17
    36da:	90 2f       	mov	r25, r16
    36dc:	df 91       	pop	r29
    36de:	cf 91       	pop	r28
    36e0:	1f 91       	pop	r17
    36e2:	0f 91       	pop	r16
    36e4:	08 95       	ret

000036e6 <__ultoa_invert>:
    36e6:	fa 01       	movw	r30, r20
    36e8:	aa 27       	eor	r26, r26
    36ea:	28 30       	cpi	r18, 0x08	; 8
    36ec:	51 f1       	breq	.+84     	; 0x3742 <__ultoa_invert+0x5c>
    36ee:	20 31       	cpi	r18, 0x10	; 16
    36f0:	81 f1       	breq	.+96     	; 0x3752 <__ultoa_invert+0x6c>
    36f2:	e8 94       	clt
    36f4:	6f 93       	push	r22
    36f6:	6e 7f       	andi	r22, 0xFE	; 254
    36f8:	6e 5f       	subi	r22, 0xFE	; 254
    36fa:	7f 4f       	sbci	r23, 0xFF	; 255
    36fc:	8f 4f       	sbci	r24, 0xFF	; 255
    36fe:	9f 4f       	sbci	r25, 0xFF	; 255
    3700:	af 4f       	sbci	r26, 0xFF	; 255
    3702:	b1 e0       	ldi	r27, 0x01	; 1
    3704:	3e d0       	rcall	.+124    	; 0x3782 <__ultoa_invert+0x9c>
    3706:	b4 e0       	ldi	r27, 0x04	; 4
    3708:	3c d0       	rcall	.+120    	; 0x3782 <__ultoa_invert+0x9c>
    370a:	67 0f       	add	r22, r23
    370c:	78 1f       	adc	r23, r24
    370e:	89 1f       	adc	r24, r25
    3710:	9a 1f       	adc	r25, r26
    3712:	a1 1d       	adc	r26, r1
    3714:	68 0f       	add	r22, r24
    3716:	79 1f       	adc	r23, r25
    3718:	8a 1f       	adc	r24, r26
    371a:	91 1d       	adc	r25, r1
    371c:	a1 1d       	adc	r26, r1
    371e:	6a 0f       	add	r22, r26
    3720:	71 1d       	adc	r23, r1
    3722:	81 1d       	adc	r24, r1
    3724:	91 1d       	adc	r25, r1
    3726:	a1 1d       	adc	r26, r1
    3728:	20 d0       	rcall	.+64     	; 0x376a <__ultoa_invert+0x84>
    372a:	09 f4       	brne	.+2      	; 0x372e <__ultoa_invert+0x48>
    372c:	68 94       	set
    372e:	3f 91       	pop	r19
    3730:	2a e0       	ldi	r18, 0x0A	; 10
    3732:	26 9f       	mul	r18, r22
    3734:	11 24       	eor	r1, r1
    3736:	30 19       	sub	r19, r0
    3738:	30 5d       	subi	r19, 0xD0	; 208
    373a:	31 93       	st	Z+, r19
    373c:	de f6       	brtc	.-74     	; 0x36f4 <__ultoa_invert+0xe>
    373e:	cf 01       	movw	r24, r30
    3740:	08 95       	ret
    3742:	46 2f       	mov	r20, r22
    3744:	47 70       	andi	r20, 0x07	; 7
    3746:	40 5d       	subi	r20, 0xD0	; 208
    3748:	41 93       	st	Z+, r20
    374a:	b3 e0       	ldi	r27, 0x03	; 3
    374c:	0f d0       	rcall	.+30     	; 0x376c <__ultoa_invert+0x86>
    374e:	c9 f7       	brne	.-14     	; 0x3742 <__ultoa_invert+0x5c>
    3750:	f6 cf       	rjmp	.-20     	; 0x373e <__ultoa_invert+0x58>
    3752:	46 2f       	mov	r20, r22
    3754:	4f 70       	andi	r20, 0x0F	; 15
    3756:	40 5d       	subi	r20, 0xD0	; 208
    3758:	4a 33       	cpi	r20, 0x3A	; 58
    375a:	18 f0       	brcs	.+6      	; 0x3762 <__ultoa_invert+0x7c>
    375c:	49 5d       	subi	r20, 0xD9	; 217
    375e:	31 fd       	sbrc	r19, 1
    3760:	40 52       	subi	r20, 0x20	; 32
    3762:	41 93       	st	Z+, r20
    3764:	02 d0       	rcall	.+4      	; 0x376a <__ultoa_invert+0x84>
    3766:	a9 f7       	brne	.-22     	; 0x3752 <__ultoa_invert+0x6c>
    3768:	ea cf       	rjmp	.-44     	; 0x373e <__ultoa_invert+0x58>
    376a:	b4 e0       	ldi	r27, 0x04	; 4
    376c:	a6 95       	lsr	r26
    376e:	97 95       	ror	r25
    3770:	87 95       	ror	r24
    3772:	77 95       	ror	r23
    3774:	67 95       	ror	r22
    3776:	ba 95       	dec	r27
    3778:	c9 f7       	brne	.-14     	; 0x376c <__ultoa_invert+0x86>
    377a:	00 97       	sbiw	r24, 0x00	; 0
    377c:	61 05       	cpc	r22, r1
    377e:	71 05       	cpc	r23, r1
    3780:	08 95       	ret
    3782:	9b 01       	movw	r18, r22
    3784:	ac 01       	movw	r20, r24
    3786:	0a 2e       	mov	r0, r26
    3788:	06 94       	lsr	r0
    378a:	57 95       	ror	r21
    378c:	47 95       	ror	r20
    378e:	37 95       	ror	r19
    3790:	27 95       	ror	r18
    3792:	ba 95       	dec	r27
    3794:	c9 f7       	brne	.-14     	; 0x3788 <__ultoa_invert+0xa2>
    3796:	62 0f       	add	r22, r18
    3798:	73 1f       	adc	r23, r19
    379a:	84 1f       	adc	r24, r20
    379c:	95 1f       	adc	r25, r21
    379e:	a0 1d       	adc	r26, r0
    37a0:	08 95       	ret

000037a2 <__muluhisi3>:
    37a2:	0e 94 1b 1c 	call	0x3836	; 0x3836 <__umulhisi3>
    37a6:	a5 9f       	mul	r26, r21
    37a8:	90 0d       	add	r25, r0
    37aa:	b4 9f       	mul	r27, r20
    37ac:	90 0d       	add	r25, r0
    37ae:	a4 9f       	mul	r26, r20
    37b0:	80 0d       	add	r24, r0
    37b2:	91 1d       	adc	r25, r1
    37b4:	11 24       	eor	r1, r1
    37b6:	08 95       	ret

000037b8 <__mulshisi3>:
    37b8:	b7 ff       	sbrs	r27, 7
    37ba:	0c 94 d1 1b 	jmp	0x37a2	; 0x37a2 <__muluhisi3>

000037be <__mulohisi3>:
    37be:	0e 94 d1 1b 	call	0x37a2	; 0x37a2 <__muluhisi3>
    37c2:	82 1b       	sub	r24, r18
    37c4:	93 0b       	sbc	r25, r19
    37c6:	08 95       	ret

000037c8 <__prologue_saves__>:
    37c8:	2f 92       	push	r2
    37ca:	3f 92       	push	r3
    37cc:	4f 92       	push	r4
    37ce:	5f 92       	push	r5
    37d0:	6f 92       	push	r6
    37d2:	7f 92       	push	r7
    37d4:	8f 92       	push	r8
    37d6:	9f 92       	push	r9
    37d8:	af 92       	push	r10
    37da:	bf 92       	push	r11
    37dc:	cf 92       	push	r12
    37de:	df 92       	push	r13
    37e0:	ef 92       	push	r14
    37e2:	ff 92       	push	r15
    37e4:	0f 93       	push	r16
    37e6:	1f 93       	push	r17
    37e8:	cf 93       	push	r28
    37ea:	df 93       	push	r29
    37ec:	cd b7       	in	r28, 0x3d	; 61
    37ee:	de b7       	in	r29, 0x3e	; 62
    37f0:	ca 1b       	sub	r28, r26
    37f2:	db 0b       	sbc	r29, r27
    37f4:	0f b6       	in	r0, 0x3f	; 63
    37f6:	f8 94       	cli
    37f8:	de bf       	out	0x3e, r29	; 62
    37fa:	0f be       	out	0x3f, r0	; 63
    37fc:	cd bf       	out	0x3d, r28	; 61
    37fe:	09 94       	ijmp

00003800 <__epilogue_restores__>:
    3800:	2a 88       	ldd	r2, Y+18	; 0x12
    3802:	39 88       	ldd	r3, Y+17	; 0x11
    3804:	48 88       	ldd	r4, Y+16	; 0x10
    3806:	5f 84       	ldd	r5, Y+15	; 0x0f
    3808:	6e 84       	ldd	r6, Y+14	; 0x0e
    380a:	7d 84       	ldd	r7, Y+13	; 0x0d
    380c:	8c 84       	ldd	r8, Y+12	; 0x0c
    380e:	9b 84       	ldd	r9, Y+11	; 0x0b
    3810:	aa 84       	ldd	r10, Y+10	; 0x0a
    3812:	b9 84       	ldd	r11, Y+9	; 0x09
    3814:	c8 84       	ldd	r12, Y+8	; 0x08
    3816:	df 80       	ldd	r13, Y+7	; 0x07
    3818:	ee 80       	ldd	r14, Y+6	; 0x06
    381a:	fd 80       	ldd	r15, Y+5	; 0x05
    381c:	0c 81       	ldd	r16, Y+4	; 0x04
    381e:	1b 81       	ldd	r17, Y+3	; 0x03
    3820:	aa 81       	ldd	r26, Y+2	; 0x02
    3822:	b9 81       	ldd	r27, Y+1	; 0x01
    3824:	ce 0f       	add	r28, r30
    3826:	d1 1d       	adc	r29, r1
    3828:	0f b6       	in	r0, 0x3f	; 63
    382a:	f8 94       	cli
    382c:	de bf       	out	0x3e, r29	; 62
    382e:	0f be       	out	0x3f, r0	; 63
    3830:	cd bf       	out	0x3d, r28	; 61
    3832:	ed 01       	movw	r28, r26
    3834:	08 95       	ret

00003836 <__umulhisi3>:
    3836:	a2 9f       	mul	r26, r18
    3838:	b0 01       	movw	r22, r0
    383a:	b3 9f       	mul	r27, r19
    383c:	c0 01       	movw	r24, r0
    383e:	a3 9f       	mul	r26, r19
    3840:	70 0d       	add	r23, r0
    3842:	81 1d       	adc	r24, r1
    3844:	11 24       	eor	r1, r1
    3846:	91 1d       	adc	r25, r1
    3848:	b2 9f       	mul	r27, r18
    384a:	70 0d       	add	r23, r0
    384c:	81 1d       	adc	r24, r1
    384e:	11 24       	eor	r1, r1
    3850:	91 1d       	adc	r25, r1
    3852:	08 95       	ret

00003854 <_exit>:
    3854:	f8 94       	cli

00003856 <__stop_program>:
    3856:	ff cf       	rjmp	.-2      	; 0x3856 <__stop_program>
