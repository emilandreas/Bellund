
ByggernBellLund.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  0000053a  000005ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000053a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080010c  0080010c  000005da  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005da  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  0000060a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003d7  00000000  00000000  0000065a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000275  00000000  00000000  00000a31  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000265  00000000  00000000  00000ca6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00000f0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000206  00000000  00000000  00000f74  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000005d  00000000  00000000  0000117a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000011d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ea e3       	ldi	r30, 0x3A	; 58
  84:	f5 e0       	ldi	r31, 0x05	; 5
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ac 30       	cpi	r26, 0x0C	; 12
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	ac e0       	ldi	r26, 0x0C	; 12
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 31       	cpi	r26, 0x16	; 22
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 9b 02 	jmp	0x536	; 0x536 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#include <util/delay.h>
#include "uart_driver.h"

int main(void)
{
	DDRA = 0xFF;
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	8a bb       	out	0x1a, r24	; 26
	uartInit(9600);
  b2:	80 e8       	ldi	r24, 0x80	; 128
  b4:	95 e2       	ldi	r25, 0x25	; 37
  b6:	0e 94 7c 00 	call	0xf8	; 0xf8 <uartInit>
    while(1)
    {
		PORTA |= (1 << PINA0);
  ba:	d8 9a       	sbi	0x1b, 0	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  bc:	2f ef       	ldi	r18, 0xFF	; 255
  be:	8f e7       	ldi	r24, 0x7F	; 127
  c0:	97 e0       	ldi	r25, 0x07	; 7
  c2:	21 50       	subi	r18, 0x01	; 1
  c4:	80 40       	sbci	r24, 0x00	; 0
  c6:	90 40       	sbci	r25, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x14>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x1e>
  cc:	00 00       	nop
		_delay_ms(500);
		PORTA &= ~(1 << PINA0);
  ce:	d8 98       	cbi	0x1b, 0	; 27
  d0:	2f ef       	ldi	r18, 0xFF	; 255
  d2:	8f e7       	ldi	r24, 0x7F	; 127
  d4:	97 e0       	ldi	r25, 0x07	; 7
  d6:	21 50       	subi	r18, 0x01	; 1
  d8:	80 40       	sbci	r24, 0x00	; 0
  da:	90 40       	sbci	r25, 0x00	; 0
  dc:	e1 f7       	brne	.-8      	; 0xd6 <main+0x28>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <main+0x32>
  e0:	00 00       	nop
		_delay_ms(500);
		printf("Hei \n");
  e2:	86 e0       	ldi	r24, 0x06	; 6
  e4:	91 e0       	ldi	r25, 0x01	; 1
  e6:	0e 94 24 01 	call	0x248	; 0x248 <puts>
  ea:	e7 cf       	rjmp	.-50     	; 0xba <main+0xc>

000000ec <uartSend>:
	
	return 0;
}
int uartSend(char c){
	//Wait for empty buffer
	while( !( UCSR0A & (1<<UDRE0)) );
  ec:	5d 9b       	sbis	0x0b, 5	; 11
  ee:	fe cf       	rjmp	.-4      	; 0xec <uartSend>
	
	//Put data into buffer and send it
	UDR0 = c;
  f0:	8c b9       	out	0x0c, r24	; 12
	
	return 0;
}
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	08 95       	ret

000000f8 <uartInit>:
#include <stdio.h>
#include "uart_driver.h"

int uartInit(unsigned int baud){
	//Calculate ubrr value
	unsigned int ubrr = F_CPU / 16 / baud - 1;
  f8:	9c 01       	movw	r18, r24
  fa:	40 e0       	ldi	r20, 0x00	; 0
  fc:	50 e0       	ldi	r21, 0x00	; 0
  fe:	60 e0       	ldi	r22, 0x00	; 0
 100:	70 eb       	ldi	r23, 0xB0	; 176
 102:	84 e0       	ldi	r24, 0x04	; 4
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 98 00 	call	0x130	; 0x130 <__divmodsi4>
 10a:	21 50       	subi	r18, 0x01	; 1
 10c:	31 09       	sbc	r19, r1
	
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
 10e:	30 bd       	out	0x20, r19	; 32
	UBRR0L = (unsigned char) ubrr;
 110:	29 b9       	out	0x09, r18	; 9

	//Enable receiver and transmitter
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
 112:	8a b1       	in	r24, 0x0a	; 10
 114:	88 61       	ori	r24, 0x18	; 24
 116:	8a b9       	out	0x0a, r24	; 10
	
	// 8data, 2stop
	UCSR0C |= (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 118:	80 b5       	in	r24, 0x20	; 32
 11a:	8e 68       	ori	r24, 0x8E	; 142
 11c:	80 bd       	out	0x20, r24	; 32
	
	//Enable printf for uart
	fdevopen(&uartSend, NULL);
 11e:	60 e0       	ldi	r22, 0x00	; 0
 120:	70 e0       	ldi	r23, 0x00	; 0
 122:	86 e7       	ldi	r24, 0x76	; 118
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <fdevopen>
	
	return 0;
}
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	08 95       	ret

00000130 <__divmodsi4>:
 130:	05 2e       	mov	r0, r21
 132:	97 fb       	bst	r25, 7
 134:	1e f4       	brtc	.+6      	; 0x13c <__divmodsi4+0xc>
 136:	00 94       	com	r0
 138:	0e 94 af 00 	call	0x15e	; 0x15e <__negsi2>
 13c:	57 fd       	sbrc	r21, 7
 13e:	07 d0       	rcall	.+14     	; 0x14e <__divmodsi4_neg2>
 140:	0e 94 b7 00 	call	0x16e	; 0x16e <__udivmodsi4>
 144:	07 fc       	sbrc	r0, 7
 146:	03 d0       	rcall	.+6      	; 0x14e <__divmodsi4_neg2>
 148:	4e f4       	brtc	.+18     	; 0x15c <__divmodsi4_exit>
 14a:	0c 94 af 00 	jmp	0x15e	; 0x15e <__negsi2>

0000014e <__divmodsi4_neg2>:
 14e:	50 95       	com	r21
 150:	40 95       	com	r20
 152:	30 95       	com	r19
 154:	21 95       	neg	r18
 156:	3f 4f       	sbci	r19, 0xFF	; 255
 158:	4f 4f       	sbci	r20, 0xFF	; 255
 15a:	5f 4f       	sbci	r21, 0xFF	; 255

0000015c <__divmodsi4_exit>:
 15c:	08 95       	ret

0000015e <__negsi2>:
 15e:	90 95       	com	r25
 160:	80 95       	com	r24
 162:	70 95       	com	r23
 164:	61 95       	neg	r22
 166:	7f 4f       	sbci	r23, 0xFF	; 255
 168:	8f 4f       	sbci	r24, 0xFF	; 255
 16a:	9f 4f       	sbci	r25, 0xFF	; 255
 16c:	08 95       	ret

0000016e <__udivmodsi4>:
 16e:	a1 e2       	ldi	r26, 0x21	; 33
 170:	1a 2e       	mov	r1, r26
 172:	aa 1b       	sub	r26, r26
 174:	bb 1b       	sub	r27, r27
 176:	fd 01       	movw	r30, r26
 178:	0d c0       	rjmp	.+26     	; 0x194 <__udivmodsi4_ep>

0000017a <__udivmodsi4_loop>:
 17a:	aa 1f       	adc	r26, r26
 17c:	bb 1f       	adc	r27, r27
 17e:	ee 1f       	adc	r30, r30
 180:	ff 1f       	adc	r31, r31
 182:	a2 17       	cp	r26, r18
 184:	b3 07       	cpc	r27, r19
 186:	e4 07       	cpc	r30, r20
 188:	f5 07       	cpc	r31, r21
 18a:	20 f0       	brcs	.+8      	; 0x194 <__udivmodsi4_ep>
 18c:	a2 1b       	sub	r26, r18
 18e:	b3 0b       	sbc	r27, r19
 190:	e4 0b       	sbc	r30, r20
 192:	f5 0b       	sbc	r31, r21

00000194 <__udivmodsi4_ep>:
 194:	66 1f       	adc	r22, r22
 196:	77 1f       	adc	r23, r23
 198:	88 1f       	adc	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	1a 94       	dec	r1
 19e:	69 f7       	brne	.-38     	; 0x17a <__udivmodsi4_loop>
 1a0:	60 95       	com	r22
 1a2:	70 95       	com	r23
 1a4:	80 95       	com	r24
 1a6:	90 95       	com	r25
 1a8:	9b 01       	movw	r18, r22
 1aa:	ac 01       	movw	r20, r24
 1ac:	bd 01       	movw	r22, r26
 1ae:	cf 01       	movw	r24, r30
 1b0:	08 95       	ret

000001b2 <fdevopen>:
 1b2:	0f 93       	push	r16
 1b4:	1f 93       	push	r17
 1b6:	cf 93       	push	r28
 1b8:	df 93       	push	r29
 1ba:	ec 01       	movw	r28, r24
 1bc:	8b 01       	movw	r16, r22
 1be:	00 97       	sbiw	r24, 0x00	; 0
 1c0:	31 f4       	brne	.+12     	; 0x1ce <fdevopen+0x1c>
 1c2:	61 15       	cp	r22, r1
 1c4:	71 05       	cpc	r23, r1
 1c6:	19 f4       	brne	.+6      	; 0x1ce <fdevopen+0x1c>
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	38 c0       	rjmp	.+112    	; 0x23e <fdevopen+0x8c>
 1ce:	6e e0       	ldi	r22, 0x0E	; 14
 1d0:	70 e0       	ldi	r23, 0x00	; 0
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	0e 94 51 01 	call	0x2a2	; 0x2a2 <calloc>
 1da:	fc 01       	movw	r30, r24
 1dc:	00 97       	sbiw	r24, 0x00	; 0
 1de:	a1 f3       	breq	.-24     	; 0x1c8 <fdevopen+0x16>
 1e0:	80 e8       	ldi	r24, 0x80	; 128
 1e2:	83 83       	std	Z+3, r24	; 0x03
 1e4:	01 15       	cp	r16, r1
 1e6:	11 05       	cpc	r17, r1
 1e8:	71 f0       	breq	.+28     	; 0x206 <fdevopen+0x54>
 1ea:	13 87       	std	Z+11, r17	; 0x0b
 1ec:	02 87       	std	Z+10, r16	; 0x0a
 1ee:	81 e8       	ldi	r24, 0x81	; 129
 1f0:	83 83       	std	Z+3, r24	; 0x03
 1f2:	80 91 0c 01 	lds	r24, 0x010C
 1f6:	90 91 0d 01 	lds	r25, 0x010D
 1fa:	89 2b       	or	r24, r25
 1fc:	21 f4       	brne	.+8      	; 0x206 <fdevopen+0x54>
 1fe:	f0 93 0d 01 	sts	0x010D, r31
 202:	e0 93 0c 01 	sts	0x010C, r30
 206:	20 97       	sbiw	r28, 0x00	; 0
 208:	c9 f0       	breq	.+50     	; 0x23c <fdevopen+0x8a>
 20a:	d1 87       	std	Z+9, r29	; 0x09
 20c:	c0 87       	std	Z+8, r28	; 0x08
 20e:	83 81       	ldd	r24, Z+3	; 0x03
 210:	82 60       	ori	r24, 0x02	; 2
 212:	83 83       	std	Z+3, r24	; 0x03
 214:	80 91 0e 01 	lds	r24, 0x010E
 218:	90 91 0f 01 	lds	r25, 0x010F
 21c:	89 2b       	or	r24, r25
 21e:	71 f4       	brne	.+28     	; 0x23c <fdevopen+0x8a>
 220:	f0 93 0f 01 	sts	0x010F, r31
 224:	e0 93 0e 01 	sts	0x010E, r30
 228:	80 91 10 01 	lds	r24, 0x0110
 22c:	90 91 11 01 	lds	r25, 0x0111
 230:	89 2b       	or	r24, r25
 232:	21 f4       	brne	.+8      	; 0x23c <fdevopen+0x8a>
 234:	f0 93 11 01 	sts	0x0111, r31
 238:	e0 93 10 01 	sts	0x0110, r30
 23c:	cf 01       	movw	r24, r30
 23e:	df 91       	pop	r29
 240:	cf 91       	pop	r28
 242:	1f 91       	pop	r17
 244:	0f 91       	pop	r16
 246:	08 95       	ret

00000248 <puts>:
 248:	0f 93       	push	r16
 24a:	1f 93       	push	r17
 24c:	cf 93       	push	r28
 24e:	df 93       	push	r29
 250:	e0 91 0e 01 	lds	r30, 0x010E
 254:	f0 91 0f 01 	lds	r31, 0x010F
 258:	23 81       	ldd	r18, Z+3	; 0x03
 25a:	21 ff       	sbrs	r18, 1
 25c:	1b c0       	rjmp	.+54     	; 0x294 <puts+0x4c>
 25e:	ec 01       	movw	r28, r24
 260:	00 e0       	ldi	r16, 0x00	; 0
 262:	10 e0       	ldi	r17, 0x00	; 0
 264:	89 91       	ld	r24, Y+
 266:	60 91 0e 01 	lds	r22, 0x010E
 26a:	70 91 0f 01 	lds	r23, 0x010F
 26e:	db 01       	movw	r26, r22
 270:	18 96       	adiw	r26, 0x08	; 8
 272:	ed 91       	ld	r30, X+
 274:	fc 91       	ld	r31, X
 276:	19 97       	sbiw	r26, 0x09	; 9
 278:	88 23       	and	r24, r24
 27a:	31 f0       	breq	.+12     	; 0x288 <puts+0x40>
 27c:	09 95       	icall
 27e:	89 2b       	or	r24, r25
 280:	89 f3       	breq	.-30     	; 0x264 <puts+0x1c>
 282:	0f ef       	ldi	r16, 0xFF	; 255
 284:	1f ef       	ldi	r17, 0xFF	; 255
 286:	ee cf       	rjmp	.-36     	; 0x264 <puts+0x1c>
 288:	8a e0       	ldi	r24, 0x0A	; 10
 28a:	09 95       	icall
 28c:	89 2b       	or	r24, r25
 28e:	11 f4       	brne	.+4      	; 0x294 <puts+0x4c>
 290:	c8 01       	movw	r24, r16
 292:	02 c0       	rjmp	.+4      	; 0x298 <puts+0x50>
 294:	8f ef       	ldi	r24, 0xFF	; 255
 296:	9f ef       	ldi	r25, 0xFF	; 255
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	1f 91       	pop	r17
 29e:	0f 91       	pop	r16
 2a0:	08 95       	ret

000002a2 <calloc>:
 2a2:	0f 93       	push	r16
 2a4:	1f 93       	push	r17
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	86 9f       	mul	r24, r22
 2ac:	80 01       	movw	r16, r0
 2ae:	87 9f       	mul	r24, r23
 2b0:	10 0d       	add	r17, r0
 2b2:	96 9f       	mul	r25, r22
 2b4:	10 0d       	add	r17, r0
 2b6:	11 24       	eor	r1, r1
 2b8:	c8 01       	movw	r24, r16
 2ba:	0e 94 6d 01 	call	0x2da	; 0x2da <malloc>
 2be:	ec 01       	movw	r28, r24
 2c0:	00 97       	sbiw	r24, 0x00	; 0
 2c2:	29 f0       	breq	.+10     	; 0x2ce <calloc+0x2c>
 2c4:	a8 01       	movw	r20, r16
 2c6:	60 e0       	ldi	r22, 0x00	; 0
 2c8:	70 e0       	ldi	r23, 0x00	; 0
 2ca:	0e 94 94 02 	call	0x528	; 0x528 <memset>
 2ce:	ce 01       	movw	r24, r28
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	1f 91       	pop	r17
 2d6:	0f 91       	pop	r16
 2d8:	08 95       	ret

000002da <malloc>:
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	82 30       	cpi	r24, 0x02	; 2
 2e0:	91 05       	cpc	r25, r1
 2e2:	10 f4       	brcc	.+4      	; 0x2e8 <malloc+0xe>
 2e4:	82 e0       	ldi	r24, 0x02	; 2
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	e0 91 14 01 	lds	r30, 0x0114
 2ec:	f0 91 15 01 	lds	r31, 0x0115
 2f0:	20 e0       	ldi	r18, 0x00	; 0
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	a0 e0       	ldi	r26, 0x00	; 0
 2f6:	b0 e0       	ldi	r27, 0x00	; 0
 2f8:	30 97       	sbiw	r30, 0x00	; 0
 2fa:	39 f1       	breq	.+78     	; 0x34a <malloc+0x70>
 2fc:	40 81       	ld	r20, Z
 2fe:	51 81       	ldd	r21, Z+1	; 0x01
 300:	48 17       	cp	r20, r24
 302:	59 07       	cpc	r21, r25
 304:	b8 f0       	brcs	.+46     	; 0x334 <malloc+0x5a>
 306:	48 17       	cp	r20, r24
 308:	59 07       	cpc	r21, r25
 30a:	71 f4       	brne	.+28     	; 0x328 <malloc+0x4e>
 30c:	82 81       	ldd	r24, Z+2	; 0x02
 30e:	93 81       	ldd	r25, Z+3	; 0x03
 310:	10 97       	sbiw	r26, 0x00	; 0
 312:	29 f0       	breq	.+10     	; 0x31e <malloc+0x44>
 314:	13 96       	adiw	r26, 0x03	; 3
 316:	9c 93       	st	X, r25
 318:	8e 93       	st	-X, r24
 31a:	12 97       	sbiw	r26, 0x02	; 2
 31c:	2c c0       	rjmp	.+88     	; 0x376 <malloc+0x9c>
 31e:	90 93 15 01 	sts	0x0115, r25
 322:	80 93 14 01 	sts	0x0114, r24
 326:	27 c0       	rjmp	.+78     	; 0x376 <malloc+0x9c>
 328:	21 15       	cp	r18, r1
 32a:	31 05       	cpc	r19, r1
 32c:	31 f0       	breq	.+12     	; 0x33a <malloc+0x60>
 32e:	42 17       	cp	r20, r18
 330:	53 07       	cpc	r21, r19
 332:	18 f0       	brcs	.+6      	; 0x33a <malloc+0x60>
 334:	a9 01       	movw	r20, r18
 336:	db 01       	movw	r26, r22
 338:	01 c0       	rjmp	.+2      	; 0x33c <malloc+0x62>
 33a:	ef 01       	movw	r28, r30
 33c:	9a 01       	movw	r18, r20
 33e:	bd 01       	movw	r22, r26
 340:	df 01       	movw	r26, r30
 342:	02 80       	ldd	r0, Z+2	; 0x02
 344:	f3 81       	ldd	r31, Z+3	; 0x03
 346:	e0 2d       	mov	r30, r0
 348:	d7 cf       	rjmp	.-82     	; 0x2f8 <malloc+0x1e>
 34a:	21 15       	cp	r18, r1
 34c:	31 05       	cpc	r19, r1
 34e:	f9 f0       	breq	.+62     	; 0x38e <malloc+0xb4>
 350:	28 1b       	sub	r18, r24
 352:	39 0b       	sbc	r19, r25
 354:	24 30       	cpi	r18, 0x04	; 4
 356:	31 05       	cpc	r19, r1
 358:	80 f4       	brcc	.+32     	; 0x37a <malloc+0xa0>
 35a:	8a 81       	ldd	r24, Y+2	; 0x02
 35c:	9b 81       	ldd	r25, Y+3	; 0x03
 35e:	61 15       	cp	r22, r1
 360:	71 05       	cpc	r23, r1
 362:	21 f0       	breq	.+8      	; 0x36c <malloc+0x92>
 364:	fb 01       	movw	r30, r22
 366:	93 83       	std	Z+3, r25	; 0x03
 368:	82 83       	std	Z+2, r24	; 0x02
 36a:	04 c0       	rjmp	.+8      	; 0x374 <malloc+0x9a>
 36c:	90 93 15 01 	sts	0x0115, r25
 370:	80 93 14 01 	sts	0x0114, r24
 374:	fe 01       	movw	r30, r28
 376:	32 96       	adiw	r30, 0x02	; 2
 378:	44 c0       	rjmp	.+136    	; 0x402 <malloc+0x128>
 37a:	fe 01       	movw	r30, r28
 37c:	e2 0f       	add	r30, r18
 37e:	f3 1f       	adc	r31, r19
 380:	81 93       	st	Z+, r24
 382:	91 93       	st	Z+, r25
 384:	22 50       	subi	r18, 0x02	; 2
 386:	31 09       	sbc	r19, r1
 388:	39 83       	std	Y+1, r19	; 0x01
 38a:	28 83       	st	Y, r18
 38c:	3a c0       	rjmp	.+116    	; 0x402 <malloc+0x128>
 38e:	20 91 12 01 	lds	r18, 0x0112
 392:	30 91 13 01 	lds	r19, 0x0113
 396:	23 2b       	or	r18, r19
 398:	41 f4       	brne	.+16     	; 0x3aa <malloc+0xd0>
 39a:	20 91 02 01 	lds	r18, 0x0102
 39e:	30 91 03 01 	lds	r19, 0x0103
 3a2:	30 93 13 01 	sts	0x0113, r19
 3a6:	20 93 12 01 	sts	0x0112, r18
 3aa:	20 91 00 01 	lds	r18, 0x0100
 3ae:	30 91 01 01 	lds	r19, 0x0101
 3b2:	21 15       	cp	r18, r1
 3b4:	31 05       	cpc	r19, r1
 3b6:	41 f4       	brne	.+16     	; 0x3c8 <malloc+0xee>
 3b8:	2d b7       	in	r18, 0x3d	; 61
 3ba:	3e b7       	in	r19, 0x3e	; 62
 3bc:	40 91 04 01 	lds	r20, 0x0104
 3c0:	50 91 05 01 	lds	r21, 0x0105
 3c4:	24 1b       	sub	r18, r20
 3c6:	35 0b       	sbc	r19, r21
 3c8:	e0 91 12 01 	lds	r30, 0x0112
 3cc:	f0 91 13 01 	lds	r31, 0x0113
 3d0:	e2 17       	cp	r30, r18
 3d2:	f3 07       	cpc	r31, r19
 3d4:	a0 f4       	brcc	.+40     	; 0x3fe <malloc+0x124>
 3d6:	2e 1b       	sub	r18, r30
 3d8:	3f 0b       	sbc	r19, r31
 3da:	28 17       	cp	r18, r24
 3dc:	39 07       	cpc	r19, r25
 3de:	78 f0       	brcs	.+30     	; 0x3fe <malloc+0x124>
 3e0:	ac 01       	movw	r20, r24
 3e2:	4e 5f       	subi	r20, 0xFE	; 254
 3e4:	5f 4f       	sbci	r21, 0xFF	; 255
 3e6:	24 17       	cp	r18, r20
 3e8:	35 07       	cpc	r19, r21
 3ea:	48 f0       	brcs	.+18     	; 0x3fe <malloc+0x124>
 3ec:	4e 0f       	add	r20, r30
 3ee:	5f 1f       	adc	r21, r31
 3f0:	50 93 13 01 	sts	0x0113, r21
 3f4:	40 93 12 01 	sts	0x0112, r20
 3f8:	81 93       	st	Z+, r24
 3fa:	91 93       	st	Z+, r25
 3fc:	02 c0       	rjmp	.+4      	; 0x402 <malloc+0x128>
 3fe:	e0 e0       	ldi	r30, 0x00	; 0
 400:	f0 e0       	ldi	r31, 0x00	; 0
 402:	cf 01       	movw	r24, r30
 404:	df 91       	pop	r29
 406:	cf 91       	pop	r28
 408:	08 95       	ret

0000040a <free>:
 40a:	cf 93       	push	r28
 40c:	df 93       	push	r29
 40e:	00 97       	sbiw	r24, 0x00	; 0
 410:	09 f4       	brne	.+2      	; 0x414 <free+0xa>
 412:	87 c0       	rjmp	.+270    	; 0x522 <__stack+0x23>
 414:	fc 01       	movw	r30, r24
 416:	32 97       	sbiw	r30, 0x02	; 2
 418:	13 82       	std	Z+3, r1	; 0x03
 41a:	12 82       	std	Z+2, r1	; 0x02
 41c:	c0 91 14 01 	lds	r28, 0x0114
 420:	d0 91 15 01 	lds	r29, 0x0115
 424:	20 97       	sbiw	r28, 0x00	; 0
 426:	81 f4       	brne	.+32     	; 0x448 <free+0x3e>
 428:	20 81       	ld	r18, Z
 42a:	31 81       	ldd	r19, Z+1	; 0x01
 42c:	28 0f       	add	r18, r24
 42e:	39 1f       	adc	r19, r25
 430:	80 91 12 01 	lds	r24, 0x0112
 434:	90 91 13 01 	lds	r25, 0x0113
 438:	82 17       	cp	r24, r18
 43a:	93 07       	cpc	r25, r19
 43c:	79 f5       	brne	.+94     	; 0x49c <free+0x92>
 43e:	f0 93 13 01 	sts	0x0113, r31
 442:	e0 93 12 01 	sts	0x0112, r30
 446:	6d c0       	rjmp	.+218    	; 0x522 <__stack+0x23>
 448:	de 01       	movw	r26, r28
 44a:	20 e0       	ldi	r18, 0x00	; 0
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	ae 17       	cp	r26, r30
 450:	bf 07       	cpc	r27, r31
 452:	50 f4       	brcc	.+20     	; 0x468 <free+0x5e>
 454:	12 96       	adiw	r26, 0x02	; 2
 456:	4d 91       	ld	r20, X+
 458:	5c 91       	ld	r21, X
 45a:	13 97       	sbiw	r26, 0x03	; 3
 45c:	9d 01       	movw	r18, r26
 45e:	41 15       	cp	r20, r1
 460:	51 05       	cpc	r21, r1
 462:	09 f1       	breq	.+66     	; 0x4a6 <free+0x9c>
 464:	da 01       	movw	r26, r20
 466:	f3 cf       	rjmp	.-26     	; 0x44e <free+0x44>
 468:	b3 83       	std	Z+3, r27	; 0x03
 46a:	a2 83       	std	Z+2, r26	; 0x02
 46c:	40 81       	ld	r20, Z
 46e:	51 81       	ldd	r21, Z+1	; 0x01
 470:	84 0f       	add	r24, r20
 472:	95 1f       	adc	r25, r21
 474:	8a 17       	cp	r24, r26
 476:	9b 07       	cpc	r25, r27
 478:	71 f4       	brne	.+28     	; 0x496 <free+0x8c>
 47a:	8d 91       	ld	r24, X+
 47c:	9c 91       	ld	r25, X
 47e:	11 97       	sbiw	r26, 0x01	; 1
 480:	84 0f       	add	r24, r20
 482:	95 1f       	adc	r25, r21
 484:	02 96       	adiw	r24, 0x02	; 2
 486:	91 83       	std	Z+1, r25	; 0x01
 488:	80 83       	st	Z, r24
 48a:	12 96       	adiw	r26, 0x02	; 2
 48c:	8d 91       	ld	r24, X+
 48e:	9c 91       	ld	r25, X
 490:	13 97       	sbiw	r26, 0x03	; 3
 492:	93 83       	std	Z+3, r25	; 0x03
 494:	82 83       	std	Z+2, r24	; 0x02
 496:	21 15       	cp	r18, r1
 498:	31 05       	cpc	r19, r1
 49a:	29 f4       	brne	.+10     	; 0x4a6 <free+0x9c>
 49c:	f0 93 15 01 	sts	0x0115, r31
 4a0:	e0 93 14 01 	sts	0x0114, r30
 4a4:	3e c0       	rjmp	.+124    	; 0x522 <__stack+0x23>
 4a6:	d9 01       	movw	r26, r18
 4a8:	13 96       	adiw	r26, 0x03	; 3
 4aa:	fc 93       	st	X, r31
 4ac:	ee 93       	st	-X, r30
 4ae:	12 97       	sbiw	r26, 0x02	; 2
 4b0:	4d 91       	ld	r20, X+
 4b2:	5d 91       	ld	r21, X+
 4b4:	a4 0f       	add	r26, r20
 4b6:	b5 1f       	adc	r27, r21
 4b8:	ea 17       	cp	r30, r26
 4ba:	fb 07       	cpc	r31, r27
 4bc:	79 f4       	brne	.+30     	; 0x4dc <free+0xd2>
 4be:	80 81       	ld	r24, Z
 4c0:	91 81       	ldd	r25, Z+1	; 0x01
 4c2:	84 0f       	add	r24, r20
 4c4:	95 1f       	adc	r25, r21
 4c6:	02 96       	adiw	r24, 0x02	; 2
 4c8:	d9 01       	movw	r26, r18
 4ca:	11 96       	adiw	r26, 0x01	; 1
 4cc:	9c 93       	st	X, r25
 4ce:	8e 93       	st	-X, r24
 4d0:	82 81       	ldd	r24, Z+2	; 0x02
 4d2:	93 81       	ldd	r25, Z+3	; 0x03
 4d4:	13 96       	adiw	r26, 0x03	; 3
 4d6:	9c 93       	st	X, r25
 4d8:	8e 93       	st	-X, r24
 4da:	12 97       	sbiw	r26, 0x02	; 2
 4dc:	e0 e0       	ldi	r30, 0x00	; 0
 4de:	f0 e0       	ldi	r31, 0x00	; 0
 4e0:	8a 81       	ldd	r24, Y+2	; 0x02
 4e2:	9b 81       	ldd	r25, Y+3	; 0x03
 4e4:	00 97       	sbiw	r24, 0x00	; 0
 4e6:	19 f0       	breq	.+6      	; 0x4ee <free+0xe4>
 4e8:	fe 01       	movw	r30, r28
 4ea:	ec 01       	movw	r28, r24
 4ec:	f9 cf       	rjmp	.-14     	; 0x4e0 <free+0xd6>
 4ee:	ce 01       	movw	r24, r28
 4f0:	02 96       	adiw	r24, 0x02	; 2
 4f2:	28 81       	ld	r18, Y
 4f4:	39 81       	ldd	r19, Y+1	; 0x01
 4f6:	82 0f       	add	r24, r18
 4f8:	93 1f       	adc	r25, r19
 4fa:	20 91 12 01 	lds	r18, 0x0112
 4fe:	30 91 13 01 	lds	r19, 0x0113
 502:	28 17       	cp	r18, r24
 504:	39 07       	cpc	r19, r25
 506:	69 f4       	brne	.+26     	; 0x522 <__stack+0x23>
 508:	30 97       	sbiw	r30, 0x00	; 0
 50a:	29 f4       	brne	.+10     	; 0x516 <__stack+0x17>
 50c:	10 92 15 01 	sts	0x0115, r1
 510:	10 92 14 01 	sts	0x0114, r1
 514:	02 c0       	rjmp	.+4      	; 0x51a <__stack+0x1b>
 516:	13 82       	std	Z+3, r1	; 0x03
 518:	12 82       	std	Z+2, r1	; 0x02
 51a:	d0 93 13 01 	sts	0x0113, r29
 51e:	c0 93 12 01 	sts	0x0112, r28
 522:	df 91       	pop	r29
 524:	cf 91       	pop	r28
 526:	08 95       	ret

00000528 <memset>:
 528:	dc 01       	movw	r26, r24
 52a:	01 c0       	rjmp	.+2      	; 0x52e <memset+0x6>
 52c:	6d 93       	st	X+, r22
 52e:	41 50       	subi	r20, 0x01	; 1
 530:	50 40       	sbci	r21, 0x00	; 0
 532:	e0 f7       	brcc	.-8      	; 0x52c <memset+0x4>
 534:	08 95       	ret

00000536 <_exit>:
 536:	f8 94       	cli

00000538 <__stop_program>:
 538:	ff cf       	rjmp	.-2      	; 0x538 <__stop_program>
